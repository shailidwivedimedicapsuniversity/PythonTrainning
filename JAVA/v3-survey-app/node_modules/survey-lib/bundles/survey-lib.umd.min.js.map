{"version":3,"sources":["ng://survey-lib/lib/survey-lib.service.ts","ng://survey-lib/lib/pages/survey-response.model.ts","ng://survey-lib/lib/shared/pages-services/pages.service.ts","ng://survey-lib/lib/survey-lib.component.ts","ng://survey-lib/lib/shared/persistence.service.ts","ng://survey-lib/lib/pages/pages.component.ts","ng://survey-lib/lib/pages/welcome-page/welcome-page.component.ts","node_modules/tslib/tslib.es6.js","ng://survey-lib/lib/pages/questionnaire/expression-builder.ts","ng://survey-lib/lib/pages/questionnaire/mandatory-question-validation.ts","ng://survey-lib/lib/pages/questionnaire/questionnaire.component.ts","ng://survey-lib/lib/pages/thank-you-page/thank-you-page.component.ts","ng://survey-lib/lib/pages/questionnaire/choice/choice.component.ts","ng://survey-lib/lib/pages/questionnaire/yes-no/yes-no.component.ts","ng://survey-lib/lib/pages/questionnaire/short-text/short-text.component.ts","ng://survey-lib/lib/pages/questionnaire/long-text/long-text.component.ts","ng://survey-lib/lib/pages/questionnaire/statement/statement.component.ts","ng://survey-lib/lib/pages/questionnaire/email/email.component.ts","ng://survey-lib/lib/pages/questionnaire/nps/nps.component.ts","ng://survey-lib/lib/pages/questionnaire/date/date.component.ts","ng://survey-lib/lib/pages/questionnaire/rating/rating.component.ts","ng://survey-lib/lib/pages/questionnaire/drop-down/drop-down.component.ts","ng://survey-lib/lib/pages/questionnaire/contact-form/contact-form.component.ts","ng://survey-lib/lib/pages/questionnaire/address/address.component.ts","ng://survey-lib/lib/pages/questionnaire/phone/phone.component.ts","ng://survey-lib/lib/pages/questionnaire/name/name.component.ts","ng://survey-lib/lib/pages/questionnaire/agree-disagree/agree-disagree.component.ts","ng://survey-lib/lib/pages/store/survey-actions.ts","ng://survey-lib/lib/pages/store/survey.reducers.ts","ng://survey-lib/lib/pages/questionnaire/website/website.component.ts","ng://survey-lib/lib/pages/questionnaire/number/number.component.ts","ng://survey-lib/lib/shared/pipe/shuffle.pipe.ts","ng://survey-lib/lib/shared/directives/auto-focus.directive.ts","ng://survey-lib/lib/pages/default-thank-you-page/default-thank-you-page.component.ts","ng://survey-lib/lib/survey-lib.module.ts","ng://survey-lib/lib/pages/pages.model.ts"],"names":["SurveyLibService","this","enableSubmit","defaultThankYouPage","isEmbededInDesigner","questionAnsweredEventEmitter","EventEmitter","isQuestionCardCampaign","currentElementEventEmitter","currentElement","CurrentElement","currentPageIndex","currentQuestionIndex","prototype","initializeSurveyTheme","selectedThemeModel","font","name","url","console","log","link","document","createElement","type","rel","href","head","appendChild","documentElement","style","setProperty","toString","colors","backgroundColor","primaryColor","primaryColorDark","footerBackgroundColor","footerPrimaryColor","footerSecondaryColor","textColorPrimary","textColorSecondary","primaryButtonTextColor","Injectable","args","providedIn","SurveyResponseModel","SurveyResponses","PagesService","previousQuestion","nextQuestion","nextPageEvent","surveyResponses","sequenceOfQuestionTraversed","persistSurvey","response","index","findIndex","surveyResponse","identifier","push","removeResponsesOfExcludedQuestionIds","payload","filter","find","questionId","getResponse","res","SurveyLibComponent","surveyLibraryService","pageService","surveyResponseEmitter","responseFromQuestionCardCampaign","undefined","ngOnInit","surveyContent","pages","pageName","splice","storeResponseFromQuestionCardCampaign","selectedTheme","emitResponse","emit","question","questions","questionType","rating","answer","Component","selector","template","Output","Input","PersistenceService","set","key","data","localStorage","setItem","JSON","stringify","e","error","get","parse","getItem","PagesComponent","pagesService","surveyLibServices","WELCOME_PAGE","QUESTIONNAIRE_PAGE","THANK_YOU_PAGE","nextPage","_this","animateExitNext","setTimeout","stage","previousPage","submitSurvey","length","setThemeForSurvey","surveyResponseModel","fontUrl","ngOnDestroy","getSurveySubscription","closed","unsubscribe","submitSurveySubscription","goTo","questionIndex","number","getElementById","className","classList","remove","encapsulation","ViewEncapsulation","None","WelcomePageComponent","add","__assign","Object","assign","t","s","i","n","arguments","p","hasOwnProperty","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","ar","__spread","concat","ExpressionBuilder","IS_EQUALS_TO","IS_NOT_EQUALS_TO","IS_LESS_THAN","IS_GREATER_THAN","IS_LESS_THAN_OR_EQUALS_TO","IS_GREATER_THAN_OR_EQUALS_TO","IS","IS_NOT","IS_ON","IS_NOT_ON","IS_BEFORE","IS_AFTER","IS_BEFORE_OR_ON","IS_AFTER_OR_ON","IS_BETWEEN","IS_BEGINS_WITH","IS_ENDS_WITH","CONTAINS","DOES_NOT_CONTAINS","build","conditions","responses","expression","condition","result","this_1","evaluateChoiceConditions","_if","relationWithNextCondition","conditions_1","tslib_1.__values","conditions_1_1","this_2","evaluateYesNoConditions","conditions_2","conditions_2_1","this_3","evaluateRatingConditions","warn","this_4","evaluateNPSConditions","this_5","evaluateDateConditions","conditions_3","conditions_3_1","this_6","evaluateTextConditions","conditions_4","conditions_4_1","currentResponse","choices","some","choice","choiceId","RegExp","test","thisDate","Date","responseDate","startsWith","endsWith","includes","MandatoryQuestionValidation","isQuestionAnswered","isAddressFormAnswered","isChoiceQuestionAnswered","isContactFormAnswered","isDateQuestionAnswered","isDropDownQuestionAnswered","isEmailQuestionAnswered","isTextQuestionAnswered","isRatingQuestionAnswered","isStatementQuestionAnswered","isYesNoQuestionAnswered","answerId","QuestionnaireComponent","surveyLibService","previousPageEvent","submitResponse","mandatoryQuestion","expressionBuilder","isMandatoryQuestionAnswered","questionnairePage","previousQuestionSubscription","subscribe","nextQuestionSubscription","skipAnimation","attributes","required","jump","showErrorMessage","updateProgressBar","animatePreviousExit","previousQuestionIndex","sequence","logicJumps","blocks","logicJump","defaultJump","block","eval","jumpIndex","thatIndex","isBackwardJump","backwardJump","forwardJump","_b","_c","removeResponses","questionIndexes","excludeQuestionIds","questionIndexes_1","questionIndexes_1_1","innerText","x","requiredErrorMessage","replace","ThankYouPageComponent","ChoiceComponent","isActive","submitEvent","defineProperty","_isMultipleChoice","choiceQuestion","forEach","isChecked","submit","selectedOptions","map","opt","changeSelection","c","onClickOthers","others","showCheckbox","onInputOthers","onOptionSelectionChange","$event","numberOfSelection","onSingleSelect","isDisabled","selection","exact","rangeTo","YesNoComponent","onSelect","yesNoQuestion","ShortTextComponent","onInputValue","shortText","skipQuestion","LongTextComponent","longText","StatementComponent","onSubmit","statement","onSkip","EmailComponent","EMAIL_REGEXP","isValidEmail","isValidEmailId","email","NpsComponent","npsQuestion","DateComponent","platform","navigator","onDateSelect","date","dateQuestion","RatingComponent","ngAfterViewInit","ratingQuestion","steps","els","getElementsByTagName","all","onRatingSelect","ratingIcon","DropDownComponent","text","dropDown","getChoiceIdByText","getChoiceById","toggleCustomDropDown","toggle","onDropDownSelection","selectedOptionsEl","j","ContactFormComponent","createForm","formGroup","keys","contactForm","prop","FormControl","mapValidators","validation","form","FormGroup","validators","formValidators","Validators","min","contactInfo","objectProps","AddressComponent","PhoneComponent","phone","NameComponent","AgreeDisagreeComponent","agreeDisagree","SAVE_CHOICE","SAVE_EMAIL","SAVE_AGREE_DISAGREE","SAVE_PHONE","SAVE_ADDRESS","SAVE_DATE","SAVE_NPS","SAVE_YES_NO","SAVE_RATING","SAVE_LONG_TEXT","SAVE_SHORT_TEXT","RESET_RESPONSE","REMOVE_RESPONSES","REMOVE_RESPONSES_OF_EXCLUDED_QUESTION_IDS","surveyResponseInitialState","INITIAL_STATE","surveyReducers","state","action","SurveyActions.SAVE_CHOICE","SurveyActions.SAVE_NPS","SurveyActions.SAVE_YES_NO","SurveyActions.SAVE_RATING","SurveyActions.SAVE_DATE","SurveyActions.SAVE_EMAIL","SurveyActions.SAVE_PHONE","SurveyActions.SAVE_AGREE_DISAGREE","SurveyActions.SAVE_LONG_TEXT","SurveyActions.SAVE_SHORT_TEXT","SurveyActions.SAVE_ADDRESS","SurveyActions.REMOVE_RESPONSES","removeResponse","SurveyActions.REMOVE_RESPONSES_OF_EXCLUDED_QUESTION_IDS","SurveyActions.RESET_RESPONSE","WebsiteComponent","URL_REGEXP","isValidUrl","website","NumberComponent","ShufflePipe","transform","items","sort","Math","random","Pipe","pure","AutofocusDirective","el","nativeElement","focus","Directive","ElementRef","DefaultThankYouPageComponent","SurveyLibModule","NgModule","declarations","imports","CommonModule","ReactiveFormsModule","FormsModule","StoreModule","forRoot","survey","exports","providers","schemas","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","PagesModel","_testMode","_id","_userId","_themeId","_logoUrl","_surveyContent","SurveyContent","_name","_description","_pages","SelectedThemeModel","Font","Colors","Page","_pageName","_properties","_questions","Question","Others","LogicJumps","Block","Condition","RankingItem","ContactForm","Validation","Column","Picture","_picture","AddressForm","_text","_required","Row","Attributes","Selection","Step","Choice","Properties","_buttonText","_subHeadingValue","_headingValue","_backgroundImage"],"mappings":"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","sourcesContent":["import {EventEmitter, Injectable} from '@angular/core';\nimport {SelectedThemeModel} from './pages/pages.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveyLibService {\n\n  public currentElement:CurrentElement;\n  public enableSubmit: boolean = false;\n  public defaultThankYouPage:boolean = false;\n  public isEmbededInDesigner: boolean = false;\n\n  public questionAnsweredEventEmitter: EventEmitter<any> = new EventEmitter<any>();\n  public isQuestionCardCampaign: boolean = false;\n\n  public currentElementEventEmitter: EventEmitter<CurrentElement> = new EventEmitter<CurrentElement>();\n\n  constructor() {\n    this.currentElement = new CurrentElement();\n    this.currentElement.currentPageIndex = 0;\n    this.currentElement.currentQuestionIndex = 0;\n  }\n\n  public initializeSurveyTheme(selectedThemeModel : SelectedThemeModel){\n    selectedThemeModel.font = {\n      name:'Muli',\n        url:'https://fonts.googleapis.com/css?family=Muli&display=swap'\n    };\n    console.log(selectedThemeModel);\n    let link = document.createElement('link');\n    link.type = \"text/css\";\n    link.rel = \"stylesheet\";\n    link.href = selectedThemeModel.font.url;\n    document.head.appendChild(link);\n    console.log(document.head);\n    document.documentElement.style.setProperty('--font-family', selectedThemeModel.font.name.toString()+',sans-serif');\n    document.documentElement.style.setProperty('--bg-color', selectedThemeModel.colors.backgroundColor);\n    document.documentElement.style.setProperty('--primary-color', selectedThemeModel.colors.primaryColor);\n    document.documentElement.style.setProperty('--primary-color-dark', selectedThemeModel.colors.primaryColorDark);\n    document.documentElement.style.setProperty('--footer-bg-color', selectedThemeModel.colors.footerBackgroundColor);\n    document.documentElement.style.setProperty('--footer-primary-color', selectedThemeModel.colors.footerPrimaryColor);\n    document.documentElement.style.setProperty('--footer-secondary-color', selectedThemeModel.colors.footerSecondaryColor);\n    document.documentElement.style.setProperty('--text-color-primary', selectedThemeModel.colors.textColorPrimary);\n    document.documentElement.style.setProperty('--text-color-secondary', selectedThemeModel.colors.textColorSecondary);\n    document.documentElement.style.setProperty('--primary-button-text-color', selectedThemeModel.colors.primaryButtonTextColor);\n    // document.documentElement.style.setProperty('--organisation-logo', selectedThemeModel.organisationLogo);\n\n  }\n\n}\n\nexport class CurrentElement {\n  public currentPageIndex: number;\n  public currentQuestionIndex: number;\n}\n","export class SurveyResponseModel {\n\n  public surveyId: string;\n  public channel: string;\n  public surveyResponses: SurveyResponses[];\n\n}\n\nexport class ResponseMetaInformation {\n  public startedAt: string;\n  public completedAt: string;\n  public noOfQuestionAnswered: string;\n  public platform: string;\n  public surveyToken: string;\n  public timeTakenInSeconds: string;\n}\n\nexport class SurveyResponses {\n  public identifier?: string;\n  public question?: string;\n  public questionType?: string;\n  public questionId?: any;\n  public answer?: string;\n  public answerId?: any;\n  public rating?: number;\n  public contactInfo?: any[];\n  public addressInfo?: AddressInfo;\n  public choices?: any[];\n}\n\n\n\nexport class AddressInfo {\n  public street1: string;\n  public street2: string;\n  public city: string;\n  public state: string;\n  public country: string;\n  public zipCode: number;\n}\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {SurveyResponses} from '../../pages/survey-response.model';\nimport {Store} from '@ngrx/store';\nimport * as surveyActions from '../../pages/store/survey-actions';\n\n@Injectable()\nexport class PagesService{\n\n  private readonly surveyUrl: string;\n  private readonly submitResponseUrl: string;\n  public previousQuestion: EventEmitter<number> = new EventEmitter();\n  public nextQuestion: EventEmitter<number> = new EventEmitter();\n  public nextPageEvent: EventEmitter<string> = new EventEmitter();\n  public surveyResponses: SurveyResponses[] = [];\n  public sequenceOfQuestionTraversed: number[] = [];\n\n  public stage: string;\n\n  constructor() {\n\n  }\n\n  public persistSurvey(response : SurveyResponses){\n    let index = this.surveyResponses.findIndex(surveyResponse => surveyResponse.identifier === response.identifier);\n    if (index !== -1) {\n      this.surveyResponses[index] = response;\n    }else {\n      this.surveyResponses.push(response);\n    }\n  }\n\n  public removeResponsesOfExcludedQuestionIds(payload: any[]) {\n    return this.surveyResponses.filter(response => payload.find(questionId => questionId == response.questionId));\n  }\n\n\n  public getResponse(identifier: string){\n    console.log(this.surveyResponses);\n\n    let index = this.surveyResponses.findIndex(res => res.identifier == identifier);\n    if (index > -1) {\n      return this.surveyResponses[index];\n    }else {\n      return new SurveyResponses();\n    }\n  }\n\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {PagesModel, SurveyContent} from './pages/pages.model';\nimport {SurveyLibService} from './survey-lib.service';\nimport {PagesService} from './shared/pages-services/pages.service';\nimport * as surveyActions from './pages/store/survey-actions';\nimport {SurveyResponses} from './pages/survey-response.model';\nimport {YesNo} from './pages/store/survey-actions';\n\n@Component({\n  selector: 'omoto-survey-lib',\n  template: `\n    <app-pages [surveyContent]=\"surveyContent\"\n               (surveyResponseEmitter)=\"emitResponse($event)\"\n               [isTestMode]=\"testMode\"\n               [surveyTheme]=\"theme\"></app-pages>\n  `,\n  styles: []\n})\nexport class SurveyLibComponent implements OnInit {\n\n  @Output()\n  public surveyResponseEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input()\n  public surveyContent: SurveyContent;\n\n  @Input()\n  public testMode: boolean;\n\n  @Input()\n  public theme: string;\n\n  @Input()\n  public currentPageIndex: number;\n\n  @Input()\n  public currentQuestionIndex: number;\n\n  @Input()\n  public isQuestionCardCampaign: boolean = false;\n\n  @Input()\n  public responseFromQuestionCardCampaign: any = undefined;\n\n\n  constructor(private surveyLibraryService: SurveyLibService,\n              public pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    if (this.isQuestionCardCampaign) {\n      console.log('Inside question card campaign!');\n      if (this.surveyContent.pages[0].pageName === 'Welcome page') {\n        this.surveyContent.pages.splice(0, 1);\n      }\n      this.storeResponseFromQuestionCardCampaign();\n      this.surveyLibraryService.isQuestionCardCampaign = true;\n    }\n    this.surveyLibraryService.initializeSurveyTheme(this.surveyContent.selectedTheme);\n  }\n\n  emitResponse(surveyResponse: any) {\n    this.surveyResponseEmitter.emit(surveyResponse);\n  }\n\n\n  storeResponseFromQuestionCardCampaign() {\n    let question = this.surveyContent.pages[0].questions[0];\n    let surveyResponse = new SurveyResponses();\n    surveyResponse.question = question.question;\n    surveyResponse.questionType = question.questionType;\n    surveyResponse.identifier = question.identifier;\n    surveyResponse.questionId = question.questionId;\n\n    switch (question.questionType) {\n      case 'Nps':\n      case 'Rating':\n        surveyResponse.rating = this.responseFromQuestionCardCampaign;\n        this.pageService.persistSurvey(surveyResponse);\n        break;\n\n      case 'Yes / No':\n        surveyResponse.answer = this.responseFromQuestionCardCampaign;\n        this.pageService.persistSurvey(surveyResponse);\n\n        break;\n\n      case 'Statement':\n        surveyResponse.answer = this.responseFromQuestionCardCampaign;\n        this.pageService.persistSurvey(surveyResponse);\n        break;\n\n      case 'Date':\n        surveyResponse.answer = this.responseFromQuestionCardCampaign;\n        this.pageService.persistSurvey(surveyResponse);\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class PersistenceService {\n\n  static set(key: string, data: any): void {\n    try {\n      localStorage.setItem(key, JSON.stringify(data));\n    } catch (e) {\n      console.error('Error saving to localStorage', e);\n    }\n  }\n\n  static get(key: string) {\n    try {\n      return JSON.parse(localStorage.getItem(key));\n    } catch (e) {\n      console.error('Error getting data from localStorage', e);\n      return null;\n    }\n  }\n\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {PagesService} from '../shared/pages-services/pages.service';\nimport {SurveyContent} from './pages.model';\nimport {SurveyResponseModel} from './survey-response.model';\nimport {Subscription} from 'rxjs';\nimport {SurveyLibService} from '../survey-lib.service';\nimport {CurrentState} from './store/survey-actions';\n\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.css'],\n  encapsulation: ViewEncapsulation.None\n\n})\nexport class PagesComponent implements OnInit, OnDestroy {\n\n  /*@Input()\n  public pagesModel: PagesModel;*/\n\n  @Output()\n  public surveyResponseEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  @Input()\n  public surveyContent: SurveyContent;\n\n  @Input()\n  public isTestMode: boolean;\n\n  @Input()\n  public surveyTheme: string;\n\n\n\n  fontUrl:string;\n\n  readonly WELCOME_PAGE = 'Welcome page';\n  readonly QUESTIONNAIRE_PAGE = 'Questionnaire page';\n  readonly THANK_YOU_PAGE = 'Thank you page';\n\n  surveyResponseModel: SurveyResponseModel;\n\n  private submitSurveySubscription: Subscription;\n  private getSurveySubscription: Subscription;\n\n\n  constructor(public pagesService: PagesService,\n              public surveyLibServices: SurveyLibService) {\n\n  }\n\n  nextPage() {\n\n    console.log('inside nextPage Pages.component');\n    this.animateExitNext(this.WELCOME_PAGE);\n    setTimeout(()=>{\n      this.pagesService.stage = 'entry-next';\n      this.surveyLibServices.currentElement.currentPageIndex = this.surveyLibServices.currentElement.currentPageIndex + 1;\n      this.surveyLibServices.currentElementEventEmitter.emit(this.surveyLibServices.currentElement);\n    },400)\n\n  }\n\n  previousPage() {\n    this.surveyLibServices.currentElement.currentPageIndex = this.surveyLibServices.currentElement.currentPageIndex - 1;\n    this.surveyLibServices.currentElementEventEmitter.emit(this.surveyLibServices.currentElement);\n  }\n\n  submitSurvey() {\n    console.log('In submit survey');\n    if (this.surveyLibServices.currentElement.currentPageIndex != this.surveyContent.pages.length - 1) {\n      this.surveyLibServices.currentElement.currentPageIndex++;\n    } else {\n      this.surveyLibServices.defaultThankYouPage = true;\n\n    }\n    console.log(JSON.stringify(this.pagesService.surveyResponses));\n    this.surveyResponseEmitter.emit(this.pagesService.surveyResponses);\n    /* console.log(response);\n     this.surveyLibServices.currentElement.currentPageIndex = this.surveyLibServices.currentElement.currentPageIndex + 1;\n     this.surveyResponseModel.surveyResponses = response;*/\n    /*this.submitSurveySubscription = this.pagesService.submitSurvey(this.surveyResponseModel)\n      .subscribe(response => console.log(response), error => console.log(error));*/\n  }\n\n\n  ngOnInit(): void {\n    this.setThemeForSurvey();\n    this.surveyResponseModel = new SurveyResponseModel();\n    this.surveyLibServices.currentElementEventEmitter.emit(this.surveyLibServices.currentElement);\n    this.fontUrl = this.surveyContent.selectedTheme.font.url;\n  }\n\n\n  private setThemeForSurvey() {\n    /*//this.cssUrl = '/assets/'+this.theme+'.css';\n    this.cssUrl = '/assets/theme4.css';\n    let element;\n    element = document.createElement('link');\n    element.rel = 'stylesheet';\n    element.type = 'text/css';\n    element.href = this.cssUrl;\n    document.getElementsByTagName('head')[0].appendChild(element);*/\n  }\n\n  previousQuestion() {\n    this.pagesService.previousQuestion.emit();\n  }\n\n  nextQuestion() {\n    this.pagesService.nextQuestion.emit();\n\n  }\n\n  ngOnDestroy(): void {\n    if (this.getSurveySubscription != null && !this.getSurveySubscription.closed) {\n      this.getSurveySubscription.unsubscribe();\n    }\n\n    if (this.submitSurveySubscription != null && !this.submitSurveySubscription.closed) {\n      this.submitSurveySubscription.unsubscribe();\n    }\n  }\n\n\n\n\n  goTo(questionIndex: number) {\n    this.nextQuestion();\n    let number = this.surveyLibServices.currentElement.currentQuestionIndex - questionIndex;\n    console.log(number);\n    console.log('Clicked question index: ' + questionIndex);\n  }\n\n\n  private animateExitNext(questionType: string) {\n    console.log(\"inside animateExitNext\");\n    console.log(questionType);\n    if(questionType == 'Welcome page') {\n      console.log(\"inside if statement in animateExitNext method\");\n      console.log(document.getElementById('welcome-page').className);\n      document.getElementById('welcome-page').classList.remove('entry-next');\n      console.log(document.getElementById('welcome-page').className);\n        document.getElementById('welcome-page').className = 'exit-next';\n        document.getElementById('welcome-page-delay').className = 'exit-next-delay';\n      console.log(document.getElementById('welcome-page').className);\n    }\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {PersistenceService} from '../../shared/persistence.service';\nimport {PagesComponent} from '../pages.component';\nimport {Page} from '../pages.model';\nimport {PagesService} from '../../shared/pages-services/pages.service';\nimport {Reset} from '../store/survey-actions';\n\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.css'],\n})\n\nexport class WelcomePageComponent implements OnInit,OnDestroy{\n\n  @Input()\n  welcomePage: Page;\n\n  @Output()\n  public nextPageEvent: EventEmitter<string>;\n  showPrev: true;\n\n\n\n  constructor(private pageService: PagesService) {\n    this.nextPageEvent = pageService.nextPageEvent;\n  }\n\n  ngOnInit(): void {\n    if(this.pageService.stage != 'entry-next'){\n    document.getElementById(\"welcome-page\").className = 'entry-next';\n    document.getElementById(\"welcome-page-delay\").className = 'entry-next-delay';\n    }else {\n      document.getElementById(\"welcome-page\").className = 'entry-previous-delay';\n      document.getElementById(\"welcome-page-delay\").className = 'entry-previous';\n    }\n  }\n\n  nextPage() {\n    //this.pageService.store.dispatch(new Reset());\n    document.getElementById(\"btn-primary\").classList.add('blink-btn-animation');\n    setTimeout(()=>{\n      this.nextPageEvent.emit();\n    }, 350);\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Condition} from '../pages.model';\nimport {SurveyResponses} from '../survey-response.model';\n\nexport class ExpressionBuilder {\n\n    private readonly IS_EQUALS_TO: string = 'Is equals to';\n    private readonly IS_NOT_EQUALS_TO: string = 'Is not equals to';\n    private readonly IS_LESS_THAN: string = 'Is less than';\n    private readonly IS_GREATER_THAN: string = 'Is greater than';\n    private readonly IS_LESS_THAN_OR_EQUALS_TO: string = 'Is less than or equals to';\n    private readonly IS_GREATER_THAN_OR_EQUALS_TO: string = 'Is grater than or equals to';\n    private readonly IS: string = 'Is';\n    private readonly IS_NOT: string = 'Is not';\n    private readonly IS_ON: string = \"Is on\";\n    private readonly IS_NOT_ON: string = \"Is not on\";\n    private readonly IS_BEFORE: string = \"Is before\";\n    private readonly IS_AFTER: string = \"Is after\";\n    private readonly IS_BEFORE_OR_ON: string = \"Is before or on\";\n    private readonly IS_AFTER_OR_ON: string = \"Is after or on\";\n    private readonly IS_BETWEEN: string = \"Is between\";\n    private readonly IS_BEGINS_WITH: string = \"Is begins with\";\n    private readonly IS_ENDS_WITH: string = \"Is ends with\";\n    private readonly CONTAINS: string = \"Contains\";\n    private readonly DOES_NOT_CONTAINS: string = \"Does not contains\";\n\n  public build(conditions: Condition[],\n                      responses: SurveyResponses[],\n                      questionType: string): string{\n\n    let expression: string = '';\n\n    switch (questionType) {\n      case 'Drop down':\n      case 'Choice':\n        for (let condition of conditions) {\n          let result = this.evaluateChoiceConditions(condition, responses[responses.findIndex(res => res.questionId == condition._if)]);\n          if (condition.relationWithNextCondition != undefined)\n          expression += result + ' '+ condition.relationWithNextCondition + ' ';\n          else  expression += result + ' ';\n        }\n        break;\n\n      case 'Yes No':\n        for (let condition of conditions) {\n          let result = this.evaluateYesNoConditions(condition,responses[responses.findIndex(res => res.questionId == condition._if)]);\n          if (condition.relationWithNextCondition != undefined)\n            expression += result + ' '+ condition.relationWithNextCondition + ' ';\n          else  expression += result + ' ';\n        }\n        break;\n\n      case 'Rating':\n        for (let i = 0; i < conditions.length; i++) {\n          let result = this.evaluateRatingConditions(conditions[i],responses[responses.findIndex(res => res.questionId == conditions[i]._if)]);\n          console.warn(result);\n          if ((i + 1) < conditions.length){\n            expression += result + ' ' + conditions[i].relationWithNextCondition+ ' ';\n\n          }else{\n            expression += result + ' ';\n          }\n\n        }\n\n        break;\n\n      case 'Nps':\n        for (let i = 0; i < conditions.length; i++) {\n          let result = this.evaluateNPSConditions(conditions[i],responses[responses.findIndex(res => res.questionId == conditions[i]._if)]);\n          console.warn(result);\n          if ((i + 1) < conditions.length){\n            expression += result + ' ' + conditions[i].relationWithNextCondition+ ' ';\n\n          }else{\n            expression += result + ' ';\n          }\n\n        }\n\n        break;\n\n      case 'Date':\n        for (let condition of conditions) {\n          let result = this.evaluateDateConditions(condition,responses[responses.findIndex(res => res.questionId == condition._if)]);\n          if (condition.relationWithNextCondition != undefined){\n            expression += result + ' ' + condition.relationWithNextCondition+ ' ';\n          }else{\n            expression += result + ' ';\n          }\n        }\n        break;\n\n      case 'Short text':\n        for (let condition of conditions) {\n          let result = this.evaluateTextConditions(condition,responses[responses.findIndex(res => res.questionId == condition._if)]);\n          if (condition.relationWithNextCondition != undefined){\n            expression += result + ' ' + condition.relationWithNextCondition+ ' ';\n          }else{\n            expression += result + ' ';\n          }\n        }\n        break;\n\n      default:\n          break;\n    }\n    return expression;\n  }\n\n\n\n  private evaluateChoiceConditions(condition: Condition,\n                                   currentResponse: SurveyResponses){\n    return condition.condition == this.IS ?\n      currentResponse.choices.some(choice => choice.choiceId == condition._this) :\n      !currentResponse.choices.some(choice => choice.choiceId == condition._this);\n  }\n\n\n  private evaluateRatingConditions(condition: Condition, response: SurveyResponses) {\n    console.warn(response);\n    switch (condition.condition) {\n      case this.IS_EQUALS_TO:\n        return (response.rating == condition._this);\n      case this.IS_NOT_EQUALS_TO:\n        return (response.rating != condition._this);\n      case this.IS_LESS_THAN:\n        return (response.rating < condition._this);\n      case this.IS_GREATER_THAN:\n        return (response.rating > condition._this);\n      case this.IS_LESS_THAN_OR_EQUALS_TO:\n        return (response.rating <= condition._this);\n      case this.IS_GREATER_THAN_OR_EQUALS_TO:\n        return (response.rating >= condition._this);\n      default:\n        return false;\n    }\n  }\n\n\n  private evaluateNPSConditions(condition: Condition, response: SurveyResponses) {\n    console.warn(response);\n    switch (condition.condition) {\n      case this.IS:\n        return RegExp(condition._this).test(response.rating+'');\n      case this.IS_NOT:\n        return !RegExp(condition._this).test(response.rating+'');\n      default:\n        return false;\n    }\n  }\n\n  private evaluateYesNoConditions(condition: Condition,\n                                  currentResponse: SurveyResponses) {\n    return condition.condition == this.IS ?\n      currentResponse.answer == condition._this :\n      !currentResponse.answer == condition._this;\n  }\n\n  private evaluateDateConditions(condition: Condition,\n                                 currentResponse: SurveyResponses) {\n\n    let thisDate = new Date(condition._this);\n    let responseDate = new Date(currentResponse.answer);\n\n    switch (condition.condition){\n\n      case this.IS_ON:\n        return responseDate == thisDate;\n\n      case this.IS_NOT_ON:\n        return responseDate != thisDate;\n\n      case this.IS_BEFORE:\n        return responseDate < thisDate;\n\n      case this.IS_AFTER:\n        return responseDate > thisDate;\n\n      case this.IS_BEFORE_OR_ON:\n        return responseDate <= thisDate;\n\n      case this.IS_AFTER_OR_ON:\n        return responseDate >= thisDate;\n\n        //todo Expression for date between range.\n      case this.IS_BETWEEN:\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  private evaluateTextConditions(condition: Condition,\n                                 currentResponse: SurveyResponses) {\n        switch(condition.condition){\n\n          case this.IS_EQUALS_TO:\n            return currentResponse.answer == condition._this;\n\n          case this.IS_BEGINS_WITH:\n            return currentResponse.answer.startsWith(condition._this);\n\n          case this.IS_ENDS_WITH:\n            return currentResponse.answer.endsWith(condition._this);\n\n          case this.CONTAINS:\n            return currentResponse.answer.includes(condition._this);\n\n          case this.DOES_NOT_CONTAINS:\n            return !currentResponse.answer.includes(condition._this);\n\n          default:\n            return false;\n        }\n  }\n\n\n}\n","import {SurveyResponses} from '../survey-response.model';\n\nexport class MandatoryQuestionValidation {\n\n\n  constructor() {\n  }\n\n  public isQuestionAnswered(questionType: string,\n                            response: SurveyResponses): boolean{\n    console.log('Inside isQuestionAnswered!');\n    console.log('Question type: '+questionType);\n\n    if (response == undefined)\n      return false;\n\n    switch (questionType) {\n\n      case 'Address':\n        return this.isAddressFormAnswered(response);\n\n      case 'Choice':\n        return this.isChoiceQuestionAnswered(response);\n\n      case 'Contact form':\n        return this.isContactFormAnswered(response);\n\n      case 'Date':\n        return this.isDateQuestionAnswered(response);\n\n      case 'Drop Down':\n        return this.isDropDownQuestionAnswered(response);\n\n      case 'Email':\n        return this.isEmailQuestionAnswered(response);\n\n      case 'Short text':\n      case 'Long text':\n        return this.isTextQuestionAnswered(response);\n\n      case 'Nps':\n      case 'Rating':\n        return this.isRatingQuestionAnswered(response);\n\n      case 'Statement':\n        return this.isStatementQuestionAnswered(response);\n\n      case 'Yes No':\n      case 'Legal':\n        return this.isYesNoQuestionAnswered(response);\n\n      default: return false;\n    }\n  }\n\n  private isAddressFormAnswered(response: SurveyResponses) {\n    return false;\n  }\n\n  private isContactFormAnswered(response: SurveyResponses) {\n    return false;\n  }\n\n  private isChoiceQuestionAnswered(response: SurveyResponses) {\n    return response.choices != undefined && response.choices.length > 0;\n  }\n\n\n  private isDateQuestionAnswered(response: SurveyResponses) {\n    return response.answer != undefined && response.answer.length > 0;\n  }\n\n  private isDropDownQuestionAnswered(response: SurveyResponses) {\n    return response.answerId != undefined;\n  }\n\n  private isEmailQuestionAnswered(response: SurveyResponses) {\n    return response.answer != undefined && response.answer.length > 0;\n  }\n\n  private isTextQuestionAnswered(response: SurveyResponses) {\n    return response.answer != undefined && response.answer.length > 0;\n  }\n\n  private isRatingQuestionAnswered(response: SurveyResponses) {\n    return response.rating != undefined && response.rating > -1;\n  }\n\n  private isStatementQuestionAnswered(response: SurveyResponses) {\n    return false;\n  }\n\n  private isYesNoQuestionAnswered(response: SurveyResponses) {\n    return response.answer != undefined && response.answer.length > 0;\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Page} from '../pages.model';\nimport {Subscription} from 'rxjs';\nimport {ExpressionBuilder} from './expression-builder';\nimport {MandatoryQuestionValidation} from './mandatory-question-validation';\nimport {RemoveResponsesOfExcludedQuestionIds, Reset} from '../store/survey-actions';\nimport {PagesService} from '../../shared/pages-services/pages.service';\nimport {SurveyLibService} from '../../survey-lib.service';\n\n\n@Component({\n  selector: 'app-questionnaire',\n  templateUrl: './questionnaire.component.html',\n  styleUrls: ['./questionnaire.component.css','./../pages.component.css'],\n})\nexport class QuestionnaireComponent implements OnInit, OnDestroy {\n\n  @Output()\n  private previousPageEvent = new EventEmitter();\n\n  @Input()\n  public currentQuestionIndex: number;\n\n  @Output()\n  public submitResponse : EventEmitter<string> = new EventEmitter<string>();\n\n  @Input()\n  questionnairePage: Page;\n\n  mandatoryQuestion: MandatoryQuestionValidation = new MandatoryQuestionValidation();\n  expressionBuilder: ExpressionBuilder = new ExpressionBuilder();\n\n  isMandatoryQuestionAnswered: boolean = true;\n  private nextQuestionSubscription: Subscription;\n  private previousQuestionSubscription: Subscription;\n\n  constructor(public pagesService: PagesService,\n              public surveyLibService: SurveyLibService) {\n  }\n\n  ngOnInit() {\n    console.log(this.questionnairePage.questions.length);\n    console.log(this.surveyLibService.currentElement.currentQuestionIndex);\n\n    if (this.surveyLibService.isQuestionCardCampaign) {\n      this.nextQuestion(true);\n    }\n\n    this.pagesService.stage = 'entry-next';\n    this.pagesService.sequenceOfQuestionTraversed.push(this.surveyLibService.currentElement.currentQuestionIndex);\n    this.previousQuestionSubscription = this.pagesService.previousQuestion.subscribe(() => this.previousQuestion());\n    this.nextQuestionSubscription = this.pagesService.nextQuestion.subscribe(() => this.nextQuestion());\n  }\n\n  nextQuestion(skipAnimation : boolean = false) {\n    console.log(\"nextQuestion\");\n    if (this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex].attributes.required) {\n      if (this.mandatoryQuestion.isQuestionAnswered(this.questionnairePage\n        .questions[this.surveyLibService.currentElement.currentQuestionIndex].questionType,\n        this.pagesService.getResponse(this.questionnairePage.questions[this.surveyLibService\n          .currentElement.currentQuestionIndex].identifier))) {\n        this.jump(skipAnimation);\n        this.isMandatoryQuestionAnswered = true;\n      } else {\n        this.isMandatoryQuestionAnswered = false;\n        this.showErrorMessage();\n      }\n    } else this.jump(skipAnimation);\n    console.log(this.surveyLibService.currentElement);\n    this.surveyLibService.currentElementEventEmitter.emit(this.surveyLibService.currentElement);\n\n    this.updateProgressBar();\n  }\n\n  previousQuestion() {\n    console.log(this.pagesService.sequenceOfQuestionTraversed);\n    if(!this.surveyLibService.isEmbededInDesigner){\n      if (this.pagesService.sequenceOfQuestionTraversed.length > 1) {\n        this.animatePreviousExit(this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex].questionType);\n        setTimeout(() => {\n          let previousQuestionIndex = this.pagesService.sequenceOfQuestionTraversed[this.pagesService.sequenceOfQuestionTraversed.length - 2];\n          this.pagesService.sequenceOfQuestionTraversed = this.pagesService.sequenceOfQuestionTraversed.filter(sequence => sequence < this.surveyLibService.currentElement.currentQuestionIndex);\n          this.surveyLibService.currentElement.currentQuestionIndex = previousQuestionIndex;\n          this.updateProgressBar();\n          this.pagesService.stage = 'entry-previous';\n        },400)\n      } else {\n        //this.resetResponse();\n        this.previousPageEvent.emit();\n      }\n    }else {\n      if (this.surveyLibService.currentElement.currentQuestionIndex > 0){\n        this.updateProgressBar();\n\n        this.surveyLibService.currentElement.currentQuestionIndex--;\n      } else {\n        if (this.surveyLibService.currentElement.currentPageIndex > 0) {\n          this.previousPageEvent.emit();\n        }\n      }\n    }\n    this.surveyLibService.currentElementEventEmitter.emit(this.surveyLibService.currentElement);\n\n  }\n\n\n  private jump(skipAnimation: boolean) {\n    this.animateExitNext(this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex].questionType)\n    setTimeout(()=> {\n      if (this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex].logicJumps != undefined && this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex].logicJumps.blocks.length > 0)\n        this.logicJump();\n      else\n        this.defaultJump();\n      this.pagesService.stage = 'entry-next';\n    },skipAnimation ? 0 :400)\n\n  }\n\n  private logicJump() {\n    console.log('Inside logicJump: '+this.surveyLibService.currentElement.currentQuestionIndex);\n    let logicJump: boolean = false;\n    for (let block of this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex].logicJumps.blocks) {\n      console.warn(this.pagesService.surveyResponses);\n      if (eval(this.expressionBuilder.build(block.conditions, this.pagesService.surveyResponses, this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex].questionType))) {\n        let jumpIndex = this.questionnairePage.questions.findIndex(question => question.questionId == block.thatIndex);\n        if (QuestionnaireComponent.isBackwardJump(this.surveyLibService.currentElement.currentQuestionIndex, jumpIndex)) {\n          this.backwardJump(jumpIndex);\n        } else {\n          this.forwardJump(jumpIndex);\n        }\n        logicJump = true;\n        break;\n      }\n    }\n    if (!logicJump) {\n      this.defaultJump();\n      /*this.surveyLibService.currentElement.currentQuestionIndex = this.questionnairePage.questions.findIndex(question => question.questionId == this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex].logicJumps.defaultJump);\n      this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex] = this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex];\n      this.pagesService.sequenceOfQuestionTraversed.push(this.surveyLibService.currentElement.currentQuestionIndex);*/\n    }\n  }\n\n  private defaultJump() {\n    if (this.surveyLibService.currentElement.currentQuestionIndex < this.questionnairePage.questions.length -1){\n      this.surveyLibService.currentElement.currentQuestionIndex++;\n      this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex] = this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex];\n      this.pagesService.sequenceOfQuestionTraversed.push(this.surveyLibService.currentElement.currentQuestionIndex);\n      console.log('Inside default jump: '+this.surveyLibService.currentElement.currentQuestionIndex);\n      this.surveyLibService.enableSubmit = false;\n    } else{\n      this.surveyLibService.enableSubmit = true;\n      this.submitResponse.emit();\n    }\n\n  }\n\n\n  private static isBackwardJump(currentQuestionIndex: number, jumpIndex: number): boolean {\n    return jumpIndex < currentQuestionIndex;\n  }\n\n  private backwardJump(jumpIndex: number) {\n    console.log('Inside backwardJump: '+this.surveyLibService.currentElement.currentQuestionIndex);\n    this.surveyLibService.currentElement.currentQuestionIndex = jumpIndex;\n    this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex] = this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex];\n    this.pagesService.sequenceOfQuestionTraversed = this.pagesService.sequenceOfQuestionTraversed.filter(sequence => sequence <= jumpIndex);\n    this.removeResponses(this.pagesService.sequenceOfQuestionTraversed);\n  }\n\n  private forwardJump(jumpIndex: number) {\n    console.log('Inside forwardJump: '+this.surveyLibService.currentElement.currentQuestionIndex);\n    this.surveyLibService.currentElement.currentQuestionIndex = jumpIndex;\n    this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex] = this.questionnairePage.questions[this.surveyLibService.currentElement.currentQuestionIndex];\n    this.pagesService.sequenceOfQuestionTraversed.push(this.surveyLibService.currentElement.currentQuestionIndex);\n  }\n\n  private removeResponses(questionIndexes: number[]) {\n    let excludeQuestionIds: number[] = [];\n    for (let index of questionIndexes) {\n      excludeQuestionIds.push(this.questionnairePage.questions[index].questionId);\n    }\n    this.pagesService.removeResponsesOfExcludedQuestionIds(excludeQuestionIds);\n  }\n\n  private updateProgressBar() {\n\n    document.getElementById('step-number').innerText =  this.pagesService.surveyResponses.length.toString();\n    //document.getElementById('progress').setAttribute('value', this.pagesService.response.length.toString());\n  }\n\n  ngOnDestroy(): void {\n    this.previousQuestionSubscription.unsubscribe();\n    this.nextQuestionSubscription.unsubscribe();\n  }\n\n  private showErrorMessage() {\n    let x = document.getElementById(\"error_snackbar\");\n    document.getElementById('message').innerText =  this.questionnairePage\n      .questions[this.surveyLibService.currentElement.currentQuestionIndex].attributes\n      .requiredErrorMessage;\n    x.className = \"show\";\n    setTimeout(() => { x.className = x.className.replace(\"show\", \"\"); }, 3000);\n  }\n\n  private animateExitNext(questionType: string) {\n    console.log(questionType);\n    let elementById = null;\n    switch (questionType) {\n      case 'Nps':\n        elementById = document.getElementById('nps-question');\n        if (elementById !== null) {\n          document.getElementById('nps-question').className = 'exit-next';\n          document.getElementById('nps-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Choice':\n        elementById = document.getElementById('choice-question');\n        if (elementById !== null) {\n          document.getElementById('choice-question').className = 'exit-next';\n          document.getElementById('choice-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Rating':\n        elementById = document.getElementById('rating-question');\n        if (elementById !== null) {\n          document.getElementById('rating-question').className = 'exit-next';\n          document.getElementById('rating-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Drop down':\n        elementById = document.getElementById('drop-down-question');\n        if (elementById !== null) {\n          document.getElementById('drop-down-question').className = 'exit-next';\n          document.getElementById('drop-down-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Yes / No':\n        elementById = document.getElementById('yes-no-question');\n        if (elementById !== null) {\n          document.getElementById('yes-no-question').className = 'exit-next';\n          document.getElementById('yes-no-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Short text':\n        elementById = document.getElementById('short-question');\n        if (elementById !== null) {\n          document.getElementById('short-question').className = 'exit-next';\n          document.getElementById('short-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Long text':\n        elementById = document.getElementById('long-question');\n        if (elementById !== null) {\n          document.getElementById('long-question').className = 'exit-next';\n          document.getElementById('long-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Statement':\n        elementById = document.getElementById('statement-question');\n        if (elementById !== null) {\n          document.getElementById('statement-question').className = 'exit-next';\n          document.getElementById('statement-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Email':\n        elementById = document.getElementById('email-question');\n        if (elementById !== null) {\n          document.getElementById('email-question').className = 'exit-next';\n          document.getElementById('email-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Phone number':\n        elementById = document.getElementById('phone-question');\n        if (elementById !== null) {\n          document.getElementById('phone-question').className = 'exit-next';\n          document.getElementById('phone-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Number':\n        elementById = document.getElementById('number-question');\n        if (elementById !== null) {\n          document.getElementById('number-question').className = 'exit-next';\n          document.getElementById('number-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Name':\n        elementById = document.getElementById('name-question');\n        if (elementById !== null) {\n          document.getElementById('name-question').className = 'exit-next';\n          document.getElementById('name-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Website':\n        elementById = document.getElementById('website-question');\n        if (elementById !== null) {\n          document.getElementById('website-question').className = 'exit-next';\n          document.getElementById('website-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Legal':\n        elementById = document.getElementById('agree-disagree-question');\n        if (elementById !== null) {\n          document.getElementById('agree-disagree-question').className = 'exit-next';\n          document.getElementById('agree-disagree-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n      case 'Date':\n        elementById = document.getElementById('date-question');\n        if (elementById !== null) {\n          document.getElementById('date-question').className = 'exit-next';\n          document.getElementById('date-question-delay').className = 'exit-next-delay';\n        }\n        break;\n\n    }\n  }\n\n  private animatePreviousExit(questionType: string) {\n    switch (questionType) {\n      case 'Nps':\n        document.getElementById('nps-question').className = 'exit-previous-delay';\n        document.getElementById('nps-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Choice':\n        document.getElementById('choice-question').className = 'exit-previous-delay';\n        document.getElementById('choice-question-delay').className = 'exit-previous';\n        break\n\n\n\n      case 'Rating':\n        document.getElementById('rating-question').className = 'exit-previous-delay';\n        document.getElementById('rating-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Drop down':\n        document.getElementById('drop-down-question').className = 'exit-previous-delay';\n        document.getElementById('drop-down-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Yes / No':\n        document.getElementById('yes-no-question').className = 'exit-previous-delay';\n        document.getElementById('yes-no-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Short text':\n        document.getElementById('short-question').className = 'exit-previous-delay';\n        document.getElementById('short-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Long text':\n        document.getElementById('long-question').className = 'exit-previous-delay';\n        document.getElementById('long-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Statement':\n        document.getElementById('statement-question').className = 'exit-previous-delay';\n        document.getElementById('statement-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Email':\n        document.getElementById('email-question').className = 'exit-previous-delay';\n        document.getElementById('email-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Phone number':\n        document.getElementById('phone-question').className = 'exit-previous-delay';\n        document.getElementById('phone-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Number':\n        document.getElementById('number-question').className = 'exit-previous-delay';\n        document.getElementById('number-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Name':\n        document.getElementById('name-question').className = 'exit-previous-delay';\n        document.getElementById('name-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Website':\n        document.getElementById('website-question').className = 'exit-previous-delay';\n        document.getElementById('website-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Legal':\n        document.getElementById('agree-disagree-question').className = 'exit-previous-delay';\n        document.getElementById('agree-disagree-question-delay').className = 'exit-previous';\n        break;\n\n      case 'Date':\n        document.getElementById('date-question').className = 'exit-previous-delay';\n        document.getElementById('date-question-delay').className = 'exit-previous';\n        break;\n\n    }\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Page} from '../pages.model';\nimport {PagesComponent} from '../pages.component';\nimport {PersistenceService} from '../../shared/persistence.service';\n\n@Component({\n  selector: 'app-thank-you-page',\n  templateUrl: './thank-you-page.component.html',\n  styleUrls: ['./thank-you-page.component.css']\n})\nexport class ThankYouPageComponent implements OnInit {\n\n  @Input()\n  thankYouPage: Page;\n  isActive: false;\n  // isActive: boolean = true;\n\n\n  constructor() { }\n\n  ngOnInit() {\n    //this.thankYouPage = PersistenceService.get(PagesComponent.CURRENT_PAGE);\n    document.getElementById(\"thank-you-page\").className = 'entry-next';\n    document.getElementById(\"thank-you-page-delay\").className = 'entry-next-delay';\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Choice, Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-choice',\n  templateUrl: './choice.component.html',\n  styleUrls: ['./choice.component.css']\n})\nexport class ChoiceComponent implements OnInit {\n\n  isActive: boolean=false;\n  @Input()\n  choiceQuestion: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  @Input()\n  public isLastQuestion: boolean;\n\n  private _isMultipleChoice: boolean;\n\n\n  @Input() set isMultipleChoice(value: boolean) {\n    this._isMultipleChoice = value;\n    console.log('Inside isMultipleChoice');\n    console.log(value);\n    this.choiceQuestion.choices.forEach(choice => choice.isChecked = false);\n  }\n\n\n  get isMultipleChoice(): boolean {\n    return this._isMultipleChoice;\n  }\n\n\n  constructor(private pageService: PagesService) {\n\n\n  }\n\n  ngOnInit() {\n    console.warn(this.surveyResponse);\n    if (this.surveyResponse.choices !== undefined) {\n      this.surveyResponse.choices.forEach(choice => choice.isChecked = true);\n    }\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('choice-question').className = 'entry-next';\n      document.getElementById('choice-question-delay').className = 'entry-next-delay';\n    }else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('choice-question').className = 'entry-previous-delay';\n      document.getElementById('choice-question-delay').className = 'entry-previous';\n    }\n  }\n\n  submit() {\n    this.isActive = true;\n    this.surveyResponse.choices = this.selectedOptions;\n    if (this.surveyResponse.choices != undefined &&\n      this.surveyResponse.choices.length > 0) {\n      this.surveyResponse.questionId = this.choiceQuestion.questionId;\n      this.surveyResponse.question = this.choiceQuestion.question;\n      this.surveyResponse.questionType = this.choiceQuestion.questionType;\n      this.surveyResponse.identifier = this.choiceQuestion.identifier;\n      this.pageService.persistSurvey(this.surveyResponse);\n    }\n    document.getElementById('btn-primary').classList.add('blink-btn-animation');\n    setTimeout(()=>{\n      this.submitEvent.emit();\n    }, 350);\n  }\n\n  get selectedOptions() {\n    return this.choiceQuestion.choices\n      .filter(choice => choice.isChecked)\n      .map(opt => opt);\n  }\n\n\n  private changeSelection(choices: Choice[]) {\n    if (typeof choices !== 'undefined') {\n      choices.forEach(choice => {\n        this.choiceQuestion.choices.forEach(c =>{\n          if (choice.choiceId == c.choiceId){\n            c.isChecked = true;\n          }\n        });\n      });\n    }\n  }\n\n\n  onClickOthers() {\n\n    if (!this.choiceQuestion.others.isChecked) {\n      this.choiceQuestion.others.isChecked = true;\n      this.choiceQuestion.others.showCheckbox = false;\n    }else {\n      this.choiceQuestion.others.isChecked = false;\n      this.choiceQuestion.others.showCheckbox = true;\n    }\n  }\n\n  onInputOthers() {\n    this.choiceQuestion.others.isChecked = true;\n    this.choiceQuestion.others.showCheckbox = true;\n\n  }\n\n  onOptionSelectionChange($event) {\n    if ($event) {\n      this.choiceQuestion.attributes.numberOfSelection++;\n    }else {\n      this.choiceQuestion.attributes.numberOfSelection--;\n    }\n  }\n\n  onSingleSelect(identifier: string) {\n    this.choiceQuestion.choices.forEach(choice => choice.isChecked = false);\n    let index = this.choiceQuestion.choices.findIndex(choice => choice.identifier == identifier);\n    if (index > 0){\n      this.choiceQuestion.choices[index].isChecked = true;\n    }\n  }\n\n   isDisabled(choice: Choice){\n\n     if (this.choiceQuestion.attributes.selection == undefined)\n       return false;\n\n     else if (this.choiceQuestion.attributes.selection.type == 'Exact'){\n      return this.choiceQuestion.attributes.numberOfSelection >= this.choiceQuestion.attributes.selection.exact\n        && !choice.isChecked;\n\n    }else if (this.choiceQuestion.attributes.selection.type == 'Range') {\n      return this.choiceQuestion.attributes.numberOfSelection >= this.choiceQuestion.attributes.selection.rangeTo\n        && !choice.isChecked;\n    } else return false;\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport {YesNo} from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-yes-no',\n  templateUrl: './yes-no.component.html',\n  styleUrls: ['./yes-no.component.css'],\n})\nexport class YesNoComponent implements OnInit, OnDestroy {\n  isActive: boolean = false;\n  @Input()\n  yesNoQuestion: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  private submitEvent = new EventEmitter();\n\n\n  constructor(private pageService: PagesService) {\n\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('yes-no-question').className = 'entry-next';\n      document.getElementById('yes-no-question-delay').className = 'entry-next-delay';\n    } else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('yes-no-question').className = 'entry-previous-delay';\n      document.getElementById('yes-no-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onSelect(value: string) {\n    if (value != undefined) {\n      this.isActive = true;\n      this.surveyResponse.question = this.yesNoQuestion.question;\n      this.surveyResponse.questionType = this.yesNoQuestion.questionType;\n      this.surveyResponse.questionId = this.yesNoQuestion.questionId;\n      this.surveyResponse.identifier = this.yesNoQuestion.identifier;\n      this.surveyResponse.answer = value;\n      this.pageService.persistSurvey(this.surveyResponse);\n      value == 'Yes' ? document.getElementById('yes-btn').classList.add('blink-btn-animation') : '';\n      value == 'No' ? document.getElementById('no-btn').classList.add('blink-btn-animation') : '';\n      setTimeout(() => {\n        this.submitEvent.emit();\n      }, 350);\n    } else {\n      this.submitEvent.emit();\n    }\n\n  }\n\n  ngOnDestroy(): void {\n\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {SurveyResponses} from '../../survey-response.model';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-short-text',\n  templateUrl: './short-text.component.html',\n  styleUrls: ['./short-text.component.css']\n})\nexport class ShortTextComponent implements OnInit,OnDestroy {\n\n  @Input() shortText: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  @Input()\n  public isLastQuestion: boolean;\n\n\n  constructor(private pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('short-question').className = 'entry-next';\n      document.getElementById('short-question-delay').className = 'entry-next-delay';\n    }else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('short-question').className = 'entry-previous-delay';\n      document.getElementById('short-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onInputValue(value: string){\n    if (value != undefined) {\n      this.surveyResponse.questionId = this.shortText.questionId;\n      this.surveyResponse.question = this.shortText.question;\n      this.surveyResponse.questionType = this.shortText.questionType;\n      this.surveyResponse.identifier = this.shortText.identifier;\n      this.surveyResponse.answer = value;\n      this.pageService.persistSurvey(this.surveyResponse);\n      document.getElementById('btn-primary').classList.add('blink-btn-animation');\n      setTimeout(()=>{\n        this.submitEvent.emit();\n      },350);\n    } else {\n      this.submitEvent.emit();\n    }\n  }\n\n  skipQuestion(){\n    this.surveyResponse.identifier = this.shortText.identifier;\n    this.surveyResponse.answer = undefined;\n    this.submitEvent.emit();\n  }\n\n  ngOnDestroy(): void {\n  }\n\n\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\nimport {SurveyLibService} from '../../../survey-lib.service';\n\n@Component({\n  selector: 'app-long-text',\n  templateUrl: './long-text.component.html',\n  styleUrls: ['./long-text.component.css'],\n})\nexport class LongTextComponent implements OnInit,OnDestroy {\n\n\n  @Input() longText: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  @Input()\n  public isLastQuestion: boolean;\n\n  constructor(private pageService: PagesService,public surveyLibServices: SurveyLibService) {\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('long-question').className = 'entry-next';\n      document.getElementById('long-question-delay').className = 'entry-next-delay';\n    }else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('long-question').className = 'entry-previous-delay'\n      document.getElementById('long-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onInputValue(value: string){\n    if (value != undefined) {\n      this.surveyResponse.questionId = this.longText.questionId;\n      this.surveyResponse.question = this.longText.question;\n      this.surveyResponse.questionType = this.longText.questionType;\n      this.surveyResponse.answer = value;\n      this.surveyResponse.identifier = this.longText.identifier;\n      this.pageService.persistSurvey(this.surveyResponse);\n      document.getElementById('btn-primary').classList.add('blink-btn-animation');\n      setTimeout(()=>{\n        this.submitEvent.emit();\n      },350);\n    } else {\n      this.submitEvent.emit();\n    }\n\n  }\n\n  skipQuestion(){\n    this.submitEvent.emit();\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-statement',\n  templateUrl: './statement.component.html',\n  styleUrls: ['./statement.component.css']\n})\nexport class StatementComponent implements OnInit,OnDestroy {\n\n  @Input() statement: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  constructor(private pageService: PagesService) { }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('statement-question').className = 'entry-next';\n      document.getElementById('statement-question-delay').className = 'entry-next-delay';\n    }else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('statement-question').className = 'entry-previous-delay';\n      document.getElementById('statement-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onSubmit(){\n    this.surveyResponse.answer = 'Ok';\n    this.surveyResponse.identifier = this.statement.identifier;\n    this.surveyResponse.questionId = this.statement.questionId;\n    this.surveyResponse.questionType = this.statement.questionType;\n    this.pageService.persistSurvey(this.surveyResponse);\n    document.getElementById('btn-primary').classList.add('blink-btn-animation');\n    setTimeout(()=>{\n      this.submitEvent.emit();\n    },350);\n  }\n\n  ngOnDestroy(): void {\n    this.submitEvent.unsubscribe();\n  }\n\n  onSkip(value: any){\n    if (value != undefined) {\n      this.surveyResponse.answer = value;\n      this.surveyResponse.identifier = this.statement.identifier;\n      this.surveyResponse.questionId = this.statement.questionId;\n      this.surveyResponse.questionType = this.statement.questionType;\n      this.pageService.persistSurvey(this.surveyResponse);\n    }\n    this.submitEvent.emit();\n  }\n\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {SurveyResponses} from '../../survey-response.model';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.css']\n})\nexport class EmailComponent implements OnInit,OnDestroy {\n  private readonly EMAIL_REGEXP =new RegExp('^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@\"]+)*)|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$');\n\n  @Input() email: Question;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  @Input()\n  public surveyResponse: SurveyResponses;\n\n  @Input()\n  public isLastQuestion: boolean;\n\n  isValidEmail : boolean = true;\n\n\n  constructor(private pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('email-question').className = 'entry-next';\n      document.getElementById('email-question-delay').className = 'entry-next-delay';\n    }else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('email-question').className = 'entry-previous-delay';\n      document.getElementById('email-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onSubmit(value: string){\n    console.log(value);\n    if (value != undefined){\n      this.isValidEmail = this.isValidEmailId(value);\n      console.log('Is valid email: '+this.isValidEmail);\n      if (this.isValidEmail){\n        this.surveyResponse.questionId = this.email.questionId;\n        this.surveyResponse.question = this.email.question;\n        this.surveyResponse.questionType = this.email.questionType;\n        this.surveyResponse.identifier = this.email.identifier;\n        this.surveyResponse.answer = value;\n        this.pageService.persistSurvey(this.surveyResponse);\n        document.getElementById('btn-primary').classList.add('blink-btn-animation');\n        setTimeout(()=>{\n          this.submitEvent.emit();\n        },350);\n      }\n    }else{\n      this.submitEvent.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  private isValidEmailId(email: string): boolean {\n    return this.EMAIL_REGEXP.test(email);\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-nps',\n  templateUrl: './nps.component.html',\n  styleUrls: ['./nps.component.css'],\n})\nexport class NpsComponent implements OnInit, OnDestroy {\n\n  @Input()\n  npsQuestion: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n\n  constructor(private pageService: PagesService) {\n\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('nps-question').className = 'entry-next';\n      document.getElementById('nps-question-delay').className = 'entry-next-delay';\n    } else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('nps-question').className = 'entry-previous-delay';\n      document.getElementById('nps-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onSelect(rating: number) {\n    if (rating != undefined) {\n      this.surveyResponse.question = this.npsQuestion.question;\n      this.surveyResponse.questionType = this.npsQuestion.questionType;\n      this.surveyResponse.identifier = this.npsQuestion.identifier;\n      this.surveyResponse.questionId = this.npsQuestion.questionId;\n      this.surveyResponse.rating = rating;\n      this.pageService.persistSurvey(this.surveyResponse);\n      document.getElementById('rating-' + rating).classList.add('blink-btn-animation');\n      setTimeout(() => {\n        this.submitEvent.emit();\n      }, 350);\n    } else {\n      this.submitEvent.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n    /*this.surveyState*/\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport {YesNo} from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n@Component({\n  selector: 'app-date',\n  templateUrl: './date.component.html',\n  styleUrls: ['./date.component.css']\n})\nexport class DateComponent implements OnInit, OnDestroy {\n  platform: string;\n  @Input()\n  dateQuestion: Question;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n\n  constructor(private pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    this.platform = navigator.platform;\n    console.log(navigator.platform);\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('date-question').className = 'entry-next';\n      document.getElementById('date-question-delay').className = 'entry-next-delay';\n    } else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('date-question').className = 'entry-previous-delay';\n      document.getElementById('date-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onDateSelect(date: string) {\n    if (date != undefined) {\n      this.surveyResponse.questionId = this.dateQuestion.questionId;\n      this.surveyResponse.question = this.dateQuestion.question;\n      this.surveyResponse.questionType = this.dateQuestion.questionType;\n      this.surveyResponse.identifier = this.dateQuestion.identifier;\n      this.surveyResponse.answer = date;\n      this.pageService.persistSurvey(this.surveyResponse);\n      document.getElementById('input').classList.add('blink-btn-animation');\n      setTimeout(() => {\n        this.submitEvent.emit();\n      }, 350);\n    } else {\n      this.submitEvent.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n\n  }\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport {YesNo} from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-rating',\n  templateUrl: './rating.component.html',\n  styleUrls: ['./rating.component.css']\n})\nexport class RatingComponent implements OnInit,AfterViewInit, OnDestroy {\n\n  @Input()\n  ratingQuestion: Question;\n\n  @Input()\n  public surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n  isActive: boolean = false;\n\n\n\n  constructor(private pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('rating-question').className = 'entry-next';\n      document.getElementById('rating-question-delay').className = 'entry-next-delay';\n    }else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('rating-question').className = 'entry-previous-delay';\n      document.getElementById('rating-question-delay').className = 'entry-previous';\n\n    }\n  }\n\n  ngAfterViewInit(): void {\n\n    console.log(this.ratingQuestion.attributes.steps.length);\n    if(this.ratingQuestion.attributes.steps.length > 6) {\n      let els = document.getElementsByTagName(\"label\");\n      console.log(els[0]);\n      for(let i = 0, all = els.length; i < all; i++){\n        els[i].classList.add('ratingIconAbove6');\n      }\n    }\n  }\n\n  onRatingSelect(rating:number){\n    console.warn(rating);\n    this.isActive = true;\n    this.surveyResponse.question = this.ratingQuestion.question;\n    this.surveyResponse.questionType = this.ratingQuestion.questionType;\n    this.surveyResponse.questionId = this.ratingQuestion.questionId;\n    this.surveyResponse.rating = rating;\n    this.surveyResponse.identifier = this.ratingQuestion.identifier;\n    this.pageService.persistSurvey(this.surveyResponse);\n    console.log(this.ratingQuestion.attributes.ratingIcon);\n    setTimeout(()=>{\n      this.submitEvent.emit();\n    }, 350);\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport {DropDown} from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n\n@Component({\n  selector: 'app-drop-down',\n  templateUrl: './drop-down.component.html',\n  styleUrls: ['./drop-down.component.css'],\n})\nexport class DropDownComponent implements OnInit,OnDestroy {\n\n  @Input() dropDown: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n\n\n  constructor(private pageService: PagesService) {\n\n  }\n\n\n  onSelect(text:string){\n    if (text != undefined) {\n      this.surveyResponse.question = this.dropDown.question;\n      this.surveyResponse.questionType = this.dropDown.questionType;\n      this.surveyResponse.questionId = this.dropDown.questionId;\n      this.surveyResponse.answerId = this.getChoiceIdByText(text);\n      this.surveyResponse.identifier = this.dropDown.identifier;\n      this.surveyResponse.answer = text;\n      this.pageService.persistSurvey(this.surveyResponse);\n      document.getElementById('input').classList.add('blink-btn-animation');\n      setTimeout(()=>{\n        this.submitEvent.emit();\n      },350);\n    } else {\n      this.submitEvent.emit();\n    }\n  }\n\n  private getChoiceById(choiceId: number){\n    let index = this.dropDown.choices.findIndex(choice => choice.choiceId == choiceId);\n    return this.dropDown.choices[index].text;\n  }\n  private getChoiceIdByText(text: string){\n    let index = this.dropDown.choices.findIndex(choice => choice.text == text);\n    return this.dropDown.choices[index].choiceId;\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('drop-down-question').className = 'entry-next';\n      document.getElementById('drop-down-question-delay').className = 'entry-next-delay';\n    } else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('drop-down-question').className = 'entry-previous-delay';\n      document.getElementById('drop-down-question-delay').className = 'entry-previous';\n    }\n  }\n\n\n  toggleCustomDropDown() {\n    document.getElementById('select-options').classList.toggle('visible');\n    document.getElementById('skipBtn').classList.toggle('invisible');\n  }\n\n  onDropDownSelection(text:string, i:number) {\n    let selectedOptionsEl:any = document.getElementsByTagName('li');\n    selectedOptionsEl[i].classList.add('selected');\n    for(let j=0; j < selectedOptionsEl.length; j++){\n      if(i == j){\n        selectedOptionsEl[j].classList.add('selected');\n      } else {\n        selectedOptionsEl[j].classList.remove('selected');\n      }\n    }\n  }\n\n\n  ngOnDestroy(): void {\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {SurveyResponses} from '../../survey-response.model';\nimport {Store} from '@ngrx/store';\nimport * as surveyActions from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.css']\n})\nexport class ContactFormComponent implements OnInit {\n\n  @Input() contactForm: Question;\n\n  form: FormGroup;\n  objectProps;\n\n  private response: SurveyResponses;\n  private surveyState: Observable<{response: SurveyResponses[]}>;\n\n  constructor(private pagesService: PagesService) {\n  }\n\n\n  ngOnInit() {\n    this.createForm();\n\n\n  }\n\n  createForm(){\n\n    const formGroup = {};\n    for(let prop of Object.keys(this.contactForm.contactForm)) {\n      formGroup[prop] = new FormControl(this.contactForm.contactForm[prop].value || '', ContactFormComponent.mapValidators(this.contactForm.contactForm[prop].validation));\n    }\n    this.form = new FormGroup(formGroup);\n  }\n\n  private static mapValidators(validators) {\n    const formValidators = [];\n\n    if(validators) {\n      for(const validation of Object.keys(validators)) {\n        if(validation === 'required') {\n          formValidators.push(Validators.required);\n        } else if(validation === 'min') {\n          formValidators.push(Validators.min(validators[validation]));\n        }\n      }\n    }\n\n    return formValidators;\n  }\n\n  onSubmit() {\n    this.response.contactInfo = this.objectProps;\n    this.response.questionId = this.contactForm.questionId;\n    this.pagesService.persistSurvey(this.response);\n\n\n    //console.log(this.dataObject);\n  /*  for (let controlsKey in this.form.controls) {\n      this.dataObject[controlsKey].value = form[controlsKey];\n    }\n    console.log(this.dataObject);\n    this.response.questionId = this.contactForm.questionId;*/\n    //this.response.contactInfo\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Question} from '../../pages.model';\n\n@Component({\n  selector: 'app-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.css']\n})\nexport class AddressComponent implements OnInit {\n\n  @Input() addressForm: Question;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-phone',\n  templateUrl: './phone.component.html',\n  styleUrls: ['./phone.component.css']\n})\nexport class PhoneComponent implements OnInit, OnDestroy {\n\n\n  @Input() phone: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  @Input()\n  public isLastQuestion: boolean;\n\n  constructor(private pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('phone-question').className = 'entry-next';\n      document.getElementById('phone-question-delay').className = 'entry-next-delay';\n    } else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('phone-question').className = 'entry-previous-delay';\n      document.getElementById('phone-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onSubmit(value: string) {\n    if (value != undefined) {\n      this.surveyResponse.questionId = this.phone.questionId;\n      this.surveyResponse.question = this.phone.question;\n      this.surveyResponse.questionType = this.phone.questionType;\n      this.surveyResponse.identifier = this.phone.identifier;\n      this.surveyResponse.answer = value;\n      this.pageService.persistSurvey(this.surveyResponse);\n      document.getElementById('btn-primary').classList.add('blink-btn-animation');\n      setTimeout(() => {\n        this.submitEvent.emit();\n      }, 350);\n    } else {\n      this.submitEvent.emit();\n    }\n\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.css'],\n})\nexport class NameComponent implements OnInit,OnDestroy {\n\n  @Input() name: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  constructor(private pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('name-question').className = 'entry-next';\n      document.getElementById('name-question-delay').className = 'entry-next-delay';\n    }else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('name-question').className = 'entry-previous-delay'\n      document.getElementById('name-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onSubmit(value: string){\n    if (value != undefined) {\n      this.surveyResponse.questionId = this.name.questionId;\n      this.surveyResponse.question = this.name.question;\n      this.surveyResponse.questionType = this.name.questionType;\n      this.surveyResponse.identifier = this.name.identifier;\n      this.surveyResponse.answer = value;\n      this.pageService.persistSurvey(this.surveyResponse);\n      document.getElementById('btn-primary').classList.add('blink-btn-animation');\n      setTimeout(()=>{\n        this.submitEvent.emit();\n      },350);\n    } else {\n      this.submitEvent.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n  }\n\n\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\nimport {SurveyResponses} from '../../survey-response.model';\n\n\n@Component({\n  selector: 'app-agree-disagree',\n  templateUrl: './agree-disagree.component.html',\n  styleUrls: ['./agree-disagree.component.css'],\n})\nexport class AgreeDisagreeComponent implements OnInit, OnDestroy {\n\n  @Input() agreeDisagree: Question;\n\n  @Input()\n  public surveyResponse: SurveyResponses;\n\n  @Output() submitEvent = new EventEmitter();\n\n\n  constructor(private pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('agree-disagree-question').className = 'entry-next';\n      document.getElementById('agree-disagree-question-delay').className = 'entry-next-delay';\n    } else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('agree-disagree-question').className = 'entry-previous-delay';\n      document.getElementById('agree-disagree-question-delay').className = 'entry-previous';\n\n    }\n  }\n\n  onSubmit(answer: string) {\n    if (answer != undefined) {\n      this.surveyResponse.questionId = this.agreeDisagree.questionId;\n      this.surveyResponse.question = this.agreeDisagree.question;\n      this.surveyResponse.questionType = this.agreeDisagree.questionType;\n      this.surveyResponse.identifier = this.agreeDisagree.identifier;\n      this.surveyResponse.answer = answer;\n      this.pageService.persistSurvey(this.surveyResponse);\n      answer == 'Agree' ? document.getElementById('agree').classList.add('blink-btn-animation') : '';\n      answer == 'Disagree' ? document.getElementById('disagree').classList.add('blink-btn-animation') : '';\n      setTimeout(() => {\n        this.submitEvent.emit();\n      }, 350);\n    } else {\n      this.submitEvent.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n","import {Action} from '@ngrx/store';\nimport {SurveyResponses} from '../survey-response.model';\n\nexport const CURRENT_STATE = 'current_state';\nexport const SAVE_CHOICE = 'save_choice';\nexport const SAVE_EMAIL = 'save_email';\nexport const SAVE_AGREE_DISAGREE = 'save_agree_disagree';\nexport const SAVE_PHONE = 'save_phone';\nexport const SAVE_ADDRESS= 'save_address';\nexport const SAVE_DATE= 'save_date';\nexport const SAVE_NPS= 'save_nps';\nexport const SAVE_YES_NO= 'save_yes_no';\nexport const SAVE_RATING= 'save_rating';\nexport const SAVE_DROP_DOWN= 'save_rating';\nexport const SAVE_LONG_TEXT= 'save_long_text';\nexport const SAVE_SHORT_TEXT= 'save_short_text';\nexport const RESET_RESPONSE= 'reset_response';\nexport const REMOVE_RESPONSES= 'remove_responses';\nexport const REMOVE_RESPONSES_OF_EXCLUDED_QUESTION_IDS= 'remove_responses_of_excluded_question_ids';\n\n\nexport class Email implements Action{\n  readonly type = SAVE_EMAIL;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\n\nexport class Phone implements Action{\n  readonly type = SAVE_PHONE;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\nexport class AgreeDisagree implements Action{\n  readonly type = SAVE_AGREE_DISAGREE;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\n\nexport class Choice implements Action{\n  readonly type = SAVE_CHOICE;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\nexport class Address implements Action{\n  readonly type = SAVE_ADDRESS;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\nexport class Date implements Action{\n  readonly type = SAVE_DATE;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\nexport class Nps implements Action{\n  readonly type = SAVE_NPS;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\nexport class YesNo implements Action{\n  readonly type = SAVE_YES_NO;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\nexport class Rating implements Action{\n  readonly type = SAVE_RATING;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\nexport class DropDown implements Action{\n  readonly type = SAVE_DROP_DOWN;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\nexport class LongText implements Action{\n  readonly type = SAVE_LONG_TEXT;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\n\nexport class ShortText implements Action{\n  readonly type = SAVE_SHORT_TEXT;\n\n  constructor(public payload: SurveyResponses) {\n  }\n}\n\nexport class RemoveResponses implements Action{\n  readonly type = REMOVE_RESPONSES;\n\n  constructor(public payload: number) {\n  }\n}\n\nexport class RemoveResponsesOfExcludedQuestionIds implements Action{\n  readonly type = REMOVE_RESPONSES_OF_EXCLUDED_QUESTION_IDS;\n\n  constructor(public payload: number[]) {\n  }\n}\n\nexport class Reset implements Action{\n  readonly type = RESET_RESPONSE;\n}\n\nexport class CurrentState implements Action{\n  readonly type = CURRENT_STATE;\n}\n\nexport type Actions =\n  Choice |\n  Email |\n  Phone |\n  AgreeDisagree |\n  Address |\n  Date |\n  Nps |\n  YesNo |\n  Rating |\n  DropDown |\n  LongText |\n  ShortText |\n  RemoveResponses |\n  RemoveResponsesOfExcludedQuestionIds |\n  Reset |\n  CurrentState;\n","import * as SurveyActions from './survey-actions';\nimport {SurveyResponses} from '../survey-response.model';\n\nlet surveyResponseInitialState: SurveyResponses[] = [];\n\nconst INITIAL_STATE = {\n  response: surveyResponseInitialState\n};\n\n\n\nexport function surveyReducers(state = INITIAL_STATE,\n                               action: SurveyActions.Actions) {\n  console.log(state);\n  switch (action.type) {\n    case SurveyActions.SAVE_CHOICE:\n     return {\n       ...state,\n       response: getResponse(state.response,action.payload)\n     };\n\n    case SurveyActions.SAVE_NPS:\n      return {\n        ...state,\n        response: getResponse(state.response,action.payload)\n      };\n\n    case SurveyActions.SAVE_YES_NO:\n      return {\n        ...state,\n        response: getResponse(state.response,action.payload)\n      };\n\n    case SurveyActions.SAVE_RATING:\n      return {\n        ...state,\n        response: getResponse(state.response,action.payload)\n      };\n\n    case SurveyActions.SAVE_DATE:\n      return {\n        ...state,\n        response: getResponse(state.response,action.payload)\n      };\n\n    case SurveyActions.SAVE_EMAIL:\n      return {\n        ...state,\n        response: getResponse(state.response,action.payload)\n      };\n\n    case SurveyActions.SAVE_PHONE:\n      return {\n        ...state,\n        response: getResponse(state.response,action.payload)\n      };\n\n    case SurveyActions.SAVE_AGREE_DISAGREE:\n      return {\n        ...state,\n        response: getResponse(state.response,action.payload)\n      };\n\n    case SurveyActions.SAVE_LONG_TEXT:\n      return {\n        ...state,\n        response: getResponse(state.response,action.payload)\n      };\n\n    case SurveyActions.SAVE_SHORT_TEXT:\n      return {\n        ...state,\n        response: getResponse(state.response,action.payload)\n      };\n\n    case SurveyActions.SAVE_ADDRESS:\n      return {\n      ...state,\n      response: getResponse(state.response,action.payload)\n    };\n\n    case SurveyActions.REMOVE_RESPONSES:\n      return {\n        ...state,\n        response: removeResponse(state.response, action.payload)\n      };\n\n    case SurveyActions.REMOVE_RESPONSES_OF_EXCLUDED_QUESTION_IDS:\n      return {\n        ...state,\n        response: removeResponsesOfExcludedQuestionIds(state.response, action.payload)\n      };\n\n    case SurveyActions.RESET_RESPONSE:\n      return INITIAL_STATE;\n\n    default:\n      console.log(JSON.stringify(state));\n      return state;\n  }\n\n}\n\nfunction removeResponse(responses: SurveyResponses[], payload: number) {\n  responses.splice(responses.findIndex(response => response.questionId == payload),1);\n  return responses;\n}\n\nfunction getResponse(response: SurveyResponses[],\n                     payload: SurveyResponses): SurveyResponses[]{\n  let index = response.findIndex(question => question.identifier == payload.identifier);\n  if (index == undefined || index < 0){\n    return [...response,payload]\n  }else{\n    response[index] = payload;\n    return response;\n  }\n}\n\nfunction removeResponsesOfExcludedQuestionIds(responses: SurveyResponses[], payload: number[]) {\n  return responses.filter(response => payload.find(questionId => questionId == response.questionId));\n}\n\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\nimport {CommonUtils} from '../../../shared/common.utils';\n\n\n@Component({\n  selector: 'app-website',\n  templateUrl: './website.component.html',\n  styleUrls: ['./website.component.css'],\n})\nexport class WebsiteComponent implements OnInit,OnDestroy {\n\n  private readonly URL_REGEXP =new RegExp('^[A-Za-z][A-Za-z\\\\d.+-]*:\\\\/*(?:\\\\w+(?::\\\\w+)?@)?[^\\\\s/]+(?::\\\\d+)?(?:\\\\/[\\\\w#!:.?+=&%@\\\\-/]*)?$');\n\n  @Input() website: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  isValidUrl : boolean = true;\n\n  @Input()\n  public isLastQuestion: boolean;\n\n\n  constructor(private pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('website-question').className = 'entry-next';\n      document.getElementById('website-question-delay').className = 'entry-next-delay';\n    }else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('website-question').className = 'entry-previous-delay';\n      document.getElementById('website-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onSubmit(value: string){\n    console.log(value);\n    if (value != undefined){\n      this.isValidUrl = this.test(value);\n      if (this.isValidUrl){\n        this.surveyResponse.questionId = this.website.questionId;\n        this.surveyResponse.question = this.website.question;\n        this.surveyResponse.questionType = this.website.questionType;\n        this.surveyResponse.identifier = this.website.identifier;\n        this.surveyResponse.answer = value;\n        this.pageService.persistSurvey(this.surveyResponse);\n        document.getElementById('btn-primary').classList.add('blink-btn-animation');\n        setTimeout(() => {\n          this.submitEvent.emit();\n        },350);\n      }\n    }else{\n      this.submitEvent.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n  }\n\n\n\n  private test(url: string): boolean {\n    return this.URL_REGEXP.test(url);\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {Question} from '../../pages.model';\nimport {SurveyResponses} from '../../survey-response.model';\nimport * as surveyActions from '../../store/survey-actions';\nimport {PagesService} from '../../../shared/pages-services/pages.service';\n\n\n@Component({\n  selector: 'app-number',\n  templateUrl: './number.component.html',\n  styleUrls: ['./number.component.css']\n})\nexport class NumberComponent implements OnInit, OnDestroy {\n\n\n  @Input() phone: Question;\n\n  @Input()\n  surveyResponse: SurveyResponses;\n\n  @Output()\n  submitEvent = new EventEmitter();\n\n  @Input()\n  public isLastQuestion: boolean;\n\n  constructor(private pageService: PagesService) {\n  }\n\n  ngOnInit() {\n    if (this.pageService.stage == 'entry-next') {\n      document.getElementById('number-question').className = 'entry-next';\n      document.getElementById('number-question-delay').className = 'entry-next-delay';\n    } else if (this.pageService.stage == 'entry-previous') {\n      document.getElementById('number-question').className = 'entry-previous-delay';\n      document.getElementById('number-question-delay').className = 'entry-previous';\n    }\n  }\n\n  onSubmit(value: string) {\n    if (value != undefined) {\n      this.surveyResponse.questionId = this.phone.questionId;\n      this.surveyResponse.question = this.phone.question;\n      this.surveyResponse.identifier = this.phone.identifier;\n      this.surveyResponse.questionType = this.phone.questionType;\n      this.surveyResponse.answer = value;\n      this.pageService.persistSurvey(this.surveyResponse);\n      document.getElementById('btn-primary').classList.add('blink-btn-animation');\n      setTimeout(() => {\n        this.submitEvent.emit();\n      }, 350);\n    } else {\n      this.submitEvent.emit();\n    }\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n\n@Pipe({\n  name: 'shuffle',\n  pure: false\n\n})\nexport class ShufflePipe implements PipeTransform {\n  transform(items: any[]): any[] {\n    if (!items) return [];\n    return items.sort(() =>  .1 - Math.random());\n  }\n}\n","import { Directive, AfterViewInit, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appAutofocus]'\n})\nexport class AutofocusDirective implements AfterViewInit {\n\n  constructor(private el: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    this.el.nativeElement.focus();\n  }\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-default-thank-you-page',\n  templateUrl: './default-thank-you-page.component.html',\n  styleUrls: ['./default-thank-you-page.component.css']\n})\nexport class DefaultThankYouPageComponent implements OnInit,OnDestroy {\n\n  constructor() { }\n\n  ngOnInit() {\n    //this.thankYouPage = PersistenceService.get(PagesComponent.CURRENT_PAGE);\n\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {SurveyLibComponent} from './survey-lib.component';\nimport {PagesService} from './shared/pages-services/pages.service';\nimport {PersistenceService} from './shared/persistence.service';\nimport {PagesComponent} from './pages/pages.component';\nimport {WelcomePageComponent} from './pages/welcome-page/welcome-page.component';\nimport {QuestionnaireComponent} from './pages/questionnaire/questionnaire.component';\nimport {ThankYouPageComponent} from './pages/thank-you-page/thank-you-page.component';\nimport {ChoiceComponent} from './pages/questionnaire/choice/choice.component';\nimport {YesNoComponent} from './pages/questionnaire/yes-no/yes-no.component';\nimport {ShortTextComponent} from './pages/questionnaire/short-text/short-text.component';\nimport {LongTextComponent} from './pages/questionnaire/long-text/long-text.component';\nimport {StatementComponent} from './pages/questionnaire/statement/statement.component';\nimport {EmailComponent} from './pages/questionnaire/email/email.component';\nimport {NpsComponent} from './pages/questionnaire/nps/nps.component';\nimport {DateComponent} from './pages/questionnaire/date/date.component';\nimport {RatingComponent} from './pages/questionnaire/rating/rating.component';\nimport {DropDownComponent} from './pages/questionnaire/drop-down/drop-down.component';\nimport {ContactFormComponent} from './pages/questionnaire/contact-form/contact-form.component';\nimport {AddressComponent} from './pages/questionnaire/address/address.component';\nimport {PhoneComponent} from './pages/questionnaire/phone/phone.component';\nimport {NameComponent} from './pages/questionnaire/name/name.component';\nimport {AgreeDisagreeComponent} from './pages/questionnaire/agree-disagree/agree-disagree.component';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {StoreModule} from '@ngrx/store';\nimport {surveyReducers} from './pages/store/survey.reducers';\nimport {WebsiteComponent} from './pages/questionnaire/website/website.component';\nimport {NumberComponent} from './pages/questionnaire/number/number.component';\nimport {ShufflePipe} from './shared/pipe/shuffle.pipe';\nimport {AutofocusDirective} from './shared/directives/auto-focus.directive';\nimport {DefaultThankYouPageComponent} from './pages/default-thank-you-page/default-thank-you-page.component';\n\n@NgModule({\n  declarations: [\n    SurveyLibComponent,\n    PagesComponent,\n    WelcomePageComponent,\n    QuestionnaireComponent,\n    ThankYouPageComponent,\n    ChoiceComponent,\n    YesNoComponent,\n    ShortTextComponent,\n    LongTextComponent,\n    StatementComponent,\n    EmailComponent,\n    NpsComponent,\n    DateComponent,\n    RatingComponent,\n    DropDownComponent,\n    ContactFormComponent,\n    AddressComponent,\n    PhoneComponent,\n    NameComponent,\n    AgreeDisagreeComponent,\n    WebsiteComponent,\n    NumberComponent,\n    DefaultThankYouPageComponent,\n    ShufflePipe,\n    AutofocusDirective\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    StoreModule.forRoot({survey: surveyReducers})\n  ],\n  exports: [SurveyLibComponent],\n  providers: [PagesService, PersistenceService],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA ]\n})\nexport class SurveyLibModule { }\n"," export class PagesModel{\n  private _id: number;\n  private _userId: number;\n  private _themeId: string;\n  private _testMode: boolean;\n  private _logoUrl: string;\n  private _surveyContent: SurveyContent;\n\n\n   get testMode(): boolean {\n     return this._testMode;\n   }\n\n   set testMode(value: boolean) {\n     this._testMode = value;\n   }\n\n   get id(): number {\n    return this._id;\n  }\n\n  set id(value: number) {\n    this._id = value;\n  }\n\n  get userId(): number {\n    return this._userId;\n  }\n\n  set userId(value: number) {\n    this._userId = value;\n  }\n\n  get themeId(): string {\n    return this._themeId;\n  }\n\n  set themeId(value: string) {\n    this._themeId = value;\n  }\n\n  get logoUrl(): string {\n    return this._logoUrl;\n  }\n\n  set logoUrl(value: string) {\n    this._logoUrl = value;\n  }\n\n  get surveyContent(): SurveyContent {\n    return this._surveyContent;\n  }\n\n  set surveyContent(value: SurveyContent) {\n    this._surveyContent = value;\n  }\n}\n\n export class SurveyContent {\n  private _name: string;\n  private _description: string;\n  private _pages: Page[];\n  public selectedTheme: SelectedThemeModel;\n  public organizationLogo: string;\n\n   get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  get description(): string {\n    return this._description;\n  }\n\n  set description(value: string) {\n    this._description = value;\n  }\n\n  get pages(): Page[] {\n    return this._pages;\n  }\n\n  set pages(value: Page[]) {\n    this._pages = value;\n  }\n}\n\n export class SelectedThemeModel {\n   public name: string;\n   public font: Font;\n   public colors: Colors;\n }\n\n\n export class Font {\n  public name: string;\n  public url: string;\n }\n\n\n export class Colors {\n   public backgroundColor: string;\n   public primaryColor: string;\n   public primaryColorDark: string;\n   public footerBackgroundColor: string;\n   public footerSecondaryColor: string;\n   public footerPrimaryColor: string;\n   public textColorPrimary: string;\n   public textColorSecondary: string;\n   public primaryButtonTextColor: string;\n }\n\n export class Page{\n  private _pageName: string;\n  private _properties: Properties;\n  private _questions: Question[];\n\n  get pageName(): string {\n    return this._pageName;\n  }\n\n  set pageName(value: string) {\n    this._pageName = value;\n  }\n\n  get properties(): Properties {\n    return this._properties;\n  }\n\n  set properties(value: Properties) {\n    this._properties = value;\n  }\n\n  get questions(): Question[] {\n    return this._questions;\n  }\n\n  set questions(value: Question[]) {\n    this._questions = value;\n  }\n}\n\n export class Question{\n  public identifier: string;\n  public questionId: number;\n  public questionType: string;\n  public question: string;\n  public choices: Choice[];\n  public others: Others;\n  public attributes: Attributes;\n  public pictures: Picture[];\n  public rankingItems: RankingItem[];\n  public rows: Row[];\n  public columns: Column[];\n  public contactForm: ContactForm[];\n  public addressForm: AddressForm[];\n  public logicJumps: LogicJumps;\n}\n\nexport class Others {\n  public value: string;\n  public isChecked: boolean;\n  public showCheckbox: boolean;\n}\n\nexport class LogicJumps {\n  public blocks: Block[];\n  public defaultJump: number;\n}\n\nexport class Block {\n  public that: number;\n  public thatIndex: number;\n  public conditions: Condition[]\n}\n\nexport class Condition {\n  public condition: string;\n  public _if: number;\n  public _this: any;\n  public relationWithNextCondition: string;\n\n\n}\n\nexport class RankingItem{\n  public itemId: number;\n  public text: string;\n\n}\n\nexport class ContactForm{\n  public label: string;\n  public type: string;\n  public value: string;\n  public validation: Validation;\n  public keyName: string;\n}\n\nexport class Validation {\n  public required: boolean;\n}\n\nexport class Column{\n  public columnId: number;\n  public label: string;\n  public value: string;\n\n}\n\nexport class Picture{\n  private _id: number;\n  private _picture: string;\n\n  get id(): number {\n    return this._id;\n  }\n\n  set id(value: number) {\n    this._id = value;\n  }\n\n  get picture(): string {\n    return this._picture;\n  }\n\n  set picture(value: string) {\n    this._picture = value;\n  }\n}\n\nexport class AddressForm{\n  private _text: string;\n  private _required: boolean;\n\n\n  get text(): string {\n    return this._text;\n  }\n\n  set text(value: string) {\n    this._text = value;\n  }\n\n  get required(): boolean {\n    return this._required;\n  }\n\n  set required(value: boolean) {\n    this._required = value;\n  }\n}\n\nexport class Row{\n  private _id: number;\n  private _text: string;\n\n\n  get id(): number {\n    return this._id;\n  }\n\n  set id(value: number) {\n    this._id = value;\n  }\n\n  get text(): string {\n    return this._text;\n  }\n\n  set text(value: string) {\n    this._text = value;\n  }\n}\n\nexport class Attributes{\n  public image: string;\n  public description: string;\n  public vertical?: boolean;\n  public video: string;\n  public multipleChoice?: boolean;\n  public randomize?: boolean;\n  public required: boolean;\n  public requiredErrorMessage: string;\n  public others?: boolean;\n  public maxCharacter?: number;\n  public quotation?: boolean;\n  public minimumNumber?: number;\n  public maximumNumber?: number;\n  public numberOfSelection?: number;\n  public defaultCountryCode?: number;\n  public alphabeticalSort?: boolean;\n  public includeAddressForm?: boolean;\n  public startScaleAt?: number;\n  public leftLabel: string;\n  public centerLabel: string;\n  public rightLabel: string;\n  public isDescriptionEnabled: boolean;\n  public steps: Step[];\n  public ratingIcon: string;\n  public selection: Selection;\n  public maxCharacterCount: number;\n  public minCharacterCount: number;\n\n\n}\n\n export class Selection {\n   public type: string;\n   public exact: number;\n   public rangeFrom: number;\n   public rangeTo: number;\n }\n\nexport class Step {\n  public label: string;\n  public value: number;\n}\n\nexport class Choice{\n  public identifier: string;\n  public choiceId: number;\n  public text: string;\n  public isChecked: boolean;\n\n}\n\nexport class Properties{\n  private _headingValue: string;\n  private _subHeadingValue: string;\n  private _backgroundImage: string;\n  private _buttonText: string;\n\n\n  get buttonText(): string {\n    return this._buttonText;\n  }\n\n  set buttonText(value: string) {\n    this._buttonText = value;\n  }\n\n  get subHeadingValue(): string {\n    return this._subHeadingValue;\n  }\n\n  set subHeadingValue(value: string) {\n    this._subHeadingValue = value;\n  }\n\n  get headingValue(): string {\n    return this._headingValue;\n  }\n\n  set headingValue(value: string) {\n    this._headingValue = value;\n  }\n\n  get backgroundImage(): string {\n    return this._backgroundImage;\n  }\n\n  set backgroundImage(value: string) {\n    this._backgroundImage = value;\n  }\n}\n"]}