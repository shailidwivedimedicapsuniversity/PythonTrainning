{"__symbolic":"module","version":4,"metadata":{"SurveyLibService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"initializeSurveyTheme":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"CurrentElement":{"__symbolic":"class","members":{}},"SurveyLibComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"omoto-survey-lib","template":"\n    <app-pages [surveyContent]=\"surveyContent\"\n               (surveyResponseEmitter)=\"emitResponse($event)\"\n               [isTestMode]=\"testMode\"\n               [surveyTheme]=\"theme\"></app-pages>\n  ","styles":[]}]}],"members":{"surveyResponseEmitter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"surveyContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"testMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"theme":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"currentPageIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"currentQuestionIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"isQuestionCardCampaign":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"responseFromQuestionCardCampaign":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"SurveyLibService"},{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"emitResponse":[{"__symbolic":"method"}],"storeResponseFromQuestionCardCampaign":[{"__symbolic":"method"}]}},"SurveyLibModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":33,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"SurveyLibComponent"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":62,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":63,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":64,"character":4},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ngrx/store","name":"StoreModule","line":65,"character":4},"member":"forRoot"},"arguments":[{"survey":{"__symbolic":"reference","name":"ɵz"}}]}],"exports":[{"__symbolic":"reference","name":"SurveyLibComponent"}],"providers":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵba"}],"schemas":[{"__symbolic":"reference","module":"@angular/core","name":"CUSTOM_ELEMENTS_SCHEMA","line":69,"character":13},{"__symbolic":"reference","module":"@angular/core","name":"NO_ERRORS_SCHEMA","line":69,"character":37}]}]}],"members":{}},"PagesModel":{"__symbolic":"class","members":{}},"SurveyContent":{"__symbolic":"class","members":{}},"SelectedThemeModel":{"__symbolic":"class","members":{}},"Font":{"__symbolic":"class","members":{}},"Colors":{"__symbolic":"class","members":{}},"Page":{"__symbolic":"class","members":{}},"Question":{"__symbolic":"class","members":{}},"Others":{"__symbolic":"class","members":{}},"LogicJumps":{"__symbolic":"class","members":{}},"Block":{"__symbolic":"class","members":{}},"Condition":{"__symbolic":"class","members":{}},"RankingItem":{"__symbolic":"class","members":{}},"ContactForm":{"__symbolic":"class","members":{}},"Validation":{"__symbolic":"class","members":{}},"Column":{"__symbolic":"class","members":{}},"Picture":{"__symbolic":"class","members":{}},"AddressForm":{"__symbolic":"class","members":{}},"Row":{"__symbolic":"class","members":{}},"Attributes":{"__symbolic":"class","members":{}},"Selection":{"__symbolic":"class","members":{}},"Step":{"__symbolic":"class","members":{}},"Choice":{"__symbolic":"class","members":{}},"Properties":{"__symbolic":"class","members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"persistSurvey":[{"__symbolic":"method"}],"removeResponsesOfExcludedQuestionIds":[{"__symbolic":"method"}],"getResponse":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"app-pages","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":13,"character":17},"member":"None"},"template":"<!--<link rel=\"stylesheet\" [href]='sanitizer.bypassSecurityTrustResourceUrl(cssUrl)'>-->\n<!--<div *ngIf=\"testMode\">\n  <span class=\"badge-test-mode\">Test mode</span>\n</div>-->\n\n<!--<button (click)=\"currentState()\">Current State</button>-->\n\n<div class=\"survey-container\">\n\n  <div class=\"survey-container-wrap\" *ngIf=\"!surveyLibServices.defaultThankYouPage\">\n    <img class=\"org-logo\" [src]=\"surveyContent.organizationLogo\" [ngStyle]=\"{'visibility' : surveyContent.organizationLogo == undefined ? 'hidden' :'visible'}\"\n      alt=\"\">\n    <app-welcome-page  [welcomePage]=\"surveyContent.pages[surveyLibServices.currentElement.currentPageIndex]\" *ngIf=\"surveyContent.pages[surveyLibServices.currentElement.currentPageIndex].pageName == WELCOME_PAGE\"\n      (nextPageEvent)=\"nextPage()\">\n    </app-welcome-page>\n\n    <app-questionnaire\n      (submitResponse)=\"submitSurvey()\"\n      [questionnairePage]=\"surveyContent.pages[surveyLibServices.currentElement.currentPageIndex]\"\n      *ngIf=\"surveyContent.pages[surveyLibServices.currentElement.currentPageIndex].pageName == QUESTIONNAIRE_PAGE\"\n      (previousPageEvent)=\"previousPage()\"></app-questionnaire>\n\n    <app-thank-you-page\n      [thankYouPage]=\"surveyContent\n      .pages[surveyLibServices.currentElement.currentPageIndex]\"\n      *ngIf=\"surveyContent.pages[surveyLibServices.currentElement.currentPageIndex]\n      .pageName == THANK_YOU_PAGE\">\n    </app-thank-you-page>\n<!--\n    <button class=\"btn-primary\" *ngIf=\"surveyLibServices.enableSubmit\" (click)=\"submitSurvey()\">Submit</button>\n-->\n  </div>\n  <app-default-thank-you-page\n    *ngIf=\"surveyLibServices.defaultThankYouPage\">\n  </app-default-thank-you-page>\n\n  <footer class=\"footer\">\n\n    <div class=\"footer-container\">\n\n      <div class=\"footer-left\" *ngIf=\"surveyContent.pages[surveyLibServices.currentElement.currentPageIndex].pageName == QUESTIONNAIRE_PAGE\">\n        <div class=\"progress-container\">\n         <p><span id=\"step-number\">0</span>/{{(surveyContent.pages[surveyLibServices.currentElement.currentPageIndex].questions.length)}} answered</p>\n          <div class=\"progress-bar\">\n            <progress id=\"progress\" [value]=\"pagesService.surveyResponses !== undefined ? pagesService.surveyResponses.length : 0\" [max]=\"surveyContent.pages[surveyLibServices.currentElement.currentPageIndex].questions.length\"></progress>\n          </div>\n        </div>\n      <div class=\"arrowUp-arrowDown-container\">\n        <button class=\"arrowUp-arrowDown-btn\"\n                [disabled]=\"surveyLibServices.isQuestionCardCampaign && pagesService.sequenceOfQuestionTraversed.length < 3\"\n                (click)=\"previousQuestion()\">\n          <span class=\"arrowDown\"></span>\n        </button>\n          <button class=\"arrowUp-arrowDown-btn\"\n                  (click)=\"nextQuestion()\">\n            <span class=\"arrowUp\"></span>\n        </button>\n        <!--<button class=\"btn up-dwn\" (click)=\"previousQuestion()\">&#11165;</button>-->\n        <!--<button class=\"btn up-dwn\" (click)=\"nextQuestion()\">&#11167;</button>-->\n      </div>\n\n      </div>\n\n      <div class=\"footer-right\">\n        <img [src]=\"'https://cdn.omoto.io/powered-by-omoto-60-x-30@2x.png'\" alt=\"powered by Omoto\">\n      </div>\n    </div>\n\n  </footer>\n\n\n\n</div>\n","styles":[":root{--white-25:rgba(255, 255, 255, 0.25);--font-family:'Ubuntu',sans-serif;--bg-color:#f4a06e;--primary-color:#004e89;--primary-color-dark:#001B56;--footer-bg-color:#f9cfb6;--footer-primary-color:#b98f76;--footer-secondary-color:#fce7da;--text-color-primary:#ffffff;--text-color-secondary:#4a4a4a;--primary-button-text-color:#fffff;--positiveTranslate:translateX(350px);--negativeTranslate:translateX(-350px);--negativeTranslate3D:translate3d(-350px,0,0)}*,:after,:before{box-sizing:inherit}body,html{margin:0;padding:0;height:100%;width:100%;box-sizing:border-box;transition:none!important}.entry-next{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) both animMoveRightToCurrent;animation:.6s cubic-bezier(.215,.61,.355,1) both animMoveRightToCurrent}.entry-next-delay{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveRightToCurrent;animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveRightToCurrent}@-webkit-keyframes animMoveRightToCurrent{from{opacity:0;-webkit-transform:var(--positiveTranslate)}to{opacity:1;-webkit-transform:translateY(0)}}@keyframes animMoveRightToCurrent{from{opacity:0;-webkit-transform:var(--positiveTranslate)}to{opacity:1;-webkit-transform:translateY(0)}}.exit-next{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) forwards animMoveCurrentToLeft;animation:.6s cubic-bezier(.215,.61,.355,1) forwards animMoveCurrentToLeft}.exit-next-delay{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) .1s forwards animMoveCurrentToLeft;animation:.6s cubic-bezier(.215,.61,.355,1) .1s forwards animMoveCurrentToLeft}@-webkit-keyframes animMoveCurrentToLeft{to{opacity:0;-webkit-transform:var(--negativeTranslate3D)}}@keyframes animMoveCurrentToLeft{to{opacity:0;-webkit-transform:var(--negativeTranslate3D);transform:var(--negativeTranslate3D)}}.entry-previous{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) both animMoveLeftToCurrent;animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveLeftToCurrent}.entry-previous-delay{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveLeftToCurrent;animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveLeftToCurrent}@-webkit-keyframes animMoveLeftToCurrent{from{opacity:0;-webkit-transform:var(--negativeTranslate)}to{opacity:1;-webkit-transform:translateY(0)}}@keyframes animMoveLeftToCurrent{from{opacity:0;-webkit-transform:var(--negativeTranslate);transform:var(--negativeTranslate)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}.exit-previous{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) .1s forwards animMoveCurrentToRight;animation:.6s cubic-bezier(.215,.61,.355,1) .1s forwards animMoveCurrentToRight}.exit-previous-delay{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) forwards animMoveCurrentToRight;animation:.6s cubic-bezier(.215,.61,.355,1) forwards animMoveCurrentToRight}@-webkit-keyframes animMoveCurrentToRight{from{opacity:1;-webkit-transform:translateY(0)}to{opacity:0;-webkit-transform:var(--positiveTranslate)}}@keyframes animMoveCurrentToRight{from{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}to{opacity:0;-webkit-transform:var(--positiveTranslate);transform:var(--positiveTranslate)}}.input{border-radius:3px;padding:5px 0 5px 10px;color:var(--text-color-secondary);background-color:var(--white-25);font-size:.875rem;position:relative;box-shadow:1px 1px 3px 0 rgba(0,0,0,.5);height:31px}.select{cursor:pointer;position:relative;width:250px}.select .input:after,.select .input:before{content:'';position:absolute;left:calc(100% - 20px);-webkit-transform:translateY(-50%);transform:translateY(-50%);width:0;height:0}.select .input:before{border-top:5px solid var(--text-color-secondary);border-left:5px solid transparent;border-right:5px solid transparent;top:50%}.select .input:after{border-top:5px solid var(--white-25);border-left:5px solid transparent;border-right:5px solid transparent;top:calc(50% - 1px)}.select-options{position:absolute;width:100%;border-radius:4px;z-index:100;top:104%;left:0;display:none;overflow:hidden;box-shadow:1px 1px 3px 0 rgba(0,0,0,.5)}.select-options.visible{display:block;background-color:var(--white-25);z-index:1}.select-options ul{list-style:none;padding:0;margin:0}.select-options ul li{padding:5px 0 5px 10px;border-bottom:1px solid #ddd;font-size:.875rem;color:var(--text-color-secondary);background-color:var(--white-25);position:relative;overflow:hidden}.select-options ul li:hover{background-color:var(--primary-color);color:var(--text-color-primary)}.select-options ul li:last-child{border-bottom:0}.select-options ul li.selected{color:var(--text-color-primary);background-color:var(--primary-color);padding:5px 5px 5px 35px}.select-options ul li.selected:before{content:'';width:5px;height:10px;color:#000;border:2px solid var(--text-color-primary);border-right:0;border-bottom:0;right:calc(100% - 20px);top:50%;-webkit-transform:translateY(-50%) rotate(-135deg);transform:translateY(-50%) rotate(-135deg);position:absolute}.survey-container{font-weight:400;font-style:normal;font-stretch:normal;letter-spacing:normal;font-family:var(--font-family);line-height:1.5;background-color:var(--bg-color);height:calc(100vh - 80px);width:100%;overflow-y:auto;overflow-x:hidden;margin:0;padding:0}.survey-container-wrap{margin-left:auto;margin-right:auto;margin-bottom:10px;padding-top:8.18em;max-width:46.125em;color:var(--primary-color)}.skip-this-question{color:var(--text-color-secondary);cursor:pointer;font-size:.85em;clear:both}.skip-this-question-marginLeft{margin-left:2%}.skip-this-question:hover{color:var(--primary-color)}.question-description{margin-top:5px;font-size:14px}.footer{height:80px;position:absolute;bottom:0;width:100%;font-family:var(--font-family);background-color:var(--footer-bg-color)}.footer-container{position:absolute;bottom:0;left:50%;max-width:46.125em;width:46.125em;margin-left:-23.0625em}.footer-right{padding:15px 0;float:right}.footer-right img{width:81px}.footer-left{float:left;margin:10px 0 0}.progress-container{width:16.25em;display:inline-block}.progress-container p{margin:0;line-height:normal;font-size:.875rem;color:var(--footer-primary-color)}.progress-bar{width:100%;display:inline-block}.arrowUp-arrowDown-container{display:inline-block;margin:0 0 0 1em}.arrowUp-arrowDown-btn{width:25px;height:25px;background-color:var(--footer-bg-color);border-radius:3px;margin:0 10px 0 0;border:1px solid var(--footer-primary-color);cursor:pointer;padding:0}.arrowUp-arrowDown-btn:active{background:var(--footer-primary-color);outline:var(--footer-primary-color);color:var(--footer-secondary-color)}.arrowUp-arrowDown-btn:active span{border:solid var(--footer-secondary-color);border-width:0 2px 2px 0}.arrowUp-arrowDown-btn:focus{outline:var(--footer-primary-color)}.arrowUp-arrowDown-container span{border:solid var(--footer-primary-color);border-width:0 2px 2px 0;display:inline-block;padding:3px}.arrowUp{transform:rotate(-45deg);-webkit-transform:rotate(-45deg);margin-right:3px}.arrowDown{transform:rotate(135deg);-webkit-transform:rotate(135deg);margin-left:3px}progress{width:100%;border:1px solid var(--footer-primary-color);border-radius:14px}progress::-moz-progress-bar{border-radius:14px;background:var(--footer-primary-color);transition:.5s ease-out}progress::-webkit-progress-bar{border-radius:14px;background:var(--footer-secondary-color)}progress::-webkit-progress-value{border-radius:14px;background:var(--footer-primary-color);transition:.5s ease-out}.org-logo{display:block;max-width:250px;max-height:70px;min-height:50px}.welcome-thankyou-heading{font-size:1.75em;margin:2rem 0 0;font-weight:700}.welcome-thankyou-text{margin:0!important}.survey-statement{font-size:1.31em;font-weight:500;margin:2rem 0 0}.blink-btn-animation{-webkit-animation:.25s 2 blinkAnimation;animation:.25s 2 blinkAnimation}@-webkit-keyframes blinkAnimation{50%{opacity:.3}}@keyframes blinkAnimation{50%{opacity:.3}}.btn-primary{margin:1.56em 0 0;border-radius:4px;text-align:center;background-color:var(--primary-color);border:1px solid var(--primary-color);font-size:1rem;min-width:7.31em;min-height:2.5em;color:var(--primary-button-text-color);font-family:var(--font-family);cursor:pointer}.btn-primary:focus{background-color:var(--primary-color-dark);border:1px solid var(--primary-color-dark);outline:0}.btn-primary:hover{box-shadow:0 11px 22px -6px rgba(0,0,0,.5)}.btn-primary:active{background-color:var(--primary-color-dark)}.btn-secondary{border-radius:4px;margin:10px 10px 0 0;cursor:pointer;color:var(--text-color-secondary);border:1px solid var(--white-25);background-color:var(--white-25);font-family:var(--font-family);font-size:1rem;box-shadow:1px 1px 3px 0 rgba(0,0,0,.5);transition:.3s}.btn-secondary:hover{box-shadow:0 0 3px 0 var(--primary-color);border:solid 1px var(--primary-color)}.btn-secondary:focus{background-color:var(--primary-color);color:var(--text-color-primary);border:var(--primary-color);outline:0;box-shadow:none}.btn-secondary:active{background-color:var(--primary-color);box-shadow:1px 1px 5px 1px rgba(0,0,0,.5);outline:0}.btn-focused-state{background-color:var(--primary-color);color:var(--text-color-primary);border:var(--primary-color);outline:0;box-shadow:none}.checkmark{display:inline-block;-webkit-transform:rotate(45deg);transform:rotate(45deg);height:16px;width:9px;border-bottom:3px solid var(--text-color-secondary);border-right:3px solid var(--text-color-secondary)}.checkmark-checked{border-bottom:3px solid var(--text-color-primary);border-right:3px solid var(--text-color-primary)}.crossmark{position:relative;display:inline-block;margin-bottom:7px;margin-right:25px}.crossmark:after{position:absolute;content:'';display:block;width:18px;height:0;border:solid var(--text-color-secondary);border-width:0 0 3px;-webkit-transform:rotate(45deg);transform:rotate(45deg);left:0;top:0}.crossmark:before{position:absolute;content:'';display:block;width:18px;height:0;border:solid var(--text-color-secondary);border-width:0 0 3px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);left:0;top:0}.crossmark-checked:after,.crossmark-checked:before{border:solid var(--text-color-primary);border-width:0 0 3px}.nps-btn-group{display:flex;justify-content:space-between;width:75%;margin:7px 0 0}.nps-btn{width:40px;height:40px;font-size:1.5em;line-height:1.19;margin:0}.nps-btn-focus{background-color:var(--primary-color);color:var(--text-color-primary);border:var(--primary-color);outline:0;box-shadow:none}.nps-legend{margin:5px 0 0;font-size:.75em;color:var(--text-color-secondary);position:relative;width:75%}#left-nps-label{position:absolute;width:8%;left:0}#center-nps-label{position:absolute;width:8%;left:47.5%}#right-nps-label{position:absolute;width:8%;right:0;text-align:end}.multiple-choice{width:320px;min-height:32px;margin:7px 0 0;padding:5px 0 0 7px;font-size:.875em;display:block;border-radius:4px;border:1px solid var(--white-25);box-shadow:1px 1px 3px 0 rgba(0,0,0,.5);color:var(--text-color-secondary);transition:.3s;background-color:var(--white-25);cursor:pointer}.multiple-choice-checkbox{display:none}.multiple-choice-checkbox:checked+span{background-color:var(--primary-color);color:var(--text-color-primary);border:none;box-shadow:none}.survey-input-textarea{width:95%;min-height:5em;max-height:21em;font-size:.875rem;color:var(--text-color-secondary);margin:7px 0 0;padding:6px 0 0 5px;display:block;background-color:var(--white-25);border:var(--white-25);resize:vertical;font-family:var(--font-family)}.survey-input-textarea:active,.survey-input-textarea:focus{outline:1px solid var(--primary-color)}.survey-input-text-box{width:100%;height:32px;margin:7px 0 0;padding:0 0 0 5px;font-size:.875rem;color:var(--text-color-secondary);background-color:var(--white-25);border:var(--white-25);font-family:var(--font-family)}.survey-input-text-box:active,.survey-input-text-box:focus{outline:1px solid var(--primary-color)}.yes-no-btn{width:71px;height:32px;padding:0}.thumbs-btn{width:40px;height:32px;padding:3px 0 0}.rating{direction:rtl;display:block;margin:7px 0 0;float:left}.rating input[type=radio]{display:none}.rating label{width:32px;height:32px;display:inline-block;cursor:pointer;margin:0 7px 0 0;position:relative}.ratingFillIcon,.ratingOutlineIcon{fill:var(--primary-color);position:absolute}.ratingFillIcon{display:none}.rating input[type=radio]:checked~label>div>.ratingFillIcon,.rating label:hover .ratingFillIcon,.rating label:hover~label .ratingFillIcon{fill:var(--primary-color);display:block}.rating input[type=radio]:checked~label>div>.ratingFillIcon{-webkit-animation:.25s 2 blinkAnimation;animation:.25s 2 blinkAnimation}.drop-down{margin:7px 0 0;width:100%;height:32px;font-size:.75em;line-height:1.5;color:var(--text-color-secondary);padding:7px 0 7px 12px;border:1px solid var(--white-25);border-radius:4px;background-color:var(--white-25);cursor:pointer}.drop-down:hover .dropdown-content{display:block}.drop-down:focus{outline:1px solid var(--primary-color)}.agree-disagree-btn{min-width:115px;height:32px}.matrix{display:flex;justify-content:center;align-items:center}.matrix-left{display:inline-block}.matrix-left p{font-size:1.2em;line-height:1.43;color:var(--p-font-color);margin:12px 0 0}.matrix-right{margin:20px 0 0 20px;padding:0 0 10px}.matrix-star-rating{float:none}.matrix-star-rating label{width:25px;height:25px;margin:0}.matrix-star-rating input[type=radio]:checked~label>img,.matrix-star-rating label:hover,.matrix-star-rating label:hover~label{background:url(https://cdn.omoto.io/star-fill.png) no-repeat}.matrix-drop-down{width:157px;height:32px}.isRequired{color:red;margin-right:3px}.validation-error-msg{color:red;font-size:.75em}@media (min-width:481px) and (max-width:767px){.survey-container{height:100%}.survey-container-wrap{padding:20px 20px 10px;background-color:var(--bg-color);height:calc(100% - 59px);overflow-x:hidden;overflow-y:auto}.survey-statement{font-size:1.125em}.multiple-choice{width:100%;max-width:320px}.footer{height:59px;position:fixed}.footer-container{padding:0 20px;position:initial;max-width:initial;width:initial;margin:0}.footer-right img{width:60px;height:30px}.progress-container{width:10em}.footer-left{margin:5px 0 0}.btn-primary{margin:20px 0 0}.nps-btn-group{margin-top:7px;width:85%}.nps-legend{width:85%}.nps-btn{width:35px;height:35px;font-size:1.06em;line-height:2.2;margin:0;padding:0}.matrix{margin:0 auto}.matrix-left p{width:138px;height:20px;font-size:.875em}.matrix-right{padding:4px 0 0}}@media (min-width:320px) and (max-width:375px){.survey-container{height:100%}.org-logo{width:100%;height:auto}.survey-container-wrap{margin:0;padding:20px 20px 10px;height:calc(100vh - 59px);background-color:var(--bg-color);overflow-y:auto;overflow-x:hidden}.welcome-thankyou-heading{margin:1rem 0 0}.survey-statement{font-size:14px;margin:1rem 0 0}.multiple-choice{width:100%;max-width:320px;height:28px;padding:4px 0 0 7px;font-size:12px}.footer{height:59px;position:fixed}.footer-container{padding:0 20px;position:initial;max-width:initial;width:initial;margin:0}.footer-right img{width:60px;height:30px}.footer-left{margin:5px 0 0}.progress-container{width:8.3em}.btn-primary{margin:16px 0 0;font-size:14px}.nps-btn-group{margin-top:7px;width:100%}.nps-btn{width:25px;height:25px;font-size:1.06em;line-height:1.06;margin:0 3px 0 0;padding:0}#right-nps-label,.nps-legend{width:100%}.ratingIconAbove6{width:25px!important;margin:0 3px 0 0!important}.ratingIconAbove6 .ratingFillIcon,.ratingIconAbove6 .ratingOutlineIcon{width:25px}.matrix{margin:0 auto}.matrix-left p{width:138px;height:20px;font-size:.875em}.matrix-right{padding:4px 0 0}}@media (min-width:375px) and (max-width:480px){.survey-container{height:100%}.org-logo{width:100%;height:auto}.survey-container-wrap{margin:0;padding:20px 20px 10px;height:calc(100vh - 59px);background-color:var(--bg-color);overflow-y:auto;overflow-x:hidden}.survey-statement{font-size:1.125em}.multiple-choice{width:100%;max-width:320px}.footer{height:59px;position:fixed}.footer-container{padding:0 20px;position:initial;max-width:initial;width:initial;margin:0}.footer-right img{width:60px;height:30px}.footer-left{margin:5px 0 0}.progress-container{width:8.3em}.btn-primary{margin:20px 0 0}.nps-btn-group{margin-top:7px;width:100%}.nps-btn{width:25px;height:25px;font-size:1.06em;line-height:1.06;margin:0;padding:0}#right-nps-label,.nps-legend{width:100%}.ratingIconAbove6{width:25px!important;margin:0 3px 0 0!important}.ratingIconAbove6 .ratingFillIcon,.ratingIconAbove6 .ratingOutlineIcon{width:25px}.matrix{margin:0 auto}.matrix-left p{width:138px;height:20px;font-size:.875em}.matrix-right{padding:4px 0 0}}#error_snackbar{visibility:hidden;width:250px;margin-left:-125px;background-color:rgba(0,0,0,.55);color:#fff;text-align:center;border-radius:2px;padding:16px;position:absolute;z-index:1;left:50%;bottom:10%;font-size:1em}#error_snackbar.show{visibility:visible;-webkit-animation:.5s fadein,.5s 2.5s fadeout;animation:.5s fadein,.5s 2.5s fadeout}@-webkit-keyframes fadein{from{bottom:0;opacity:0}to{bottom:10%;opacity:1}}@keyframes fadein{from{bottom:0;opacity:0}to{bottom:10%;opacity:1}}@-webkit-keyframes fadeout{from{bottom:10%;opacity:1}to{bottom:0;opacity:0}}@keyframes fadeout{from{bottom:10%;opacity:1}to{bottom:0;opacity:0}}@media screen and (-webkit-min-device-pixel-ratio:0){progress{height:10px}input,select,textarea{font-size:16px}}"]}]}],"members":{"surveyResponseEmitter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":21,"character":3}}]}],"surveyContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":3}}]}],"isTestMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"surveyTheme":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"SurveyLibService"}]}],"nextPage":[{"__symbolic":"method"}],"previousPage":[{"__symbolic":"method"}],"submitSurvey":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"setThemeForSurvey":[{"__symbolic":"method"}],"previousQuestion":[{"__symbolic":"method"}],"nextQuestion":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"goTo":[{"__symbolic":"method"}],"animateExitNext":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"app-welcome-page","template":"<div id=\"welcome-page\">\n  <div class=\"welcome-thankyou-heading\">{{welcomePage.properties.headingValue}}</div>\n  <div class=\"survey-statement welcome-thankyou-text\"> {{ welcomePage.properties.subHeadingValue }} </div>\n</div>\n\n<div id=\"welcome-page-delay\" >\n<button class=\"btn-primary\" id=\"btn-primary\"  (click)=\"nextPage()\">{{ welcomePage.properties.buttonText}}</button>\n</div>\n\n\n\n","styles":[""]}]}],"members":{"welcomePage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"nextPageEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"nextPage":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"app-questionnaire","template":"<app-choice\n  [isLastQuestion]=\"(questionnairePage.questions.length -1) === this.surveyLibService.currentElement.currentQuestionIndex \"\n\n  [choiceQuestion]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n            *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Choice'\"\n            [isMultipleChoice]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].attributes.multipleChoice\"\n            [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n            (submitEvent)=\"nextQuestion()\">\n</app-choice>\n\n<app-nps\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Nps'\"\n  [npsQuestion]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  (submitEvent)=\"nextQuestion()\">\n</app-nps>\n\n<app-yes-no\n  [yesNoQuestion]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Yes / No'\"\n  (submitEvent)=\"nextQuestion()\">\n</app-yes-no>\n\n<app-rating\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Rating'\"\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  [ratingQuestion]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  (submitEvent)=\"nextQuestion()\">\n</app-rating>\n\n\n<app-drop-down\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Drop down'\"\n  [dropDown]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  (submitEvent)=\"nextQuestion()\">\n</app-drop-down>\n\n\n<app-short-text\n  [isLastQuestion]=\"(questionnairePage.questions.length -1) === this.surveyLibService.currentElement.currentQuestionIndex \"\n\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Short text'\"\n  [shortText]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  (submitEvent)=\"nextQuestion()\">\n</app-short-text>\n\n\n<app-long-text\n  [isLastQuestion]=\"(questionnairePage.questions.length -1) === this.surveyLibService.currentElement.currentQuestionIndex \"\n\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  [longText]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Long text'\"\n  (submitEvent)=\"nextQuestion()\">\n</app-long-text>\n\n<app-statement\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Statement'\"\n  [statement]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  (submitEvent)=\"nextQuestion()\">\n</app-statement>\n\n\n<app-email\n  [isLastQuestion]=\"(questionnairePage.questions.length -1) === this.surveyLibService.currentElement.currentQuestionIndex \"\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Email'\"\n  [email]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  (submitEvent)=\"nextQuestion()\">\n</app-email>\n\n<app-phone\n  [isLastQuestion]=\"(questionnairePage.questions.length -1) === this.surveyLibService.currentElement.currentQuestionIndex \"\n\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Phone number'\"\n  [phone]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  (submitEvent)=\"nextQuestion()\">\n</app-phone>\n\n<app-number\n  [isLastQuestion]=\"(questionnairePage.questions.length -1) === this.surveyLibService.currentElement.currentQuestionIndex \"\n\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Number'\"\n  [phone]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  (submitEvent)=\"nextQuestion()\">\n</app-number>\n\n\n<app-name [name]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n          [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n          *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Name'\"\n          (submitEvent)=\"nextQuestion()\">\n</app-name>\n\n<app-website\n  [isLastQuestion]=\"(questionnairePage.questions.length -1) === this.surveyLibService.currentElement.currentQuestionIndex \"\n  [website]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n             [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n             *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Website'\"\n             (submitEvent)=\"nextQuestion()\"></app-website>\n\n<app-agree-disagree\n  *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Legal'\"\n  [agreeDisagree]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n  [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n  (submitEvent)=\"nextQuestion()\">\n</app-agree-disagree>\n\n<app-date [dateQuestion]=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n          *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Date'\"\n          [surveyResponse]=\"pagesService.getResponse(questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].identifier)\"\n          (submitEvent)=\"nextQuestion()\">\n</app-date>\n<!-- <app-contact-form *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Contact Form'\"\n                   [contactForm] = \"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n                   (submitEvent)=\"nextQuestion()\">\n </app-contact-form>\n <app-address *ngIf=\"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex].questionType == 'Address Form'\"\n              [addressForm] = \"questionnairePage.questions[surveyLibService.currentElement.currentQuestionIndex]\"\n              (submitEvent)=\"nextQuestion()\">\n </app-address>-->\n\n\n\n\n<!--<button class=\"back-button\" mat-button (click)=\"previousQuestion()\">Back</button>\n<button class=\"submit-button\"\n        mat-button\n        *ngIf=\"isLastQuestion\"\n        (click)=\"submitResponse()\">Submit</button>-->\n\n<div id=\"error_snackbar\"><span id=\"message\">Error</span></div>\n","styles":["/*!* START OF ANIMATION*!*//*!* END OF ANIMATION*!*/",":root{--white-25:rgba(255, 255, 255, 0.25);--font-family:'Ubuntu',sans-serif;--bg-color:#f4a06e;--primary-color:#004e89;--primary-color-dark:#001B56;--footer-bg-color:#f9cfb6;--footer-primary-color:#b98f76;--footer-secondary-color:#fce7da;--text-color-primary:#ffffff;--text-color-secondary:#4a4a4a;--primary-button-text-color:#fffff;--positiveTranslate:translateX(350px);--negativeTranslate:translateX(-350px);--negativeTranslate3D:translate3d(-350px,0,0)}*,:after,:before{box-sizing:inherit}body,html{margin:0;padding:0;height:100%;width:100%;box-sizing:border-box;transition:none!important}.entry-next{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) both animMoveRightToCurrent;animation:.6s cubic-bezier(.215,.61,.355,1) both animMoveRightToCurrent}.entry-next-delay{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveRightToCurrent;animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveRightToCurrent}@-webkit-keyframes animMoveRightToCurrent{from{opacity:0;-webkit-transform:var(--positiveTranslate)}to{opacity:1;-webkit-transform:translateY(0)}}@keyframes animMoveRightToCurrent{from{opacity:0;-webkit-transform:var(--positiveTranslate)}to{opacity:1;-webkit-transform:translateY(0)}}.exit-next{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) forwards animMoveCurrentToLeft;animation:.6s cubic-bezier(.215,.61,.355,1) forwards animMoveCurrentToLeft}.exit-next-delay{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) .1s forwards animMoveCurrentToLeft;animation:.6s cubic-bezier(.215,.61,.355,1) .1s forwards animMoveCurrentToLeft}@-webkit-keyframes animMoveCurrentToLeft{to{opacity:0;-webkit-transform:var(--negativeTranslate3D)}}@keyframes animMoveCurrentToLeft{to{opacity:0;-webkit-transform:var(--negativeTranslate3D);transform:var(--negativeTranslate3D)}}.entry-previous{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) both animMoveLeftToCurrent;animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveLeftToCurrent}.entry-previous-delay{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveLeftToCurrent;animation:.6s cubic-bezier(.215,.61,.355,1) .1s both animMoveLeftToCurrent}@-webkit-keyframes animMoveLeftToCurrent{from{opacity:0;-webkit-transform:var(--negativeTranslate)}to{opacity:1;-webkit-transform:translateY(0)}}@keyframes animMoveLeftToCurrent{from{opacity:0;-webkit-transform:var(--negativeTranslate);transform:var(--negativeTranslate)}to{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}}.exit-previous{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) .1s forwards animMoveCurrentToRight;animation:.6s cubic-bezier(.215,.61,.355,1) .1s forwards animMoveCurrentToRight}.exit-previous-delay{-webkit-animation:.6s cubic-bezier(.215,.61,.355,1) forwards animMoveCurrentToRight;animation:.6s cubic-bezier(.215,.61,.355,1) forwards animMoveCurrentToRight}@-webkit-keyframes animMoveCurrentToRight{from{opacity:1;-webkit-transform:translateY(0)}to{opacity:0;-webkit-transform:var(--positiveTranslate)}}@keyframes animMoveCurrentToRight{from{opacity:1;-webkit-transform:translateY(0);transform:translateY(0)}to{opacity:0;-webkit-transform:var(--positiveTranslate);transform:var(--positiveTranslate)}}.input{border-radius:3px;padding:5px 0 5px 10px;color:var(--text-color-secondary);background-color:var(--white-25);font-size:.875rem;position:relative;box-shadow:1px 1px 3px 0 rgba(0,0,0,.5);height:31px}.select{cursor:pointer;position:relative;width:250px}.select .input:after,.select .input:before{content:'';position:absolute;left:calc(100% - 20px);-webkit-transform:translateY(-50%);transform:translateY(-50%);width:0;height:0}.select .input:before{border-top:5px solid var(--text-color-secondary);border-left:5px solid transparent;border-right:5px solid transparent;top:50%}.select .input:after{border-top:5px solid var(--white-25);border-left:5px solid transparent;border-right:5px solid transparent;top:calc(50% - 1px)}.select-options{position:absolute;width:100%;border-radius:4px;z-index:100;top:104%;left:0;display:none;overflow:hidden;box-shadow:1px 1px 3px 0 rgba(0,0,0,.5)}.select-options.visible{display:block;background-color:var(--white-25);z-index:1}.select-options ul{list-style:none;padding:0;margin:0}.select-options ul li{padding:5px 0 5px 10px;border-bottom:1px solid #ddd;font-size:.875rem;color:var(--text-color-secondary);background-color:var(--white-25);position:relative;overflow:hidden}.select-options ul li:hover{background-color:var(--primary-color);color:var(--text-color-primary)}.select-options ul li:last-child{border-bottom:0}.select-options ul li.selected{color:var(--text-color-primary);background-color:var(--primary-color);padding:5px 5px 5px 35px}.select-options ul li.selected:before{content:'';width:5px;height:10px;color:#000;border:2px solid var(--text-color-primary);border-right:0;border-bottom:0;right:calc(100% - 20px);top:50%;-webkit-transform:translateY(-50%) rotate(-135deg);transform:translateY(-50%) rotate(-135deg);position:absolute}.survey-container{font-weight:400;font-style:normal;font-stretch:normal;letter-spacing:normal;font-family:var(--font-family);line-height:1.5;background-color:var(--bg-color);height:calc(100vh - 80px);width:100%;overflow-y:auto;overflow-x:hidden;margin:0;padding:0}.survey-container-wrap{margin-left:auto;margin-right:auto;margin-bottom:10px;padding-top:8.18em;max-width:46.125em;color:var(--primary-color)}.skip-this-question{color:var(--text-color-secondary);cursor:pointer;font-size:.85em;clear:both}.skip-this-question-marginLeft{margin-left:2%}.skip-this-question:hover{color:var(--primary-color)}.question-description{margin-top:5px;font-size:14px}.footer{height:80px;position:absolute;bottom:0;width:100%;font-family:var(--font-family);background-color:var(--footer-bg-color)}.footer-container{position:absolute;bottom:0;left:50%;max-width:46.125em;width:46.125em;margin-left:-23.0625em}.footer-right{padding:15px 0;float:right}.footer-right img{width:81px}.footer-left{float:left;margin:10px 0 0}.progress-container{width:16.25em;display:inline-block}.progress-container p{margin:0;line-height:normal;font-size:.875rem;color:var(--footer-primary-color)}.progress-bar{width:100%;display:inline-block}.arrowUp-arrowDown-container{display:inline-block;margin:0 0 0 1em}.arrowUp-arrowDown-btn{width:25px;height:25px;background-color:var(--footer-bg-color);border-radius:3px;margin:0 10px 0 0;border:1px solid var(--footer-primary-color);cursor:pointer;padding:0}.arrowUp-arrowDown-btn:active{background:var(--footer-primary-color);outline:var(--footer-primary-color);color:var(--footer-secondary-color)}.arrowUp-arrowDown-btn:active span{border:solid var(--footer-secondary-color);border-width:0 2px 2px 0}.arrowUp-arrowDown-btn:focus{outline:var(--footer-primary-color)}.arrowUp-arrowDown-container span{border:solid var(--footer-primary-color);border-width:0 2px 2px 0;display:inline-block;padding:3px}.arrowUp{transform:rotate(-45deg);-webkit-transform:rotate(-45deg);margin-right:3px}.arrowDown{transform:rotate(135deg);-webkit-transform:rotate(135deg);margin-left:3px}progress{width:100%;border:1px solid var(--footer-primary-color);border-radius:14px}progress::-moz-progress-bar{border-radius:14px;background:var(--footer-primary-color);transition:.5s ease-out}progress::-webkit-progress-bar{border-radius:14px;background:var(--footer-secondary-color)}progress::-webkit-progress-value{border-radius:14px;background:var(--footer-primary-color);transition:.5s ease-out}.org-logo{display:block;max-width:250px;max-height:70px;min-height:50px}.welcome-thankyou-heading{font-size:1.75em;margin:2rem 0 0;font-weight:700}.welcome-thankyou-text{margin:0!important}.survey-statement{font-size:1.31em;font-weight:500;margin:2rem 0 0}.blink-btn-animation{-webkit-animation:.25s 2 blinkAnimation;animation:.25s 2 blinkAnimation}@-webkit-keyframes blinkAnimation{50%{opacity:.3}}@keyframes blinkAnimation{50%{opacity:.3}}.btn-primary{margin:1.56em 0 0;border-radius:4px;text-align:center;background-color:var(--primary-color);border:1px solid var(--primary-color);font-size:1rem;min-width:7.31em;min-height:2.5em;color:var(--primary-button-text-color);font-family:var(--font-family);cursor:pointer}.btn-primary:focus{background-color:var(--primary-color-dark);border:1px solid var(--primary-color-dark);outline:0}.btn-primary:hover{box-shadow:0 11px 22px -6px rgba(0,0,0,.5)}.btn-primary:active{background-color:var(--primary-color-dark)}.btn-secondary{border-radius:4px;margin:10px 10px 0 0;cursor:pointer;color:var(--text-color-secondary);border:1px solid var(--white-25);background-color:var(--white-25);font-family:var(--font-family);font-size:1rem;box-shadow:1px 1px 3px 0 rgba(0,0,0,.5);transition:.3s}.btn-secondary:hover{box-shadow:0 0 3px 0 var(--primary-color);border:solid 1px var(--primary-color)}.btn-secondary:focus{background-color:var(--primary-color);color:var(--text-color-primary);border:var(--primary-color);outline:0;box-shadow:none}.btn-secondary:active{background-color:var(--primary-color);box-shadow:1px 1px 5px 1px rgba(0,0,0,.5);outline:0}.btn-focused-state{background-color:var(--primary-color);color:var(--text-color-primary);border:var(--primary-color);outline:0;box-shadow:none}.checkmark{display:inline-block;-webkit-transform:rotate(45deg);transform:rotate(45deg);height:16px;width:9px;border-bottom:3px solid var(--text-color-secondary);border-right:3px solid var(--text-color-secondary)}.checkmark-checked{border-bottom:3px solid var(--text-color-primary);border-right:3px solid var(--text-color-primary)}.crossmark{position:relative;display:inline-block;margin-bottom:7px;margin-right:25px}.crossmark:after{position:absolute;content:'';display:block;width:18px;height:0;border:solid var(--text-color-secondary);border-width:0 0 3px;-webkit-transform:rotate(45deg);transform:rotate(45deg);left:0;top:0}.crossmark:before{position:absolute;content:'';display:block;width:18px;height:0;border:solid var(--text-color-secondary);border-width:0 0 3px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);left:0;top:0}.crossmark-checked:after,.crossmark-checked:before{border:solid var(--text-color-primary);border-width:0 0 3px}.nps-btn-group{display:flex;justify-content:space-between;width:75%;margin:7px 0 0}.nps-btn{width:40px;height:40px;font-size:1.5em;line-height:1.19;margin:0}.nps-btn-focus{background-color:var(--primary-color);color:var(--text-color-primary);border:var(--primary-color);outline:0;box-shadow:none}.nps-legend{margin:5px 0 0;font-size:.75em;color:var(--text-color-secondary);position:relative;width:75%}#left-nps-label{position:absolute;width:8%;left:0}#center-nps-label{position:absolute;width:8%;left:47.5%}#right-nps-label{position:absolute;width:8%;right:0;text-align:end}.multiple-choice{width:320px;min-height:32px;margin:7px 0 0;padding:5px 0 0 7px;font-size:.875em;display:block;border-radius:4px;border:1px solid var(--white-25);box-shadow:1px 1px 3px 0 rgba(0,0,0,.5);color:var(--text-color-secondary);transition:.3s;background-color:var(--white-25);cursor:pointer}.multiple-choice-checkbox{display:none}.multiple-choice-checkbox:checked+span{background-color:var(--primary-color);color:var(--text-color-primary);border:none;box-shadow:none}.survey-input-textarea{width:95%;min-height:5em;max-height:21em;font-size:.875rem;color:var(--text-color-secondary);margin:7px 0 0;padding:6px 0 0 5px;display:block;background-color:var(--white-25);border:var(--white-25);resize:vertical;font-family:var(--font-family)}.survey-input-textarea:active,.survey-input-textarea:focus{outline:1px solid var(--primary-color)}.survey-input-text-box{width:100%;height:32px;margin:7px 0 0;padding:0 0 0 5px;font-size:.875rem;color:var(--text-color-secondary);background-color:var(--white-25);border:var(--white-25);font-family:var(--font-family)}.survey-input-text-box:active,.survey-input-text-box:focus{outline:1px solid var(--primary-color)}.yes-no-btn{width:71px;height:32px;padding:0}.thumbs-btn{width:40px;height:32px;padding:3px 0 0}.rating{direction:rtl;display:block;margin:7px 0 0;float:left}.rating input[type=radio]{display:none}.rating label{width:32px;height:32px;display:inline-block;cursor:pointer;margin:0 7px 0 0;position:relative}.ratingFillIcon,.ratingOutlineIcon{fill:var(--primary-color);position:absolute}.ratingFillIcon{display:none}.rating input[type=radio]:checked~label>div>.ratingFillIcon,.rating label:hover .ratingFillIcon,.rating label:hover~label .ratingFillIcon{fill:var(--primary-color);display:block}.rating input[type=radio]:checked~label>div>.ratingFillIcon{-webkit-animation:.25s 2 blinkAnimation;animation:.25s 2 blinkAnimation}.drop-down{margin:7px 0 0;width:100%;height:32px;font-size:.75em;line-height:1.5;color:var(--text-color-secondary);padding:7px 0 7px 12px;border:1px solid var(--white-25);border-radius:4px;background-color:var(--white-25);cursor:pointer}.drop-down:hover .dropdown-content{display:block}.drop-down:focus{outline:1px solid var(--primary-color)}.agree-disagree-btn{min-width:115px;height:32px}.matrix{display:flex;justify-content:center;align-items:center}.matrix-left{display:inline-block}.matrix-left p{font-size:1.2em;line-height:1.43;color:var(--p-font-color);margin:12px 0 0}.matrix-right{margin:20px 0 0 20px;padding:0 0 10px}.matrix-star-rating{float:none}.matrix-star-rating label{width:25px;height:25px;margin:0}.matrix-star-rating input[type=radio]:checked~label>img,.matrix-star-rating label:hover,.matrix-star-rating label:hover~label{background:url(https://cdn.omoto.io/star-fill.png) no-repeat}.matrix-drop-down{width:157px;height:32px}.isRequired{color:red;margin-right:3px}.validation-error-msg{color:red;font-size:.75em}@media (min-width:481px) and (max-width:767px){.survey-container{height:100%}.survey-container-wrap{padding:20px 20px 10px;background-color:var(--bg-color);height:calc(100% - 59px);overflow-x:hidden;overflow-y:auto}.survey-statement{font-size:1.125em}.multiple-choice{width:100%;max-width:320px}.footer{height:59px;position:fixed}.footer-container{padding:0 20px;position:initial;max-width:initial;width:initial;margin:0}.footer-right img{width:60px;height:30px}.progress-container{width:10em}.footer-left{margin:5px 0 0}.btn-primary{margin:20px 0 0}.nps-btn-group{margin-top:7px;width:85%}.nps-legend{width:85%}.nps-btn{width:35px;height:35px;font-size:1.06em;line-height:2.2;margin:0;padding:0}.matrix{margin:0 auto}.matrix-left p{width:138px;height:20px;font-size:.875em}.matrix-right{padding:4px 0 0}}@media (min-width:320px) and (max-width:375px){.survey-container{height:100%}.org-logo{width:100%;height:auto}.survey-container-wrap{margin:0;padding:20px 20px 10px;height:calc(100vh - 59px);background-color:var(--bg-color);overflow-y:auto;overflow-x:hidden}.welcome-thankyou-heading{margin:1rem 0 0}.survey-statement{font-size:14px;margin:1rem 0 0}.multiple-choice{width:100%;max-width:320px;height:28px;padding:4px 0 0 7px;font-size:12px}.footer{height:59px;position:fixed}.footer-container{padding:0 20px;position:initial;max-width:initial;width:initial;margin:0}.footer-right img{width:60px;height:30px}.footer-left{margin:5px 0 0}.progress-container{width:8.3em}.btn-primary{margin:16px 0 0;font-size:14px}.nps-btn-group{margin-top:7px;width:100%}.nps-btn{width:25px;height:25px;font-size:1.06em;line-height:1.06;margin:0 3px 0 0;padding:0}#right-nps-label,.nps-legend{width:100%}.ratingIconAbove6{width:25px!important;margin:0 3px 0 0!important}.ratingIconAbove6 .ratingFillIcon,.ratingIconAbove6 .ratingOutlineIcon{width:25px}.matrix{margin:0 auto}.matrix-left p{width:138px;height:20px;font-size:.875em}.matrix-right{padding:4px 0 0}}@media (min-width:375px) and (max-width:480px){.survey-container{height:100%}.org-logo{width:100%;height:auto}.survey-container-wrap{margin:0;padding:20px 20px 10px;height:calc(100vh - 59px);background-color:var(--bg-color);overflow-y:auto;overflow-x:hidden}.survey-statement{font-size:1.125em}.multiple-choice{width:100%;max-width:320px}.footer{height:59px;position:fixed}.footer-container{padding:0 20px;position:initial;max-width:initial;width:initial;margin:0}.footer-right img{width:60px;height:30px}.footer-left{margin:5px 0 0}.progress-container{width:8.3em}.btn-primary{margin:20px 0 0}.nps-btn-group{margin-top:7px;width:100%}.nps-btn{width:25px;height:25px;font-size:1.06em;line-height:1.06;margin:0;padding:0}#right-nps-label,.nps-legend{width:100%}.ratingIconAbove6{width:25px!important;margin:0 3px 0 0!important}.ratingIconAbove6 .ratingFillIcon,.ratingIconAbove6 .ratingOutlineIcon{width:25px}.matrix{margin:0 auto}.matrix-left p{width:138px;height:20px;font-size:.875em}.matrix-right{padding:4px 0 0}}#error_snackbar{visibility:hidden;width:250px;margin-left:-125px;background-color:rgba(0,0,0,.55);color:#fff;text-align:center;border-radius:2px;padding:16px;position:absolute;z-index:1;left:50%;bottom:10%;font-size:1em}#error_snackbar.show{visibility:visible;-webkit-animation:.5s fadein,.5s 2.5s fadeout;animation:.5s fadein,.5s 2.5s fadeout}@-webkit-keyframes fadein{from{bottom:0;opacity:0}to{bottom:10%;opacity:1}}@keyframes fadein{from{bottom:0;opacity:0}to{bottom:10%;opacity:1}}@-webkit-keyframes fadeout{from{bottom:10%;opacity:1}to{bottom:0;opacity:0}}@keyframes fadeout{from{bottom:10%;opacity:1}to{bottom:0;opacity:0}}@media screen and (-webkit-min-device-pixel-ratio:0){progress{height:10px}input,select,textarea{font-size:16px}}"]}]}],"members":{"previousPageEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":17,"character":3}}]}],"currentQuestionIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"submitResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":23,"character":3}}]}],"questionnairePage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"SurveyLibService"}]}],"ngOnInit":[{"__symbolic":"method"}],"nextQuestion":[{"__symbolic":"method"}],"previousQuestion":[{"__symbolic":"method"}],"jump":[{"__symbolic":"method"}],"logicJump":[{"__symbolic":"method"}],"defaultJump":[{"__symbolic":"method"}],"backwardJump":[{"__symbolic":"method"}],"forwardJump":[{"__symbolic":"method"}],"removeResponses":[{"__symbolic":"method"}],"updateProgressBar":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"showErrorMessage":[{"__symbolic":"method"}],"animateExitNext":[{"__symbolic":"method"}],"animatePreviousExit":[{"__symbolic":"method"}]},"statics":{"isBackwardJump":{"__symbolic":"function","parameters":["currentQuestionIndex","jumpIndex"],"value":{"__symbolic":"binop","operator":"<","left":{"__symbolic":"reference","name":"jumpIndex"},"right":{"__symbolic":"reference","name":"currentQuestionIndex"}}}}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"app-thank-you-page","template":"<div id=\"thank-you-page\">\n        <div class=\"welcome-thankyou-heading\">{{ thankYouPage.properties.headingValue }}</div>\n\n   <div class=\"survey-statement welcome-thankyou-text\">  {{ thankYouPage.properties.subHeadingValue }} </div>\n</div>\n\n<div id=\"thank-you-page-delay\">\n<button class=\"btn-primary\" id=\"btn-primary\" >{{ thankYouPage.properties.buttonText }}</button>\n</div>\n\n","styles":[""]}]}],"members":{"thankYouPage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"app-choice","template":"<div id=\"choice-question\">\n\n  <div class=\"survey-statement\">\n    <span *ngIf=\"choiceQuestion.attributes.required\" class=\"isRequired\">*</span>{{choiceQuestion.question}}\n  </div>\n  <p class=\"question-description\">\n    {{choiceQuestion.attributes.description}}\n  </p>\n\n</div>\n<div id=\"choice-question-delay\">\n\n  <ng-container *ngIf=\"isMultipleChoice; else singleSelection\">\n\n    <div *ngFor=\"let c of choiceQuestion.choices; index as choiceIndex\">\n      <label>\n        <input class=\"multiple-choice-checkbox\" type=\"checkbox\" name=\"option {{choiceIndex}}\"\n               (ngModelChange)=\"onOptionSelectionChange($event)\"\n               [disabled]=\"isDisabled(c)\"\n               [(ngModel)]=\"c.isChecked\"/>\n        <span class=\"btn-secondary multiple-choice\">{{c.text}}</span>\n      </label>\n    </div>\n\n\n    <div *ngIf=\"choiceQuestion.attributes.others && choiceQuestion.others != undefined\">\n      <label *ngIf=\"choiceQuestion.others.showCheckbox\">\n        <input type=\"checkbox\" name=\"Others\" style=\"display: none;\"\n               (click)=\"onClickOthers()\"\n               [(ngModel)]=\"choiceQuestion.others.isChecked\"/>\n        <span class=\"btn-secondary multiple-choice\">{{choiceQuestion.others.value}}</span>\n      </label>\n      <div *ngIf=\"!choiceQuestion.others.showCheckbox\">\n      <span class=\"btn-secondary multiple-choice\">\n            <input type=\"text\"\n                   appAutofocus\n                   [(ngModel)]=\"choiceQuestion.others.value\"\n                   class=\"multiple-choice-editableTextBox\">\n            <button (click)=\"onInputOthers()\"\n                    class=\"btn editable-others\">&#10004;</button>\n      </span>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template #singleSelection>\n    <div\n      *ngFor=\"let c of choiceQuestion.choices; index as choiceIndex\">\n      <label>\n        <input class=\"multiple-choice-radio-btn\"\n               type=\"radio\"\n               name=\"radio_name\"\n               [id]=\"choiceIndex\"\n               [value]=\"c.identifier\"\n               (change)=\"onSingleSelect(c.identifier)\"\n               [checked]=\"c.isChecked\"\n        />\n        <span class=\"multiple-choice\">{{c.text}}</span>\n      </label>\n    </div>\n  </ng-template>\n\n  <button class=\"btn-primary\" id=\"btn-primary\" (click)=\"submit()\">{{isLastQuestion?'Submit': 'Done'}}</button>\n  <span *ngIf=\"!choiceQuestion.attributes.required\" (click)=\"submit()\"\n        class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n","styles":[".multiple-choice-radio-btn{display:none}.editable-others{padding:0 4%;border:1px solid var(--white-25);margin:1.6% 1% 0 0}.editable-others:active,.editable-others:focus{border:1px solid var(--white-25)}.multiple-choice-editableTextBox{width:85%!important;height:28px!important;border:none!important;padding-left:2%!important;margin:0!important;font-size:inherit;color:var(--text-color-secondary)}.multiple-choice-editableTextBox:active,.multiple-choice-editableTextBox:focus{outline:0!important}.mcq-disabled{background:0 0;cursor:not-allowed}.mcq-subcategory{padding-left:15px}"]}]}],"members":{"choiceQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"isLastQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"isMultipleChoice":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"submit":[{"__symbolic":"method"}],"changeSelection":[{"__symbolic":"method"}],"onClickOthers":[{"__symbolic":"method"}],"onInputOthers":[{"__symbolic":"method"}],"onOptionSelectionChange":[{"__symbolic":"method"}],"onSingleSelect":[{"__symbolic":"method"}],"isDisabled":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-yes-no","template":"<div id=\"yes-no-question\">\n<div class=\"survey-statement\">\n  <span *ngIf=\"yesNoQuestion.attributes.required\" style=\"color:red;margin-right: 0.5%\">*</span>{{ yesNoQuestion.question }} </div>\n  <p class=\"question-description\">\n  {{yesNoQuestion.attributes.description}}\n</p>\n\n</div>\n\n\n\n<div id=\"yes-no-question-delay\">\n<button\n    name=\"yes-no\" value=\"yes\" id=\"yes-btn\"\n    [ngClass]=\"surveyResponse.answer == 'Yes'?'btn-secondary yes-no-btn btn-focused-state':'btn-secondary yes-no-btn'\"\n    (click)=\"onSelect('Yes')\"><span [ngClass]=\"surveyResponse.answer == 'Yes'? 'checkmark checkmark-checked':'checkmark'\"></span><span style=\"margin-left: 10px\">YES</span>\n</button>\n\n\n\n<button\n    name=\"yes-no\" value=\"no\" id=\"no-btn\"\n    [ngClass]=\"surveyResponse.answer == 'No'?'btn-secondary yes-no-btn btn-focused-state':'btn-secondary yes-no-btn'\"\n    (click)=\"onSelect('No')\"><span [ngClass]=\"surveyResponse.answer == 'No'? 'crossmark crossmark-checked':'crossmark'\"></span><span>NO</span>\n</button>\n\n\n<div style=\"margin-top:2%\" *ngIf=\"!yesNoQuestion.attributes.required\" class=\"skip-this-question\">\n  <span (click)=\"onSelect(undefined)\">Skip</span>\n</div>\n\n</div>\n","styles":[""]}]}],"members":{"yesNoQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-short-text","template":"<div id=\"short-question\">\n<div class=\"survey-statement\">\n  <span *ngIf=\"shortText.attributes.required\" class=\"isRequired\">*</span>{{ shortText.question }}</div>\n\n  <p class=\"question-description\">\n  {{shortText.attributes.description}}\n</p>\n\n</div>\n\n<div id=\"short-question-delay\">\n<input class=\"survey-input-text-box\" #shortTextInput\n        type=\"text\" onfocus=\"this.placeholder=''\"\n       [(ngModel)]=\"surveyResponse.answer\"\n       [maxLength]=\"shortText.attributes.maxCharacterCount\"\n       placeholder=\"Enter text here\">\n<button class=\"btn-primary\" id=\"btn-primary\" (click)=\"onInputValue(shortTextInput.value)\">{{isLastQuestion?'Submit': 'Done'}}</button>\n<span\n  (click)=\"onInputValue(undefined)\"\n  *ngIf=\"!shortText.attributes.required\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n","styles":[""]}]}],"members":{"shortText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":19,"character":3}}]}],"isLastQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onInputValue":[{"__symbolic":"method"}],"skipQuestion":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-long-text","template":"<div id=\"long-question\">\n\n<div class=\"survey-statement\">\n  <span *ngIf=\"longText.attributes.required\" class=\"isRequired\">*</span>{{ longText.question }}</div>\n  <p class=\"question-description\">\n  {{longText.attributes.description}}\n</p>\n\n</div>\n\n<div id=\"long-question-delay\">\n<textarea class=\"survey-input-textarea\" #longTextInput onfocus=\"this.placeholder=''\" name=\"message\"\n          placeholder=\"Add comment here\"\n          [maxLength]=\"longText.attributes.maxCharacterCount\"\n          [(ngModel)]=\"surveyResponse.answer\">\n  </textarea>\n<button class=\"btn-primary\"  id=\"btn-primary\" (click)=\"onInputValue(longTextInput.value)\">{{isLastQuestion?'Submit': 'Done'}}</button>\n<span *ngIf=\"!longText.attributes.required\"\n     (click)=\"onInputValue(undefined)\"\n     class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n<!--<div class=\"row\">\n<button id=\"skip-button\"\n        (click)=\"skipQuestion()\">Skip</button>\n<button id=\"done-button\"\n        (click)=\"onInputValue()\">Done</button>\n</div>-->\n</div>\n","styles":[""]}]}],"members":{"longText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"isLastQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"SurveyLibService"}]}],"ngOnInit":[{"__symbolic":"method"}],"onInputValue":[{"__symbolic":"method"}],"skipQuestion":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-statement","template":"<div id=\"statement-question\">\n<div class=\"survey-statement\"> <span *ngIf=\"statement.attributes.required\" class=\"isRequired\">*</span>{{ statement.question }} </div>\n<p class=\"question-description\">\n  {{statement.attributes.description}}\n</p>\n\n</div>\n\n\n\n<div id=\"statement-question-delay\">\n<button class=\"btn-primary\"\n        id=\"btn-primary\"\n        type=\"submit\"\n        *ngIf=\"surveyResponse.answer != 'Ok'\"\n        name=\"name\"\n        (click)=\"onSubmit()\">Done</button>\n<button class=\"btn-primary\"\n        type=\"submit\"\n        id=\"btn-primary\"\n        name=\"name\"\n        appAutofocus\n        *ngIf=\"surveyResponse.answer == 'Ok'\"\n        (click)=\"onSubmit()\">Done</button>\n<span\n  (click)=\"onSkip(undefined)\"\n  *ngIf=\"!statement.attributes.required\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n","styles":[".statement-button{position:absolute;left:0;margin-left:1%}"]}]}],"members":{"statement":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onSkip":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-email","template":"<div id=\"email-question\">\n<div class=\"survey-statement\">\n    <span *ngIf=\"email.attributes.required\" class=\"isRequired\">*</span>{{ email.question }}\n</div>\n<p class=\"question-description\">\n    {{email.attributes.description}}\n  </p>\n\n</div>\n\n\n<div id=\"email-question-delay\">\n<input class=\"survey-input-text-box\"\n  #emailInput\n  type=\"email\"\n  name=\"email\"\n  onfocus=\"this.placeholder=''\"\n  placeholder=\"Enter valid email ID\"\n  [(ngModel)]=\"surveyResponse.answer\">\n  <div *ngIf=\"!isValidEmail\" class=\"validation-error-msg\">Please enter valid email</div>\n<button class=\"btn-primary\" id=\"btn-primary\"  (click)=\"onSubmit(emailInput.value)\">{{isLastQuestion?'Submit': 'Done'}}</button>\n<span (click)=\"onSubmit(undefined)\"\n  *ngIf=\"!email.attributes.required\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n","styles":[".email-text-box{position:absolute;left:0;margin-left:1%}"]}]}],"members":{"email":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":17,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":20,"character":3}}]}],"isLastQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isValidEmailId":[{"__symbolic":"method"}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-nps","template":"<div id=\"nps-question\">\n\n<div class=\"survey-statement\"><u></u>\n  <span *ngIf=\"npsQuestion.attributes.required\" class=\"isRequired\">*</span>{{ npsQuestion.question }} </div>\n  <p class=\"question-description\" *ngIf=\"npsQuestion.attributes.isDescriptionEnabled\">\n  {{npsQuestion.attributes.description}}\n</p>\n</div>\n\n<div id=\"nps-question-delay\">\n<div class=\"nps-btn-group\">\n\n    <button id=\"rating-0\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==0 }\" (click)=\"onSelect(0)\">0</button>\n\n    <button id=\"rating-1\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==1 }\" (click)=\"onSelect(1)\">1</button>\n\n    <button id=\"rating-2\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==2 }\" (click)=\"onSelect(2)\">2</button>\n\n    <button id=\"rating-3\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==3 }\" (click)=\"onSelect(3)\">3</button>\n\n    <button id=\"rating-4\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==4 }\" (click)=\"onSelect(4)\">4</button>\n\n    <button id=\"rating-5\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==5 }\" (click)=\"onSelect(5)\">5</button>\n\n    <button id=\"rating-6\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==6 }\" (click)=\"onSelect(6)\">6</button>\n\n    <button id=\"rating-7\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==7 }\" (click)=\"onSelect(7)\">7</button>\n\n    <button id=\"rating-8\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==8 }\" (click)=\"onSelect(8)\">8</button>\n\n    <button id=\"rating-9\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==9 }\" (click)=\"onSelect(9)\">9</button>\n\n    <button id=\"rating-10\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==10 }\" (click)=\"onSelect(10)\">10</button>\n\n</div>\n<div class=\"nps-legend\">\n  <span id=\"left-nps-label\">{{npsQuestion.attributes.leftLabel}}</span>\n  <span id=\"center-nps-label\">{{npsQuestion.attributes.centerLabel}}</span>\n  <span id=\"right-nps-label\">{{npsQuestion.attributes.rightLabel}}</span>\n</div>\n\n<div  class=\"skip-this-question\" style=\"margin-top:8%;\" *ngIf=\"!npsQuestion.attributes.required\">\n  <span (click)=\"onSelect(undefined)\" >Skip</span>\n</div>\n\n</div>\n","styles":[""]}]}],"members":{"npsQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSelect":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"app-date","template":"\n<div id=\"date-question\">\n<div class=\"survey-statement\">  <span *ngIf=\"dateQuestion.attributes.required\" class=\"isRequired\">*</span>{{dateQuestion.question}}</div>\n<p class=\"question-description\">\n        {{dateQuestion.attributes.description}}\n      </p>\n</div>\n\n<div id=\"date-question-delay\">\n  <!-- for IOS device function will be fired on (blur) -->\n<input *ngIf=\"platform == ('iPhone' || 'iPad')\" type=\"date\" id=\"input\" style=\"display:inline-block\" [(ngModel)]=\"surveyResponse.answer\"\n       (blur)=\"onDateSelect($event.target.value)\">\n  <!-- for IOS device function will be fired on (input) -->\n  <input *ngIf=\"platform !== 'iPhone'\" type=\"date\" id=\"input\" style=\"display:inline-block\" [(ngModel)]=\"surveyResponse.answer\"\n         (input)=\"onDateSelect($event.target.value)\">\n\n  <span\n  (click)=\"onDateSelect(undefined)\"\n  *ngIf=\"!dateQuestion.attributes.required\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n","styles":["[type=date]{background:var(--white-25) url(https://cdn1.iconfinder.com/data/icons/cc_mono_icon_set/blacks/16x16/calendar_2.png) 97% 50% no-repeat;height:2em;outline:0}input::-webkit-clear-button,input::-webkit-inner-spin-button{display:none}input::-webkit-calendar-picker-indicator{color:transparent;opacity:1}input::-webkit-calendar-picker-indicator:hover{background:var(--white-25);cursor:pointer}input{margin:10px 0 0;border:1px solid var(--white-25);background-color:var(--white-25);color:var(--text-color-secondary);padding:3px 5px;width:262px}"]}]}],"members":{"dateQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":16,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onDateSelect":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-rating","template":"<div id=\"rating-question\">\n<div class=\"survey-statement\">\n  <span *ngIf=\"ratingQuestion.attributes.required\" class=\"isRequired\">*</span>{{ratingQuestion.question}}</div>\n  <p class=\"question-description\" [ngStyle]=\"{'display':'ratingQuestion.attributes.description == undefined' ? 'none' :'block'}\">\n  {{ratingQuestion.attributes.description}}\n</p>\n\n</div>\n\n\n\n<div id=\"rating-question-delay\">\n<div class=\"rating\">\n    <ng-container *ngFor=\"let step of ratingQuestion.attributes.steps; let stepIndex = index\">\n      <input type=\"radio\" [id]=\"ratingQuestion.attributes.steps.length - stepIndex+'rating'\"\n             [value]=\"step.value\"\n             [(ngModel)]=\"surveyResponse.rating\"\n             (click)=\"onRatingSelect(step.value); $event.stopPropagation()\"\n             name=\"star-rating\" >\n      <label [for] = \"ratingQuestion.attributes.steps.length - stepIndex+'rating'\">\n        <div *ngIf=\"ratingQuestion.attributes.ratingIcon == 'star'\">\n          <svg class=\"ratingOutlineIcon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M15.668 8.626l8.332 1.159-6.065 5.874 1.48 8.341-7.416-3.997-7.416 3.997 1.481-8.341-6.064-5.874 8.331-1.159 3.668-7.626 3.669 7.626zm-6.67.925l-6.818.948 4.963 4.807-1.212 6.825 6.068-3.271 6.069 3.271-1.212-6.826 4.964-4.806-6.819-.948-3.002-6.241-3.001 6.241z\"/></svg>\n          <svg class=\"ratingFillIcon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M12 .587l3.668 7.568 8.332 1.151-6.064 5.828 1.48 8.279-7.416-3.967-7.417 3.967 1.481-8.279-6.064-5.828 8.332-1.151z\"/></svg>\n        </div>\n        <div *ngIf=\"ratingQuestion.attributes.ratingIcon == 'heart'\">\n          <svg class=\"ratingOutlineIcon\" width=\"30\" height=\"30\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 21.593c-5.63-5.539-11-10.297-11-14.402 0-3.791 3.068-5.191 5.281-5.191 1.312 0 4.151.501 5.719 4.457 1.59-3.968 4.464-4.447 5.726-4.447 2.54 0 5.274 1.621 5.274 5.181 0 4.069-5.136 8.625-11 14.402m5.726-20.583c-2.203 0-4.446 1.042-5.726 3.238-1.285-2.206-3.522-3.248-5.719-3.248-3.183 0-6.281 2.187-6.281 6.191 0 4.661 5.571 9.429 12 15.809 6.43-6.38 12-11.148 12-15.809 0-4.011-3.095-6.181-6.274-6.181\"/></svg>\n          <svg class=\"ratingFillIcon\" width=\"30\" height=\"30\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 24 24\"><path d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\"/></svg>\n        </div>\n        <div *ngIf=\"ratingQuestion.attributes.ratingIcon == 'thumbsUp'\">\n          <svg class=\"ratingOutlineIcon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M21.406 9.558c-1.21-.051-2.87-.278-3.977-.744.809-3.283 1.253-8.814-2.196-8.814-1.861 0-2.351 1.668-2.833 3.329-1.548 5.336-3.946 6.816-6.4 7.401v-.73h-6v12h6v-.904c2.378.228 4.119.864 6.169 1.746 1.257.541 3.053 1.158 5.336 1.158 2.538 0 4.295-.997 5.009-3.686.5-1.877 1.486-7.25 1.486-8.25 0-1.648-1.168-2.446-2.594-2.506zm-17.406 10.442h-2v-8h2v8zm15.896-5.583s.201.01 1.069-.027c1.082-.046 1.051 1.469.004 1.563l-1.761.099c-.734.094-.656 1.203.141 1.172 0 0 .686-.017 1.143-.041 1.068-.056 1.016 1.429.04 1.551-.424.053-1.745.115-1.745.115-.811.072-.706 1.235.109 1.141l.771-.031c.822-.074 1.003.825-.292 1.661-1.567.881-4.685.131-6.416-.614-2.239-.965-4.438-1.934-6.959-2.006v-6c3.264-.749 6.328-2.254 8.321-9.113.898-3.092 1.679-1.931 1.679.574 0 2.071-.49 3.786-.921 5.533 1.061.543 3.371 1.402 6.12 1.556 1.055.059 1.024 1.455-.051 1.584l-1.394.167s-.608 1.111.142 1.116z\"/></svg>\n          <svg class=\"ratingFillIcon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\"><path d=\"M5 22h-5v-12h5v12zm17.615-8.412c-.857-.115-.578-.734.031-.922.521-.16 1.354-.5 1.354-1.51 0-.672-.5-1.562-2.271-1.49-1.228.05-3.666-.198-4.979-.885.906-3.656.688-8.781-1.688-8.781-1.594 0-1.896 1.807-2.375 3.469-1.221 4.242-3.312 6.017-5.687 6.885v10.878c4.382.701 6.345 2.768 10.505 2.768 3.198 0 4.852-1.735 4.852-2.666 0-.335-.272-.573-.96-.626-.811-.062-.734-.812.031-.953 1.268-.234 1.826-.914 1.826-1.543 0-.529-.396-1.022-1.098-1.181-.837-.189-.664-.757.031-.812 1.133-.09 1.688-.764 1.688-1.41 0-.565-.424-1.109-1.26-1.221z\"/></svg>\n        </div>\n      </label>\n    </ng-container>\n</div>\n\n  <div style=\"margin-top:2%\" class=\"skip-this-question\" *ngIf=\"!ratingQuestion.attributes.required\">\n  <span (click)=\"onRatingSelect(undefined)\">Skip</span>\n  </div>\n\n</div>\n\n","styles":[""]}]}],"members":{"ratingQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"onRatingSelect":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"app-drop-down","template":"<div id=\"drop-down-question\">\n<div class=\"survey-statement\">\n    <span *ngIf=\"dropDown.attributes.required\" class=\"isRequired\">*</span>{{dropDown.question}}\n</div>\n<p class=\"question-description\">\n    {{dropDown.attributes.description}}\n  </p>\n\n</div>\n\n\n<div id=\"drop-down-question-delay\">\n  <div>\n  <div style=\"display: inline-block\" class=\"select\" (click)=\"toggleCustomDropDown()\">\n    <div class=\"input\" id=\"input\">{{surveyResponse.answer == undefined ? 'Please select' : surveyResponse.answer }}</div>\n    <div class=\"select-options\" id=\"select-options\">\n      <ul>\n        <li (click)=\"onSelect(choice.text); onDropDownSelection(choice.text, index)\" *ngFor=\"let choice of dropDown.choices; let index = index\"\n            [ngClass]=\"surveyResponse.answer == choice.text ? 'selected':''\"\n        >\n          <span>{{choice.text}}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <span\n    (click)=\"onSelect(undefined)\"\n    *ngIf=\"!dropDown.attributes.required\" id=\"skipBtn\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n\n</div>\n","styles":[".invisible{display:none}"]}]}],"members":{"dropDown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"onSelect":[{"__symbolic":"method"}],"getChoiceById":[{"__symbolic":"method"}],"getChoiceIdByText":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"toggleCustomDropDown":[{"__symbolic":"method"}],"onDropDownSelection":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"app-contact-form","template":"\n<div>\n\n  <form novalidate (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n    <div *ngFor=\"let prop of objectProps\">\n      <label [attr.for]=\"prop\">{{prop.label}}</label>\n\n      <div [ngSwitch]=\"prop.type\">\n        <input *ngSwitchCase=\"'text'\"\n               [formControlName]=\"prop.key\"\n               [id]=\"prop.key\" [type]=\"prop.type\"\n               [(ngModel)] = \"prop.value\">\n\n      </div>\n<!--\n      <div class=\"error\" *ngIf=\"form.get(prop.key).invalid && (form.get(prop.key).dirty || form.get(prop.key).touched)\">\n        <div *ngIf=\"form.get(prop.key).errors.required\">\n          <h6>{{ prop.label }} is required.</h6>\n        </div>\n      </div>-->\n\n\n    </div>\n    <p>\n      <button type=\"submit\">Done</button>\n    </p>\n  </form>\n\n</div>\n","styles":[""]}]}],"members":{"contactForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"createForm":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"app-address","template":"<div>\n  <span *ngIf=\"addressForm.questionType == 'Address Form'\">\n    <span *ngIf=\"addressForm.attributes.required\" class=\"isRequired\">*</span>\n    {{addressForm.question}}\n  </span>\n  <table *ngFor=\"let address of addressForm.addressForm; index as addressIndex\">\n    <tr>\n      <td *ngIf=\"address.text == 'Street 1'\">\n        <label for=\"street 1\">\n          <input type=\"text\" id=\"street 1\" placeholder=\"Street 1\">\n        </label>\n      </td>\n\n      <td *ngIf=\"address.text == 'Street 2'\">\n        <label for=\"street 2\">\n          <input type=\"text\" id=\"street 2\" placeholder=\"Street 2\">\n        </label>\n      </td>\n\n      <td *ngIf=\"address.text == 'City'\">\n        <label for=\"city\">\n          <input type=\"text\" id=\"city\" placeholder=\"City\">\n        </label>\n      </td>\n\n      <td *ngIf=\"address.text == 'State'\">\n        <label for=\"state\">\n          <input type=\"text\" id=\"state\" placeholder=\"State\">\n        </label>\n      </td>\n\n      <td *ngIf=\"address.text == 'Country'\">\n        <label for=\"country\">\n          <input type=\"text\" id=\"country\" placeholder=\"Country\">\n        </label>\n      </td>\n\n      <td *ngIf=\"address.text == 'Zip code'\">\n        <label for=\"zip-code\">\n          <input type=\"text\" id=\"zip-code\" placeholder=\"Zip code\">\n        </label>\n      </td>\n\n    </tr>\n  </table>\n</div>\n","styles":[""]}]}],"members":{"addressForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-phone","template":"<div id=\"phone-question\">\n<div class=\"survey-statement\">\n  <span *ngIf=\"phone.attributes.required\" style=\"color:red;margin-right: 0.5%\">*</span>{{phone.question}}\n</div>\n\n<p class=\"question-description\">\n  {{phone.attributes.description}}\n</p>\n</div>\n\n\n\n<div id=\"phone-question-delay\">\n<input class=\"survey-input-text-box\"\n  #phoneInput\n  type=\"number\"\n  name=\"phone\"\n  [(ngModel)]=\"surveyResponse.answer\"\n  onfocus=\"this.placeholder=''\"\n  placeholder=\"Enter valid phone number\">\n<button class=\"btn-primary\" id=\"btn-primary\" (click)=\"onSubmit(phoneInput.value)\">{{isLastQuestion?'Submit': 'Done'}}</button>\n<span\n  (click)=\"onSubmit(undefined)\"\n  *ngIf=\"!phone.attributes.required\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n","styles":[""]}]}],"members":{"phone":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"isLastQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-name","template":"<div id=\"name-question\">\n<div class=\"survey-statement\">\n  <span *ngIf=\"name.attributes.required\" class=\"isRequired\">*</span>{{name.question}}\n</div>\n<p class=\"question-description\">\n  {{name.attributes.description}}\n</p>\n</div>\n\n\n\n<div id=\"name-question-delay\">\n<input class=\"survey-input-text-box\"\n  #nameInput\n  type=\"text\" name=\"name\"\n  [(ngModel)]=\"surveyResponse.answer\" onfocus=\"this.placeholder=''\"\n  placeholder=\"Enter first name followed by last name\">\n<button class=\"btn-primary\" id=\"btn-primary\" type=\"submit\" name=\"name\" (click)=\"onSubmit(nameInput.value)\">Done</button>\n<span\n  *ngIf=\"!name.attributes.required\"\n  (click)=\"onSubmit(undefined)\"\n  class=\"skip-this-question\">Skip</span>\n</div>\n","styles":[""]}]}],"members":{"name":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-agree-disagree","template":"<div id=\"agree-disagree-question\">\n<div class=\"survey-statement\">\n  <span *ngIf=\"agreeDisagree.attributes.required\" class=\"isRequired\">*</span>{{agreeDisagree.question}}\n</div>\n<p class=\"question-description\">\n  {{agreeDisagree.attributes.description}}\n</p>\n</div>\n\n\n<div id=\"agree-disagree-question-delay\">\n<button id=\"agree\"\n  [ngClass]=\"surveyResponse.answer == 'Agree'?'btn-secondary agree-disagree-btn btn-focused-state':'btn-secondary agree-disagree-btn'\"\n  (click)=\"onSubmit('Agree')\"><span [ngClass]=\"surveyResponse.answer == 'Agree'?'checkmark checkmark-checked':'checkmark'\"></span><span style=\"margin-left: 10px;\">AGREE</span>\n</button>\n\n<button id=\"disagree\"\n  [ngClass]=\"surveyResponse.answer == 'Disagree'?'btn-secondary agree-disagree-btn btn-focused-state':'btn-secondary agree-disagree-btn'\"\n  (click)=\"onSubmit('Disagree')\"><span [ngClass]=\"surveyResponse.answer == 'Disagree'?'crossmark crossmark-checked':'crossmark'\"></span><span>DISAGREE</span>\n</button>\n\n<div style=\"margin-top: 2%;\" class=\"skip-this-question\" *ngIf=\"!agreeDisagree.attributes.required\">\n  <span (click)=\"onSubmit(undefined)\" >Skip</span>\n</div>\n</div>\n","styles":[""]}]}],"members":{"agreeDisagree":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":19,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵu":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"app-website","template":"<div id=\"website-question\">\n<div class=\"survey-statement\">\n    <span *ngIf=\"website.attributes.required\" class=\"isRequired\">*</span>{{website.question}}\n</div>\n<p class=\"question-description\">\n    {{website.attributes.description}}\n  </p>\n</div>\n\n<div id=\"website-question-delay\">\n<input class=\"survey-input-text-box\" #websiteInput\n       type=\"url\"\n       name=\"name\"\n       [(ngModel)]=\"surveyResponse.answer\"\n       placeholder=\"Enter website url\">\n  <div *ngIf=\"!isValidUrl\" class=\"validation-error-msg\">Please enter valid URL</div>\n<button class=\"btn-primary\" id=\"btn-primary\" type=\"submit\" name=\"name\" (click)=\"onSubmit(websiteInput.value)\">{{isLastQuestion?'Submit': 'Done'}}</button>\n\n<span\n  (click)=\"onSubmit(undefined)\"\n  *ngIf=\"!website.attributes.required\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n","styles":[""]}]}],"members":{"website":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":22,"character":3}}]}],"isLastQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"test":[{"__symbolic":"method"}]}},"ɵv":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"app-number","template":"<div id=\"number-question\">\n<div class=\"survey-statement\">\n  <span *ngIf=\"phone.attributes.required\" class=\"isRequired\">*</span>{{phone.question}}\n</div>\n<p class=\"question-description\">\n  {{phone.attributes.description}}\n</p>\n</div>\n\n<div id=\"number-question-delay\">\n<input class=\"survey-input-text-box\"\n  #numberInput\n  type=\"number\"\n  name=\"number\"\n  [(ngModel)]=\"surveyResponse.answer\"\n  onfocus=\"this.placeholder=''\" placeholder=\"Number\">\n<button class=\"btn-primary\" id=\"btn-primary\" (click)=\"onSubmit(numberInput.value)\">{{isLastQuestion?'Submit': 'Done'}}</button>\n<span\n  (click)=\"onSubmit(undefined)\"\n  *ngIf=\"!phone.attributes.required\"\n  class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n","styles":[""]}]}],"members":{"phone":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"surveyResponse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"submitEvent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":20,"character":3}}]}],"isLastQuestion":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵa"}]}],"ngOnInit":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵw":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"app-default-thank-you-page","template":"<div\n  class=\"survey-container-wrap\">\n  <div class=\"survey-statement\">Thanks for the feedback!</div>\n</div>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":3,"character":1},"arguments":[{"name":"shuffle","pure":false}]}],"members":{"transform":[{"__symbolic":"method"}]}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[appAutofocus]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":7,"character":26}]}],"ngAfterViewInit":[{"__symbolic":"method"}]}},"ɵz":{"__symbolic":"function"},"ɵba":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1}}],"members":{}}},"origins":{"SurveyLibService":"./lib/survey-lib.service","CurrentElement":"./lib/survey-lib.service","SurveyLibComponent":"./lib/survey-lib.component","SurveyLibModule":"./lib/survey-lib.module","PagesModel":"./lib/pages/pages.model","SurveyContent":"./lib/pages/pages.model","SelectedThemeModel":"./lib/pages/pages.model","Font":"./lib/pages/pages.model","Colors":"./lib/pages/pages.model","Page":"./lib/pages/pages.model","Question":"./lib/pages/pages.model","Others":"./lib/pages/pages.model","LogicJumps":"./lib/pages/pages.model","Block":"./lib/pages/pages.model","Condition":"./lib/pages/pages.model","RankingItem":"./lib/pages/pages.model","ContactForm":"./lib/pages/pages.model","Validation":"./lib/pages/pages.model","Column":"./lib/pages/pages.model","Picture":"./lib/pages/pages.model","AddressForm":"./lib/pages/pages.model","Row":"./lib/pages/pages.model","Attributes":"./lib/pages/pages.model","Selection":"./lib/pages/pages.model","Step":"./lib/pages/pages.model","Choice":"./lib/pages/pages.model","Properties":"./lib/pages/pages.model","ɵa":"./lib/shared/pages-services/pages.service","ɵb":"./lib/pages/pages.component","ɵc":"./lib/pages/welcome-page/welcome-page.component","ɵd":"./lib/pages/questionnaire/questionnaire.component","ɵe":"./lib/pages/thank-you-page/thank-you-page.component","ɵf":"./lib/pages/questionnaire/choice/choice.component","ɵg":"./lib/pages/questionnaire/yes-no/yes-no.component","ɵh":"./lib/pages/questionnaire/short-text/short-text.component","ɵi":"./lib/pages/questionnaire/long-text/long-text.component","ɵj":"./lib/pages/questionnaire/statement/statement.component","ɵk":"./lib/pages/questionnaire/email/email.component","ɵl":"./lib/pages/questionnaire/nps/nps.component","ɵm":"./lib/pages/questionnaire/date/date.component","ɵn":"./lib/pages/questionnaire/rating/rating.component","ɵo":"./lib/pages/questionnaire/drop-down/drop-down.component","ɵp":"./lib/pages/questionnaire/contact-form/contact-form.component","ɵq":"./lib/pages/questionnaire/address/address.component","ɵr":"./lib/pages/questionnaire/phone/phone.component","ɵs":"./lib/pages/questionnaire/name/name.component","ɵt":"./lib/pages/questionnaire/agree-disagree/agree-disagree.component","ɵu":"./lib/pages/questionnaire/website/website.component","ɵv":"./lib/pages/questionnaire/number/number.component","ɵw":"./lib/pages/default-thank-you-page/default-thank-you-page.component","ɵx":"./lib/shared/pipe/shuffle.pipe","ɵy":"./lib/shared/directives/auto-focus.directive","ɵz":"./lib/pages/store/survey.reducers","ɵba":"./lib/shared/persistence.service"},"importAs":"survey-lib"}