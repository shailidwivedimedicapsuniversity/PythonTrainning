/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/questionnaire/choice/choice.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Question } from '../../pages.model';
import { SurveyResponses } from '../../survey-response.model';
import { PagesService } from '../../../shared/pages-services/pages.service';
export class ChoiceComponent {
    /**
     * @param {?} pageService
     */
    constructor(pageService) {
        this.pageService = pageService;
        this.isActive = false;
        this.submitEvent = new EventEmitter();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set isMultipleChoice(value) {
        this._isMultipleChoice = value;
        console.log('Inside isMultipleChoice');
        console.log(value);
        this.choiceQuestion.choices.forEach((/**
         * @param {?} choice
         * @return {?}
         */
        choice => choice.isChecked = false));
    }
    /**
     * @return {?}
     */
    get isMultipleChoice() {
        return this._isMultipleChoice;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        console.warn(this.surveyResponse);
        if (this.surveyResponse.choices !== undefined) {
            this.surveyResponse.choices.forEach((/**
             * @param {?} choice
             * @return {?}
             */
            choice => choice.isChecked = true));
        }
        if (this.pageService.stage == 'entry-next') {
            document.getElementById('choice-question').className = 'entry-next';
            document.getElementById('choice-question-delay').className = 'entry-next-delay';
        }
        else if (this.pageService.stage == 'entry-previous') {
            document.getElementById('choice-question').className = 'entry-previous-delay';
            document.getElementById('choice-question-delay').className = 'entry-previous';
        }
    }
    /**
     * @return {?}
     */
    submit() {
        this.isActive = true;
        this.surveyResponse.choices = this.selectedOptions;
        if (this.surveyResponse.choices != undefined &&
            this.surveyResponse.choices.length > 0) {
            this.surveyResponse.questionId = this.choiceQuestion.questionId;
            this.surveyResponse.question = this.choiceQuestion.question;
            this.surveyResponse.questionType = this.choiceQuestion.questionType;
            this.surveyResponse.identifier = this.choiceQuestion.identifier;
            this.pageService.persistSurvey(this.surveyResponse);
        }
        document.getElementById('btn-primary').classList.add('blink-btn-animation');
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.submitEvent.emit();
        }), 350);
    }
    /**
     * @return {?}
     */
    get selectedOptions() {
        return this.choiceQuestion.choices
            .filter((/**
         * @param {?} choice
         * @return {?}
         */
        choice => choice.isChecked))
            .map((/**
         * @param {?} opt
         * @return {?}
         */
        opt => opt));
    }
    /**
     * @private
     * @param {?} choices
     * @return {?}
     */
    changeSelection(choices) {
        if (typeof choices !== 'undefined') {
            choices.forEach((/**
             * @param {?} choice
             * @return {?}
             */
            choice => {
                this.choiceQuestion.choices.forEach((/**
                 * @param {?} c
                 * @return {?}
                 */
                c => {
                    if (choice.choiceId == c.choiceId) {
                        c.isChecked = true;
                    }
                }));
            }));
        }
    }
    /**
     * @return {?}
     */
    onClickOthers() {
        if (!this.choiceQuestion.others.isChecked) {
            this.choiceQuestion.others.isChecked = true;
            this.choiceQuestion.others.showCheckbox = false;
        }
        else {
            this.choiceQuestion.others.isChecked = false;
            this.choiceQuestion.others.showCheckbox = true;
        }
    }
    /**
     * @return {?}
     */
    onInputOthers() {
        this.choiceQuestion.others.isChecked = true;
        this.choiceQuestion.others.showCheckbox = true;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onOptionSelectionChange($event) {
        if ($event) {
            this.choiceQuestion.attributes.numberOfSelection++;
        }
        else {
            this.choiceQuestion.attributes.numberOfSelection--;
        }
    }
    /**
     * @param {?} identifier
     * @return {?}
     */
    onSingleSelect(identifier) {
        this.choiceQuestion.choices.forEach((/**
         * @param {?} choice
         * @return {?}
         */
        choice => choice.isChecked = false));
        /** @type {?} */
        let index = this.choiceQuestion.choices.findIndex((/**
         * @param {?} choice
         * @return {?}
         */
        choice => choice.identifier == identifier));
        if (index > 0) {
            this.choiceQuestion.choices[index].isChecked = true;
        }
    }
    /**
     * @param {?} choice
     * @return {?}
     */
    isDisabled(choice) {
        if (this.choiceQuestion.attributes.selection == undefined)
            return false;
        else if (this.choiceQuestion.attributes.selection.type == 'Exact') {
            return this.choiceQuestion.attributes.numberOfSelection >= this.choiceQuestion.attributes.selection.exact
                && !choice.isChecked;
        }
        else if (this.choiceQuestion.attributes.selection.type == 'Range') {
            return this.choiceQuestion.attributes.numberOfSelection >= this.choiceQuestion.attributes.selection.rangeTo
                && !choice.isChecked;
        }
        else
            return false;
    }
}
ChoiceComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-choice',
                template: "<div id=\"choice-question\">\n\n  <div class=\"survey-statement\">\n    <span *ngIf=\"choiceQuestion.attributes.required\" class=\"isRequired\">*</span>{{choiceQuestion.question}}\n  </div>\n  <p class=\"question-description\">\n    {{choiceQuestion.attributes.description}}\n  </p>\n\n</div>\n<div id=\"choice-question-delay\">\n\n  <ng-container *ngIf=\"isMultipleChoice; else singleSelection\">\n\n    <div *ngFor=\"let c of choiceQuestion.choices; index as choiceIndex\">\n      <label>\n        <input class=\"multiple-choice-checkbox\" type=\"checkbox\" name=\"option {{choiceIndex}}\"\n               (ngModelChange)=\"onOptionSelectionChange($event)\"\n               [disabled]=\"isDisabled(c)\"\n               [(ngModel)]=\"c.isChecked\"/>\n        <span class=\"btn-secondary multiple-choice\">{{c.text}}</span>\n      </label>\n    </div>\n\n\n    <div *ngIf=\"choiceQuestion.attributes.others && choiceQuestion.others != undefined\">\n      <label *ngIf=\"choiceQuestion.others.showCheckbox\">\n        <input type=\"checkbox\" name=\"Others\" style=\"display: none;\"\n               (click)=\"onClickOthers()\"\n               [(ngModel)]=\"choiceQuestion.others.isChecked\"/>\n        <span class=\"btn-secondary multiple-choice\">{{choiceQuestion.others.value}}</span>\n      </label>\n      <div *ngIf=\"!choiceQuestion.others.showCheckbox\">\n      <span class=\"btn-secondary multiple-choice\">\n            <input type=\"text\"\n                   appAutofocus\n                   [(ngModel)]=\"choiceQuestion.others.value\"\n                   class=\"multiple-choice-editableTextBox\">\n            <button (click)=\"onInputOthers()\"\n                    class=\"btn editable-others\">&#10004;</button>\n      </span>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template #singleSelection>\n    <div\n      *ngFor=\"let c of choiceQuestion.choices; index as choiceIndex\">\n      <label>\n        <input class=\"multiple-choice-radio-btn\"\n               type=\"radio\"\n               name=\"radio_name\"\n               [id]=\"choiceIndex\"\n               [value]=\"c.identifier\"\n               (change)=\"onSingleSelect(c.identifier)\"\n               [checked]=\"c.isChecked\"\n        />\n        <span class=\"multiple-choice\">{{c.text}}</span>\n      </label>\n    </div>\n  </ng-template>\n\n  <button class=\"btn-primary\" id=\"btn-primary\" (click)=\"submit()\">{{isLastQuestion?'Submit': 'Done'}}</button>\n  <span *ngIf=\"!choiceQuestion.attributes.required\" (click)=\"submit()\"\n        class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n",
                styles: [".multiple-choice-radio-btn{display:none}.editable-others{padding:0 4%;border:1px solid var(--white-25);margin:1.6% 1% 0 0}.editable-others:active,.editable-others:focus{border:1px solid var(--white-25)}.multiple-choice-editableTextBox{width:85%!important;height:28px!important;border:none!important;padding-left:2%!important;margin:0!important;font-size:inherit;color:var(--text-color-secondary)}.multiple-choice-editableTextBox:active,.multiple-choice-editableTextBox:focus{outline:0!important}.mcq-disabled{background:0 0;cursor:not-allowed}.mcq-subcategory{padding-left:15px}"]
            }] }
];
/** @nocollapse */
ChoiceComponent.ctorParameters = () => [
    { type: PagesService }
];
ChoiceComponent.propDecorators = {
    choiceQuestion: [{ type: Input }],
    surveyResponse: [{ type: Input }],
    submitEvent: [{ type: Output }],
    isLastQuestion: [{ type: Input }],
    isMultipleChoice: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ChoiceComponent.prototype.isActive;
    /** @type {?} */
    ChoiceComponent.prototype.choiceQuestion;
    /** @type {?} */
    ChoiceComponent.prototype.surveyResponse;
    /** @type {?} */
    ChoiceComponent.prototype.submitEvent;
    /** @type {?} */
    ChoiceComponent.prototype.isLastQuestion;
    /**
     * @type {?}
     * @private
     */
    ChoiceComponent.prototype._isMultipleChoice;
    /**
     * @type {?}
     * @private
     */
    ChoiceComponent.prototype.pageService;
}
//# sourceMappingURL=data:application/json;base64,