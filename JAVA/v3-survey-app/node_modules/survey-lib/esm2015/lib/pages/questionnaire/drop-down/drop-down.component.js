/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/questionnaire/drop-down/drop-down.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Question } from '../../pages.model';
import { SurveyResponses } from '../../survey-response.model';
import { PagesService } from '../../../shared/pages-services/pages.service';
export class DropDownComponent {
    /**
     * @param {?} pageService
     */
    constructor(pageService) {
        this.pageService = pageService;
        this.submitEvent = new EventEmitter();
    }
    /**
     * @param {?} text
     * @return {?}
     */
    onSelect(text) {
        if (text != undefined) {
            this.surveyResponse.question = this.dropDown.question;
            this.surveyResponse.questionType = this.dropDown.questionType;
            this.surveyResponse.questionId = this.dropDown.questionId;
            this.surveyResponse.answerId = this.getChoiceIdByText(text);
            this.surveyResponse.identifier = this.dropDown.identifier;
            this.surveyResponse.answer = text;
            this.pageService.persistSurvey(this.surveyResponse);
            document.getElementById('input').classList.add('blink-btn-animation');
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.submitEvent.emit();
            }), 350);
        }
        else {
            this.submitEvent.emit();
        }
    }
    /**
     * @private
     * @param {?} choiceId
     * @return {?}
     */
    getChoiceById(choiceId) {
        /** @type {?} */
        let index = this.dropDown.choices.findIndex((/**
         * @param {?} choice
         * @return {?}
         */
        choice => choice.choiceId == choiceId));
        return this.dropDown.choices[index].text;
    }
    /**
     * @private
     * @param {?} text
     * @return {?}
     */
    getChoiceIdByText(text) {
        /** @type {?} */
        let index = this.dropDown.choices.findIndex((/**
         * @param {?} choice
         * @return {?}
         */
        choice => choice.text == text));
        return this.dropDown.choices[index].choiceId;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.pageService.stage == 'entry-next') {
            document.getElementById('drop-down-question').className = 'entry-next';
            document.getElementById('drop-down-question-delay').className = 'entry-next-delay';
        }
        else if (this.pageService.stage == 'entry-previous') {
            document.getElementById('drop-down-question').className = 'entry-previous-delay';
            document.getElementById('drop-down-question-delay').className = 'entry-previous';
        }
    }
    /**
     * @return {?}
     */
    toggleCustomDropDown() {
        document.getElementById('select-options').classList.toggle('visible');
        document.getElementById('skipBtn').classList.toggle('invisible');
    }
    /**
     * @param {?} text
     * @param {?} i
     * @return {?}
     */
    onDropDownSelection(text, i) {
        /** @type {?} */
        let selectedOptionsEl = document.getElementsByTagName('li');
        selectedOptionsEl[i].classList.add('selected');
        for (let j = 0; j < selectedOptionsEl.length; j++) {
            if (i == j) {
                selectedOptionsEl[j].classList.add('selected');
            }
            else {
                selectedOptionsEl[j].classList.remove('selected');
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
}
DropDownComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-drop-down',
                template: "<div id=\"drop-down-question\">\n<div class=\"survey-statement\">\n    <span *ngIf=\"dropDown.attributes.required\" class=\"isRequired\">*</span>{{dropDown.question}}\n</div>\n<p class=\"question-description\">\n    {{dropDown.attributes.description}}\n  </p>\n\n</div>\n\n\n<div id=\"drop-down-question-delay\">\n  <div>\n  <div style=\"display: inline-block\" class=\"select\" (click)=\"toggleCustomDropDown()\">\n    <div class=\"input\" id=\"input\">{{surveyResponse.answer == undefined ? 'Please select' : surveyResponse.answer }}</div>\n    <div class=\"select-options\" id=\"select-options\">\n      <ul>\n        <li (click)=\"onSelect(choice.text); onDropDownSelection(choice.text, index)\" *ngFor=\"let choice of dropDown.choices; let index = index\"\n            [ngClass]=\"surveyResponse.answer == choice.text ? 'selected':''\"\n        >\n          <span>{{choice.text}}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <span\n    (click)=\"onSelect(undefined)\"\n    *ngIf=\"!dropDown.attributes.required\" id=\"skipBtn\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n\n</div>\n",
                styles: [".invisible{display:none}"]
            }] }
];
/** @nocollapse */
DropDownComponent.ctorParameters = () => [
    { type: PagesService }
];
DropDownComponent.propDecorators = {
    dropDown: [{ type: Input }],
    surveyResponse: [{ type: Input }],
    submitEvent: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    DropDownComponent.prototype.dropDown;
    /** @type {?} */
    DropDownComponent.prototype.surveyResponse;
    /** @type {?} */
    DropDownComponent.prototype.submitEvent;
    /**
     * @type {?}
     * @private
     */
    DropDownComponent.prototype.pageService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcC1kb3duLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3N1cnZleS1saWIvIiwic291cmNlcyI6WyJsaWIvcGFnZXMvcXVlc3Rpb25uYWlyZS9kcm9wLWRvd24vZHJvcC1kb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBUzFFLE1BQU0sT0FBTyxpQkFBaUI7Ozs7SUFZNUIsWUFBb0IsV0FBeUI7UUFBekIsZ0JBQVcsR0FBWCxXQUFXLENBQWM7UUFKN0MsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBTWpDLENBQUM7Ozs7O0lBR0QsUUFBUSxDQUFDLElBQVc7UUFDbEIsSUFBSSxJQUFJLElBQUksU0FBUyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO1lBQ3RELElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDO1lBQzlELElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDO1lBQzFELElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM1RCxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQztZQUMxRCxJQUFJLENB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Qzs7O1lBL0VGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsZ29DQUF5Qzs7YUFFMUM7Ozs7WUFSTyxZQUFZOzs7dUJBV2pCLEtBQUs7NkJBRUwsS0FBSzswQkFHTCxNQUFNOzs7O0lBTFAscUNBQTRCOztJQUU1QiwyQ0FDZ0M7O0lBRWhDLHdDQUNpQzs7Ozs7SUFJckIsd0NBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtRdWVzdGlvbn0gZnJvbSAnLi4vLi4vcGFnZXMubW9kZWwnO1xuaW1wb3J0IHtTdXJ2ZXlSZXNwb25zZXN9IGZyb20gJy4uLy4uL3N1cnZleS1yZXNwb25zZS5tb2RlbCc7XG5pbXBvcnQge0Ryb3BEb3dufSBmcm9tICcuLi8uLi9zdG9yZS9zdXJ2ZXktYWN0aW9ucyc7XG5pbXBvcnQge1BhZ2VzU2VydmljZX0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL3BhZ2VzLXNlcnZpY2VzL3BhZ2VzLnNlcnZpY2UnO1xuXG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLWRyb3AtZG93bicsXG4gIHRlbXBsYXRlVXJsOiAnLi9kcm9wLWRvd24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9kcm9wLWRvd24uY29tcG9uZW50LmNzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBEcm9wRG93bkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCxPbkRlc3Ryb3kge1xuXG4gIEBJbnB1dCgpIGRyb3BEb3duOiBRdWVzdGlvbjtcblxuICBASW5wdXQoKVxuICBzdXJ2ZXlSZXNwb25zZTogU3VydmV5UmVzcG9uc2VzO1xuXG4gIEBPdXRwdXQoKVxuICBzdWJtaXRFdmVudCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuXG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYWdlU2VydmljZTogUGFnZXNTZXJ2aWNlKSB7XG5cbiAgfVxuXG5cbiAgb25TZWxlY3QodGV4dDpzdHJpbmcpe1xuICAgIGlmICh0ZXh0ICE9IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvbiA9IHRoaXMuZHJvcERvd24ucXVlc3Rpb247XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uVHlwZSA9IHRoaXMuZHJvcERvd24ucXVlc3Rpb25UeXBlO1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvbklkID0gdGhpcy5kcm9wRG93bi5xdWVzdGlvbklkO1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5hbnN3ZXJJZCA9IHRoaXMuZ2V0Q2hvaWNlSWRCeVRleHQodGV4dCk7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLmlkZW50aWZpZXIgPSB0aGlzLmRyb3BEb3duLmlkZW50aWZpZXI7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLmFuc3dlciA9IHRleHQ7XG4gICAgICB0aGlzLnBhZ2VTZXJ2aWNlLnBlcnNpc3RTdXJ2ZXkodGhpcy5zdXJ2ZXlSZXNwb25zZSk7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5wdXQnKS5jbGFzc0xpc3QuYWRkKCdibGluay1idG4tYW5pbWF0aW9uJyk7XG4gICAgICBzZXRUaW1lb3V0KCgpPT57XG4gICAgICAgIHRoaXMuc3VibWl0RXZlbnQuZW1pdCgpO1xuICAgICAgfSwzNTApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnN1Ym1pdEV2ZW50LmVtaXQoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldENob2ljZUJ5SWQoY2hvaWNlSWQ6IG51bWJlcil7XG4gICAgbGV0IGluZGV4ID0gdGhpcy5kcm9wRG93bi5jaG9pY2VzLmZpbmRJbmRleChjaG9pY2UgPT4gY2hvaWNlLmNob2ljZUlkID09IGNob2ljZUlkKTtcbiAgICByZXR1cm4gdGhpcy5kcm9wRG93bi5jaG9pY2VzW2luZGV4XS50ZXh0O1xuICB9XG4gIHByaXZhdGUgZ2V0Q2hvaWNlSWRCeVRleHQodGV4dDogc3RyaW5nKXtcbiAgICBsZXQgaW5kZXggPSB0aGlzLmRyb3BEb3duLmNob2ljZXMuZmluZEluZGV4KGNob2ljZSA9PiBjaG9pY2UudGV4dCA9PSB0ZXh0KTtcbiAgICByZXR1cm4gdGhpcy5kcm9wRG93bi5jaG9pY2VzW2luZGV4XS5jaG9pY2VJZDtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLnBhZ2VTZXJ2aWNlLnN0YWdlID09ICdlbnRyeS1uZXh0Jykge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Ryb3AtZG93bi1xdWVzdGlvbicpLmNsYXNzTmFtZSA9ICdlbnRyeS1uZXh0JztcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkcm9wLWRvd24tcXVlc3Rpb24tZGVsYXknKS5jbGFzc05hbWUgPSAnZW50cnktbmV4dC1kZWxheSc7XG4gICAgfSBlbHNlIGlmICh0aGlzLnBhZ2VTZXJ2aWNlLnN0YWdlID09ICdlbnRyeS1wcmV2aW91cycpIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkcm9wLWRvd24tcXVlc3Rpb24nKS5jbGFzc05hbWUgPSAnZW50cnktcHJldmlvdXMtZGVsYXknO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Ryb3AtZG93bi1xdWVzdGlvbi1kZWxheScpLmNsYXNzTmFtZSA9ICdlbnRyeS1wcmV2aW91cyc7XG4gICAgfVxuICB9XG5cblxuICB0b2dnbGVDdXN0b21Ecm9wRG93bigpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VsZWN0LW9wdGlvbnMnKS5jbGFzc0xpc3QudG9nZ2xlKCd2aXNpYmxlJyk7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NraXBCdG4nKS5jbGFzc0xpc3QudG9nZ2xlKCdpbnZpc2libGUnKTtcbiAgfVxuXG4gIG9uRHJvcERvd25TZWxlY3Rpb24odGV4dDpzdHJpbmcsIGk6bnVtYmVyKSB7XG4gICAgbGV0IHNlbGVjdGVkT3B0aW9uc0VsOmFueSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdsaScpO1xuICAgIHNlbGVjdGVkT3B0aW9uc0VsW2ldLmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XG4gICAgZm9yKGxldCBqPTA7IGogPCBzZWxlY3RlZE9wdGlvbnNFbC5sZW5ndGg7IGorKyl7XG4gICAgICBpZihpID09IGope1xuICAgICAgICBzZWxlY3RlZE9wdGlvbnNFbFtqXS5jbGFzc0xpc3QuYWRkKCdzZWxlY3RlZCcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZWN0ZWRPcHRpb25zRWxbal0uY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQnKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICB9XG59XG4iXX0=