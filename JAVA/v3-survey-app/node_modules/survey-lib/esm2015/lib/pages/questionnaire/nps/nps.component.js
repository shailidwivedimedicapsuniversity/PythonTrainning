/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/questionnaire/nps/nps.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Question } from '../../pages.model';
import { SurveyResponses } from '../../survey-response.model';
import { PagesService } from '../../../shared/pages-services/pages.service';
export class NpsComponent {
    /**
     * @param {?} pageService
     */
    constructor(pageService) {
        this.pageService = pageService;
        this.submitEvent = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.pageService.stage == 'entry-next') {
            document.getElementById('nps-question').className = 'entry-next';
            document.getElementById('nps-question-delay').className = 'entry-next-delay';
        }
        else if (this.pageService.stage == 'entry-previous') {
            document.getElementById('nps-question').className = 'entry-previous-delay';
            document.getElementById('nps-question-delay').className = 'entry-previous';
        }
    }
    /**
     * @param {?} rating
     * @return {?}
     */
    onSelect(rating) {
        if (rating != undefined) {
            this.surveyResponse.question = this.npsQuestion.question;
            this.surveyResponse.questionType = this.npsQuestion.questionType;
            this.surveyResponse.identifier = this.npsQuestion.identifier;
            this.surveyResponse.questionId = this.npsQuestion.questionId;
            this.surveyResponse.rating = rating;
            this.pageService.persistSurvey(this.surveyResponse);
            document.getElementById('rating-' + rating).classList.add('blink-btn-animation');
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.submitEvent.emit();
            }), 350);
        }
        else {
            this.submitEvent.emit();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        /*this.surveyState*/
    }
}
NpsComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-nps',
                template: "<div id=\"nps-question\">\n\n<div class=\"survey-statement\"><u></u>\n  <span *ngIf=\"npsQuestion.attributes.required\" class=\"isRequired\">*</span>{{ npsQuestion.question }} </div>\n  <p class=\"question-description\" *ngIf=\"npsQuestion.attributes.isDescriptionEnabled\">\n  {{npsQuestion.attributes.description}}\n</p>\n</div>\n\n<div id=\"nps-question-delay\">\n<div class=\"nps-btn-group\">\n\n    <button id=\"rating-0\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==0 }\" (click)=\"onSelect(0)\">0</button>\n\n    <button id=\"rating-1\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==1 }\" (click)=\"onSelect(1)\">1</button>\n\n    <button id=\"rating-2\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==2 }\" (click)=\"onSelect(2)\">2</button>\n\n    <button id=\"rating-3\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==3 }\" (click)=\"onSelect(3)\">3</button>\n\n    <button id=\"rating-4\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==4 }\" (click)=\"onSelect(4)\">4</button>\n\n    <button id=\"rating-5\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==5 }\" (click)=\"onSelect(5)\">5</button>\n\n    <button id=\"rating-6\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==6 }\" (click)=\"onSelect(6)\">6</button>\n\n    <button id=\"rating-7\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==7 }\" (click)=\"onSelect(7)\">7</button>\n\n    <button id=\"rating-8\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==8 }\" (click)=\"onSelect(8)\">8</button>\n\n    <button id=\"rating-9\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==9 }\" (click)=\"onSelect(9)\">9</button>\n\n    <button id=\"rating-10\" class=\"btn-secondary nps-btn\" [ngClass]=\"{'nps-btn-focus':surveyResponse.rating==10 }\" (click)=\"onSelect(10)\">10</button>\n\n</div>\n<div class=\"nps-legend\">\n  <span id=\"left-nps-label\">{{npsQuestion.attributes.leftLabel}}</span>\n  <span id=\"center-nps-label\">{{npsQuestion.attributes.centerLabel}}</span>\n  <span id=\"right-nps-label\">{{npsQuestion.attributes.rightLabel}}</span>\n</div>\n\n<div  class=\"skip-this-question\" style=\"margin-top:8%;\" *ngIf=\"!npsQuestion.attributes.required\">\n  <span (click)=\"onSelect(undefined)\" >Skip</span>\n</div>\n\n</div>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
NpsComponent.ctorParameters = () => [
    { type: PagesService }
];
NpsComponent.propDecorators = {
    npsQuestion: [{ type: Input }],
    surveyResponse: [{ type: Input }],
    submitEvent: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    NpsComponent.prototype.npsQuestion;
    /** @type {?} */
    NpsComponent.prototype.surveyResponse;
    /** @type {?} */
    NpsComponent.prototype.submitEvent;
    /**
     * @type {?}
     * @private
     */
    NpsComponent.prototype.pageService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnBzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3N1cnZleS1saWIvIiwic291cmNlcyI6WyJsaWIvcGFnZXMvcXVlc3Rpb25uYWlyZS9ucHMvbnBzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBUTFFLE1BQU0sT0FBTyxZQUFZOzs7O0lBWXZCLFlBQW9CLFdBQXlCO1FBQXpCLGdCQUFXLEdBQVgsV0FBVyxDQUFjO1FBSDdDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUtqQyxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksWUFBWSxFQUFFO1lBQzFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQztZQUNqRSxRQUFRLENBQUMsY0FBYyxDQUFDLG9CQUFvQixDQUFDLENBQUMsU0FBUyxHQUFHLGtCQUFrQixDQUFDO1NBQzlFO2FBQU0sSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssSUFBSSxnQkFBZ0IsRUFBRTtZQUNyRCxRQUFRLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsQ0FBQztZQUMzRSxRQUFRLENBQUMsY0FBYyxDQUFDLG9CQUFvQixDQUFDLENBQUMsU0FBUyxHQUFHLGdCQUFnQixDQUFDO1NBQzVFO0lBQ0gsQ0FBQzs7Ozs7SUFFRCxRQUFRLENBQUMsTUFBYztRQUNyQixJQUFJLE1BQU0sSUFBSSxTQUFTLEVBQUU7WUFDdkIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUM7WUFDekQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUM7WUFDakUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUM7WUFDN0QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUM7WUFDN0QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1lBQ3BDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUNwRCxRQUFRLENBQUMsY0FBYyxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFDakYsVUFBVTs7O1lBQUMsR0FBRyxFQUFFO2dCQUNkLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDMUIsQ0FBQyxHQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ1Q7YUFBTTtZQUNMLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDekI7SUFDSCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULG9CQUFvQjtJQUN0QixDQUFDOzs7WUFsREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxTQUFTO2dCQUNuQiwwaEZBQW1DOzthQUVwQzs7OztZQVBPLFlBQVk7OzswQkFVakIsS0FBSzs2QkFHTCxLQUFLOzBCQUdMLE1BQU07Ozs7SUFOUCxtQ0FDc0I7O0lBRXRCLHNDQUNnQzs7SUFFaEMsbUNBQ2lDOzs7OztJQUdyQixtQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1F1ZXN0aW9ufSBmcm9tICcuLi8uLi9wYWdlcy5tb2RlbCc7XG5pbXBvcnQge1N1cnZleVJlc3BvbnNlc30gZnJvbSAnLi4vLi4vc3VydmV5LXJlc3BvbnNlLm1vZGVsJztcbmltcG9ydCAqIGFzIHN1cnZleUFjdGlvbnMgZnJvbSAnLi4vLi4vc3RvcmUvc3VydmV5LWFjdGlvbnMnO1xuaW1wb3J0IHtQYWdlc1NlcnZpY2V9IGZyb20gJy4uLy4uLy4uL3NoYXJlZC9wYWdlcy1zZXJ2aWNlcy9wYWdlcy5zZXJ2aWNlJztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtbnBzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL25wcy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25wcy5jb21wb25lbnQuY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIE5wc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuICBASW5wdXQoKVxuICBucHNRdWVzdGlvbjogUXVlc3Rpb247XG5cbiAgQElucHV0KClcbiAgc3VydmV5UmVzcG9uc2U6IFN1cnZleVJlc3BvbnNlcztcblxuICBAT3V0cHV0KClcbiAgc3VibWl0RXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBhZ2VTZXJ2aWNlOiBQYWdlc1NlcnZpY2UpIHtcblxuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKHRoaXMucGFnZVNlcnZpY2Uuc3RhZ2UgPT0gJ2VudHJ5LW5leHQnKSB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbnBzLXF1ZXN0aW9uJykuY2xhc3NOYW1lID0gJ2VudHJ5LW5leHQnO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25wcy1xdWVzdGlvbi1kZWxheScpLmNsYXNzTmFtZSA9ICdlbnRyeS1uZXh0LWRlbGF5JztcbiAgICB9IGVsc2UgaWYgKHRoaXMucGFnZVNlcnZpY2Uuc3RhZ2UgPT0gJ2VudHJ5LXByZXZpb3VzJykge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25wcy1xdWVzdGlvbicpLmNsYXNzTmFtZSA9ICdlbnRyeS1wcmV2aW91cy1kZWxheSc7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbnBzLXF1ZXN0aW9uLWRlbGF5JykuY2xhc3NOYW1lID0gJ2VudHJ5LXByZXZpb3VzJztcbiAgICB9XG4gIH1cblxuICBvblNlbGVjdChyYXRpbmc6IG51bWJlcikge1xuICAgIGlmIChyYXRpbmcgIT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uID0gdGhpcy5ucHNRdWVzdGlvbi5xdWVzdGlvbjtcbiAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb25UeXBlID0gdGhpcy5ucHNRdWVzdGlvbi5xdWVzdGlvblR5cGU7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLmlkZW50aWZpZXIgPSB0aGlzLm5wc1F1ZXN0aW9uLmlkZW50aWZpZXI7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uSWQgPSB0aGlzLm5wc1F1ZXN0aW9uLnF1ZXN0aW9uSWQ7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnJhdGluZyA9IHJhdGluZztcbiAgICAgIHRoaXMucGFnZVNlcnZpY2UucGVyc2lzdFN1cnZleSh0aGlzLnN1cnZleVJlc3BvbnNlKTtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyYXRpbmctJyArIHJhdGluZykuY2xhc3NMaXN0LmFkZCgnYmxpbmstYnRuLWFuaW1hdGlvbicpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuc3VibWl0RXZlbnQuZW1pdCgpO1xuICAgICAgfSwgMzUwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdWJtaXRFdmVudC5lbWl0KCk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgLyp0aGlzLnN1cnZleVN0YXRlKi9cbiAgfVxufVxuIl19