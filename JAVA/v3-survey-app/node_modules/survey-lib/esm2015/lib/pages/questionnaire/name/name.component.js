/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/questionnaire/name/name.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Question } from '../../pages.model';
import { SurveyResponses } from '../../survey-response.model';
import { PagesService } from '../../../shared/pages-services/pages.service';
export class NameComponent {
    /**
     * @param {?} pageService
     */
    constructor(pageService) {
        this.pageService = pageService;
        this.submitEvent = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.pageService.stage == 'entry-next') {
            document.getElementById('name-question').className = 'entry-next';
            document.getElementById('name-question-delay').className = 'entry-next-delay';
        }
        else if (this.pageService.stage == 'entry-previous') {
            document.getElementById('name-question').className = 'entry-previous-delay';
            document.getElementById('name-question-delay').className = 'entry-previous';
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    onSubmit(value) {
        if (value != undefined) {
            this.surveyResponse.questionId = this.name.questionId;
            this.surveyResponse.question = this.name.question;
            this.surveyResponse.questionType = this.name.questionType;
            this.surveyResponse.identifier = this.name.identifier;
            this.surveyResponse.answer = value;
            this.pageService.persistSurvey(this.surveyResponse);
            document.getElementById('btn-primary').classList.add('blink-btn-animation');
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.submitEvent.emit();
            }), 350);
        }
        else {
            this.submitEvent.emit();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
}
NameComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-name',
                template: "<div id=\"name-question\">\n<div class=\"survey-statement\">\n  <span *ngIf=\"name.attributes.required\" class=\"isRequired\">*</span>{{name.question}}\n</div>\n<p class=\"question-description\">\n  {{name.attributes.description}}\n</p>\n</div>\n\n\n\n<div id=\"name-question-delay\">\n<input class=\"survey-input-text-box\"\n  #nameInput\n  type=\"text\" name=\"name\"\n  [(ngModel)]=\"surveyResponse.answer\" onfocus=\"this.placeholder=''\"\n  placeholder=\"Enter first name followed by last name\">\n<button class=\"btn-primary\" id=\"btn-primary\" type=\"submit\" name=\"name\" (click)=\"onSubmit(nameInput.value)\">Done</button>\n<span\n  *ngIf=\"!name.attributes.required\"\n  (click)=\"onSubmit(undefined)\"\n  class=\"skip-this-question\">Skip</span>\n</div>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
NameComponent.ctorParameters = () => [
    { type: PagesService }
];
NameComponent.propDecorators = {
    name: [{ type: Input }],
    surveyResponse: [{ type: Input }],
    submitEvent: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    NameComponent.prototype.name;
    /** @type {?} */
    NameComponent.prototype.surveyResponse;
    /** @type {?} */
    NameComponent.prototype.submitEvent;
    /**
     * @type {?}
     * @private
     */
    NameComponent.prototype.pageService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmFtZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9zdXJ2ZXktbGliLyIsInNvdXJjZXMiOlsibGliL3BhZ2VzL3F1ZXN0aW9ubmFpcmUvbmFtZS9uYW1lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBUTFFLE1BQU0sT0FBTyxhQUFhOzs7O0lBVXhCLFlBQW9CLFdBQXlCO1FBQXpCLGdCQUFXLEdBQVgsV0FBVyxDQUFjO1FBRjdDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUdqQyxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksWUFBWSxFQUFFO1lBQzFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFDLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQztZQUNsRSxRQUFRLENBQUMsY0FBYyxDQUFDLHFCQUFxQixDQUFDLENBQUMsU0FBUyxHQUFHLGtCQUFrQixDQUFDO1NBQy9FO2FBQUssSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssSUFBSSxnQkFBZ0IsRUFBRTtZQUNwRCxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsQ0FBQTtZQUMzRSxRQUFRLENBQUMsY0FBYyxDQUFDLHFCQUFxQixDQUFDLENBQUMsU0FBUyxHQUFHLGdCQUFnQixDQUFDO1NBQzdFO0lBQ0gsQ0FBQzs7Ozs7SUFFRCxRQUFRLENBQUMsS0FBYTtRQUNwQixJQUFJLEtBQUssSUFBSSxTQUFTLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7WUFDdEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7WUFDbEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7WUFDMUQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7WUFDdEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ25DLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUNwRCxRQUFRLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUM1RSxVQUFVOzs7WUFBQyxHQUFFLEVBQUU7Z0JBQ2IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUMxQixDQUFDLEdBQUMsR0FBRyxDQUFDLENBQUM7U0FDUjthQUFNO1lBQ0wsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN6QjtJQUNILENBQUM7Ozs7SUFFRCxXQUFXO0lBQ1gsQ0FBQzs7O1lBOUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIsNHdCQUFvQzs7YUFFckM7Ozs7WUFQTyxZQUFZOzs7bUJBVWpCLEtBQUs7NkJBRUwsS0FBSzswQkFHTCxNQUFNOzs7O0lBTFAsNkJBQXdCOztJQUV4Qix1Q0FDZ0M7O0lBRWhDLG9DQUNpQzs7Ozs7SUFFckIsb0NBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtRdWVzdGlvbn0gZnJvbSAnLi4vLi4vcGFnZXMubW9kZWwnO1xuaW1wb3J0IHtTdXJ2ZXlSZXNwb25zZXN9IGZyb20gJy4uLy4uL3N1cnZleS1yZXNwb25zZS5tb2RlbCc7XG5pbXBvcnQgKiBhcyBzdXJ2ZXlBY3Rpb25zIGZyb20gJy4uLy4uL3N0b3JlL3N1cnZleS1hY3Rpb25zJztcbmltcG9ydCB7UGFnZXNTZXJ2aWNlfSBmcm9tICcuLi8uLi8uLi9zaGFyZWQvcGFnZXMtc2VydmljZXMvcGFnZXMuc2VydmljZSc7XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLW5hbWUnLFxuICB0ZW1wbGF0ZVVybDogJy4vbmFtZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25hbWUuY29tcG9uZW50LmNzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBOYW1lQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LE9uRGVzdHJveSB7XG5cbiAgQElucHV0KCkgbmFtZTogUXVlc3Rpb247XG5cbiAgQElucHV0KClcbiAgc3VydmV5UmVzcG9uc2U6IFN1cnZleVJlc3BvbnNlcztcblxuICBAT3V0cHV0KClcbiAgc3VibWl0RXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYWdlU2VydmljZTogUGFnZXNTZXJ2aWNlKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5wYWdlU2VydmljZS5zdGFnZSA9PSAnZW50cnktbmV4dCcpIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduYW1lLXF1ZXN0aW9uJykuY2xhc3NOYW1lID0gJ2VudHJ5LW5leHQnO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hbWUtcXVlc3Rpb24tZGVsYXknKS5jbGFzc05hbWUgPSAnZW50cnktbmV4dC1kZWxheSc7XG4gICAgfWVsc2UgaWYgKHRoaXMucGFnZVNlcnZpY2Uuc3RhZ2UgPT0gJ2VudHJ5LXByZXZpb3VzJykge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25hbWUtcXVlc3Rpb24nKS5jbGFzc05hbWUgPSAnZW50cnktcHJldmlvdXMtZGVsYXknXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbmFtZS1xdWVzdGlvbi1kZWxheScpLmNsYXNzTmFtZSA9ICdlbnRyeS1wcmV2aW91cyc7XG4gICAgfVxuICB9XG5cbiAgb25TdWJtaXQodmFsdWU6IHN0cmluZyl7XG4gICAgaWYgKHZhbHVlICE9IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvbklkID0gdGhpcy5uYW1lLnF1ZXN0aW9uSWQ7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uID0gdGhpcy5uYW1lLnF1ZXN0aW9uO1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvblR5cGUgPSB0aGlzLm5hbWUucXVlc3Rpb25UeXBlO1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5pZGVudGlmaWVyID0gdGhpcy5uYW1lLmlkZW50aWZpZXI7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLmFuc3dlciA9IHZhbHVlO1xuICAgICAgdGhpcy5wYWdlU2VydmljZS5wZXJzaXN0U3VydmV5KHRoaXMuc3VydmV5UmVzcG9uc2UpO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0bi1wcmltYXJ5JykuY2xhc3NMaXN0LmFkZCgnYmxpbmstYnRuLWFuaW1hdGlvbicpO1xuICAgICAgc2V0VGltZW91dCgoKT0+e1xuICAgICAgICB0aGlzLnN1Ym1pdEV2ZW50LmVtaXQoKTtcbiAgICAgIH0sMzUwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdWJtaXRFdmVudC5lbWl0KCk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gIH1cblxuXG59XG4iXX0=