/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/questionnaire/date/date.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Question } from '../../pages.model';
import { SurveyResponses } from '../../survey-response.model';
import { PagesService } from '../../../shared/pages-services/pages.service';
export class DateComponent {
    /**
     * @param {?} pageService
     */
    constructor(pageService) {
        this.pageService = pageService;
        this.submitEvent = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.platform = navigator.platform;
        console.log(navigator.platform);
        if (this.pageService.stage == 'entry-next') {
            document.getElementById('date-question').className = 'entry-next';
            document.getElementById('date-question-delay').className = 'entry-next-delay';
        }
        else if (this.pageService.stage == 'entry-previous') {
            document.getElementById('date-question').className = 'entry-previous-delay';
            document.getElementById('date-question-delay').className = 'entry-previous';
        }
    }
    /**
     * @param {?} date
     * @return {?}
     */
    onDateSelect(date) {
        if (date != undefined) {
            this.surveyResponse.questionId = this.dateQuestion.questionId;
            this.surveyResponse.question = this.dateQuestion.question;
            this.surveyResponse.questionType = this.dateQuestion.questionType;
            this.surveyResponse.identifier = this.dateQuestion.identifier;
            this.surveyResponse.answer = date;
            this.pageService.persistSurvey(this.surveyResponse);
            document.getElementById('input').classList.add('blink-btn-animation');
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.submitEvent.emit();
            }), 350);
        }
        else {
            this.submitEvent.emit();
        }
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
    }
}
DateComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-date',
                template: "\n<div id=\"date-question\">\n<div class=\"survey-statement\">  <span *ngIf=\"dateQuestion.attributes.required\" class=\"isRequired\">*</span>{{dateQuestion.question}}</div>\n<p class=\"question-description\">\n        {{dateQuestion.attributes.description}}\n      </p>\n</div>\n\n<div id=\"date-question-delay\">\n  <!-- for IOS device function will be fired on (blur) -->\n<input *ngIf=\"platform == ('iPhone' || 'iPad')\" type=\"date\" id=\"input\" style=\"display:inline-block\" [(ngModel)]=\"surveyResponse.answer\"\n       (blur)=\"onDateSelect($event.target.value)\">\n  <!-- for IOS device function will be fired on (input) -->\n  <input *ngIf=\"platform !== 'iPhone'\" type=\"date\" id=\"input\" style=\"display:inline-block\" [(ngModel)]=\"surveyResponse.answer\"\n         (input)=\"onDateSelect($event.target.value)\">\n\n  <span\n  (click)=\"onDateSelect(undefined)\"\n  *ngIf=\"!dateQuestion.attributes.required\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n",
                styles: ["[type=date]{background:var(--white-25) url(https://cdn1.iconfinder.com/data/icons/cc_mono_icon_set/blacks/16x16/calendar_2.png) 97% 50% no-repeat;height:2em;outline:0}input::-webkit-clear-button,input::-webkit-inner-spin-button{display:none}input::-webkit-calendar-picker-indicator{color:transparent;opacity:1}input::-webkit-calendar-picker-indicator:hover{background:var(--white-25);cursor:pointer}input{margin:10px 0 0;border:1px solid var(--white-25);background-color:var(--white-25);color:var(--text-color-secondary);padding:3px 5px;width:262px}"]
            }] }
];
/** @nocollapse */
DateComponent.ctorParameters = () => [
    { type: PagesService }
];
DateComponent.propDecorators = {
    dateQuestion: [{ type: Input }],
    submitEvent: [{ type: Output }],
    surveyResponse: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    DateComponent.prototype.platform;
    /** @type {?} */
    DateComponent.prototype.dateQuestion;
    /** @type {?} */
    DateComponent.prototype.submitEvent;
    /** @type {?} */
    DateComponent.prototype.surveyResponse;
    /**
     * @type {?}
     * @private
     */
    DateComponent.prototype.pageService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9zdXJ2ZXktbGliLyIsInNvdXJjZXMiOlsibGliL3BhZ2VzL3F1ZXN0aW9ubmFpcmUvZGF0ZS9kYXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBTzFFLE1BQU0sT0FBTyxhQUFhOzs7O0lBWXhCLFlBQW9CLFdBQXlCO1FBQXpCLGdCQUFXLEdBQVgsV0FBVyxDQUFjO1FBTjdDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQU9qQyxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQztRQUNuQyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoQyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxJQUFJLFlBQVksRUFBRTtZQUMxQyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUM7WUFDbEUsUUFBUSxDQUFDLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsR0FBRyxrQkFBa0IsQ0FBQztTQUMvRTthQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksZ0JBQWdCLEVBQUU7WUFDckQsUUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxTQUFTLEdBQUcsc0JBQXNCLENBQUM7WUFDNUUsUUFBUSxDQUFDLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQztTQUM3RTtJQUNILENBQUM7Ozs7O0lBRUQsWUFBWSxDQUFDLElBQVk7UUFDdkIsSUFBSSxJQUFJLElBQUksU0FBUyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDO1lBQzlELElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO1lBQzFELElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDO1lBQ2xFLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDO1lBQzlELElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztZQUNsQyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDcEQsUUFBUSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFDdEUsVUFBVTs7O1lBQUMsR0FBRyxFQUFFO2dCQUNkLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDMUIsQ0FBQyxHQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQ1Q7YUFBTTtZQUNMLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDekI7SUFDSCxDQUFDOzs7O0lBRUQsV0FBVztJQUVYLENBQUM7OztZQW5ERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFVBQVU7Z0JBQ3BCLDYvQkFBb0M7O2FBRXJDOzs7O1lBTk8sWUFBWTs7OzJCQVNqQixLQUFLOzBCQUdMLE1BQU07NkJBR04sS0FBSzs7OztJQVBOLGlDQUFpQjs7SUFDakIscUNBQ3VCOztJQUV2QixvQ0FDaUM7O0lBRWpDLHVDQUNnQzs7Ozs7SUFHcEIsb0NBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtRdWVzdGlvbn0gZnJvbSAnLi4vLi4vcGFnZXMubW9kZWwnO1xuaW1wb3J0IHtTdXJ2ZXlSZXNwb25zZXN9IGZyb20gJy4uLy4uL3N1cnZleS1yZXNwb25zZS5tb2RlbCc7XG5pbXBvcnQge1llc05vfSBmcm9tICcuLi8uLi9zdG9yZS9zdXJ2ZXktYWN0aW9ucyc7XG5pbXBvcnQge1BhZ2VzU2VydmljZX0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL3BhZ2VzLXNlcnZpY2VzL3BhZ2VzLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhcHAtZGF0ZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9kYXRlLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vZGF0ZS5jb21wb25lbnQuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgRGF0ZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgcGxhdGZvcm06IHN0cmluZztcbiAgQElucHV0KClcbiAgZGF0ZVF1ZXN0aW9uOiBRdWVzdGlvbjtcblxuICBAT3V0cHV0KClcbiAgc3VibWl0RXZlbnQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQElucHV0KClcbiAgc3VydmV5UmVzcG9uc2U6IFN1cnZleVJlc3BvbnNlcztcblxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGFnZVNlcnZpY2U6IFBhZ2VzU2VydmljZSkge1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5wbGF0Zm9ybSA9IG5hdmlnYXRvci5wbGF0Zm9ybTtcbiAgICBjb25zb2xlLmxvZyhuYXZpZ2F0b3IucGxhdGZvcm0pO1xuICAgIGlmICh0aGlzLnBhZ2VTZXJ2aWNlLnN0YWdlID09ICdlbnRyeS1uZXh0Jykge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGUtcXVlc3Rpb24nKS5jbGFzc05hbWUgPSAnZW50cnktbmV4dCc7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0ZS1xdWVzdGlvbi1kZWxheScpLmNsYXNzTmFtZSA9ICdlbnRyeS1uZXh0LWRlbGF5JztcbiAgICB9IGVsc2UgaWYgKHRoaXMucGFnZVNlcnZpY2Uuc3RhZ2UgPT0gJ2VudHJ5LXByZXZpb3VzJykge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGUtcXVlc3Rpb24nKS5jbGFzc05hbWUgPSAnZW50cnktcHJldmlvdXMtZGVsYXknO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGUtcXVlc3Rpb24tZGVsYXknKS5jbGFzc05hbWUgPSAnZW50cnktcHJldmlvdXMnO1xuICAgIH1cbiAgfVxuXG4gIG9uRGF0ZVNlbGVjdChkYXRlOiBzdHJpbmcpIHtcbiAgICBpZiAoZGF0ZSAhPSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb25JZCA9IHRoaXMuZGF0ZVF1ZXN0aW9uLnF1ZXN0aW9uSWQ7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uID0gdGhpcy5kYXRlUXVlc3Rpb24ucXVlc3Rpb247XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uVHlwZSA9IHRoaXMuZGF0ZVF1ZXN0aW9uLnF1ZXN0aW9uVHlwZTtcbiAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UuaWRlbnRpZmllciA9IHRoaXMuZGF0ZVF1ZXN0aW9uLmlkZW50aWZpZXI7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLmFuc3dlciA9IGRhdGU7XG4gICAgICB0aGlzLnBhZ2VTZXJ2aWNlLnBlcnNpc3RTdXJ2ZXkodGhpcy5zdXJ2ZXlSZXNwb25zZSk7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5wdXQnKS5jbGFzc0xpc3QuYWRkKCdibGluay1idG4tYW5pbWF0aW9uJyk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5zdWJtaXRFdmVudC5lbWl0KCk7XG4gICAgICB9LCAzNTApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnN1Ym1pdEV2ZW50LmVtaXQoKTtcbiAgICB9XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcblxuICB9XG59XG4iXX0=