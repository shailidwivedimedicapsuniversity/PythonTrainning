/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/questionnaire/date/date.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Question } from '../../pages.model';
import { SurveyResponses } from '../../survey-response.model';
import { PagesService } from '../../../shared/pages-services/pages.service';
var DateComponent = /** @class */ (function () {
    function DateComponent(pageService) {
        this.pageService = pageService;
        this.submitEvent = new EventEmitter();
    }
    /**
     * @return {?}
     */
    DateComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.platform = navigator.platform;
        console.log(navigator.platform);
        if (this.pageService.stage == 'entry-next') {
            document.getElementById('date-question').className = 'entry-next';
            document.getElementById('date-question-delay').className = 'entry-next-delay';
        }
        else if (this.pageService.stage == 'entry-previous') {
            document.getElementById('date-question').className = 'entry-previous-delay';
            document.getElementById('date-question-delay').className = 'entry-previous';
        }
    };
    /**
     * @param {?} date
     * @return {?}
     */
    DateComponent.prototype.onDateSelect = /**
     * @param {?} date
     * @return {?}
     */
    function (date) {
        var _this = this;
        if (date != undefined) {
            this.surveyResponse.questionId = this.dateQuestion.questionId;
            this.surveyResponse.question = this.dateQuestion.question;
            this.surveyResponse.questionType = this.dateQuestion.questionType;
            this.surveyResponse.identifier = this.dateQuestion.identifier;
            this.surveyResponse.answer = date;
            this.pageService.persistSurvey(this.surveyResponse);
            document.getElementById('input').classList.add('blink-btn-animation');
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.submitEvent.emit();
            }), 350);
        }
        else {
            this.submitEvent.emit();
        }
    };
    /**
     * @return {?}
     */
    DateComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
    };
    DateComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-date',
                    template: "\n<div id=\"date-question\">\n<div class=\"survey-statement\">  <span *ngIf=\"dateQuestion.attributes.required\" class=\"isRequired\">*</span>{{dateQuestion.question}}</div>\n<p class=\"question-description\">\n        {{dateQuestion.attributes.description}}\n      </p>\n</div>\n\n<div id=\"date-question-delay\">\n  <!-- for IOS device function will be fired on (blur) -->\n<input *ngIf=\"platform == ('iPhone' || 'iPad')\" type=\"date\" id=\"input\" style=\"display:inline-block\" [(ngModel)]=\"surveyResponse.answer\"\n       (blur)=\"onDateSelect($event.target.value)\">\n  <!-- for IOS device function will be fired on (input) -->\n  <input *ngIf=\"platform !== 'iPhone'\" type=\"date\" id=\"input\" style=\"display:inline-block\" [(ngModel)]=\"surveyResponse.answer\"\n         (input)=\"onDateSelect($event.target.value)\">\n\n  <span\n  (click)=\"onDateSelect(undefined)\"\n  *ngIf=\"!dateQuestion.attributes.required\" class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n",
                    styles: ["[type=date]{background:var(--white-25) url(https://cdn1.iconfinder.com/data/icons/cc_mono_icon_set/blacks/16x16/calendar_2.png) 97% 50% no-repeat;height:2em;outline:0}input::-webkit-clear-button,input::-webkit-inner-spin-button{display:none}input::-webkit-calendar-picker-indicator{color:transparent;opacity:1}input::-webkit-calendar-picker-indicator:hover{background:var(--white-25);cursor:pointer}input{margin:10px 0 0;border:1px solid var(--white-25);background-color:var(--white-25);color:var(--text-color-secondary);padding:3px 5px;width:262px}"]
                }] }
    ];
    /** @nocollapse */
    DateComponent.ctorParameters = function () { return [
        { type: PagesService }
    ]; };
    DateComponent.propDecorators = {
        dateQuestion: [{ type: Input }],
        submitEvent: [{ type: Output }],
        surveyResponse: [{ type: Input }]
    };
    return DateComponent;
}());
export { DateComponent };
if (false) {
    /** @type {?} */
    DateComponent.prototype.platform;
    /** @type {?} */
    DateComponent.prototype.dateQuestion;
    /** @type {?} */
    DateComponent.prototype.submitEvent;
    /** @type {?} */
    DateComponent.prototype.surveyResponse;
    /**
     * @type {?}
     * @private
     */
    DateComponent.prototype.pageService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9zdXJ2ZXktbGliLyIsInNvdXJjZXMiOlsibGliL3BhZ2VzL3F1ZXN0aW9ubmFpcmUvZGF0ZS9kYXRlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBRTFFO0lBaUJFLHVCQUFvQixXQUF5QjtRQUF6QixnQkFBVyxHQUFYLFdBQVcsQ0FBYztRQU43QyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFPakMsQ0FBQzs7OztJQUVELGdDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLFFBQVEsQ0FBQztRQUNuQyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoQyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxJQUFJLFlBQVksRUFBRTtZQUMxQyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUM7WUFDbEUsUUFBUSxDQUFDLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsR0FBRyxrQkFBa0IsQ0FBQztTQUMvRTthQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksZ0JBQWdCLEVBQUU7WUFDckQsUUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxTQUFTLEdBQUcsc0JBQXNCLENBQUM7WUFDNUUsUUFBUSxDQUFDLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQztTQUM3RTtJQUNILENBQUM7Ozs7O0lBRUQsb0NBQVk7Ozs7SUFBWixVQUFhLElBQVk7UUFBekIsaUJBZUM7UUFkQyxJQUFJLElBQUksSUFBSSxTQUFTLEVBQUU7WUFDckIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUM7WUFDOUQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7WUFDMUQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUM7WUFDbEUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUM7WUFDOUQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQ2xDLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUNwRCxRQUFRLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUN0RSxVQUFVOzs7WUFBQztnQkFDVCxLQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQzFCLENBQUMsR0FBRSxHQUFHLENBQUMsQ0FBQztTQUNUO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7OztJQUVELG1DQUFXOzs7SUFBWDtJQUVBLENBQUM7O2dCQW5ERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFVBQVU7b0JBQ3BCLDYvQkFBb0M7O2lCQUVyQzs7OztnQkFOTyxZQUFZOzs7K0JBU2pCLEtBQUs7OEJBR0wsTUFBTTtpQ0FHTixLQUFLOztJQXVDUixvQkFBQztDQUFBLEFBcERELElBb0RDO1NBL0NZLGFBQWE7OztJQUN4QixpQ0FBaUI7O0lBQ2pCLHFDQUN1Qjs7SUFFdkIsb0NBQ2lDOztJQUVqQyx1Q0FDZ0M7Ozs7O0lBR3BCLG9DQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7UXVlc3Rpb259IGZyb20gJy4uLy4uL3BhZ2VzLm1vZGVsJztcbmltcG9ydCB7U3VydmV5UmVzcG9uc2VzfSBmcm9tICcuLi8uLi9zdXJ2ZXktcmVzcG9uc2UubW9kZWwnO1xuaW1wb3J0IHtZZXNOb30gZnJvbSAnLi4vLi4vc3RvcmUvc3VydmV5LWFjdGlvbnMnO1xuaW1wb3J0IHtQYWdlc1NlcnZpY2V9IGZyb20gJy4uLy4uLy4uL3NoYXJlZC9wYWdlcy1zZXJ2aWNlcy9wYWdlcy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLWRhdGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vZGF0ZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2RhdGUuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIERhdGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIHBsYXRmb3JtOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGRhdGVRdWVzdGlvbjogUXVlc3Rpb247XG5cbiAgQE91dHB1dCgpXG4gIHN1Ym1pdEV2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBJbnB1dCgpXG4gIHN1cnZleVJlc3BvbnNlOiBTdXJ2ZXlSZXNwb25zZXM7XG5cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBhZ2VTZXJ2aWNlOiBQYWdlc1NlcnZpY2UpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucGxhdGZvcm0gPSBuYXZpZ2F0b3IucGxhdGZvcm07XG4gICAgY29uc29sZS5sb2cobmF2aWdhdG9yLnBsYXRmb3JtKTtcbiAgICBpZiAodGhpcy5wYWdlU2VydmljZS5zdGFnZSA9PSAnZW50cnktbmV4dCcpIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXRlLXF1ZXN0aW9uJykuY2xhc3NOYW1lID0gJ2VudHJ5LW5leHQnO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RhdGUtcXVlc3Rpb24tZGVsYXknKS5jbGFzc05hbWUgPSAnZW50cnktbmV4dC1kZWxheSc7XG4gICAgfSBlbHNlIGlmICh0aGlzLnBhZ2VTZXJ2aWNlLnN0YWdlID09ICdlbnRyeS1wcmV2aW91cycpIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXRlLXF1ZXN0aW9uJykuY2xhc3NOYW1lID0gJ2VudHJ5LXByZXZpb3VzLWRlbGF5JztcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXRlLXF1ZXN0aW9uLWRlbGF5JykuY2xhc3NOYW1lID0gJ2VudHJ5LXByZXZpb3VzJztcbiAgICB9XG4gIH1cblxuICBvbkRhdGVTZWxlY3QoZGF0ZTogc3RyaW5nKSB7XG4gICAgaWYgKGRhdGUgIT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uSWQgPSB0aGlzLmRhdGVRdWVzdGlvbi5xdWVzdGlvbklkO1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvbiA9IHRoaXMuZGF0ZVF1ZXN0aW9uLnF1ZXN0aW9uO1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvblR5cGUgPSB0aGlzLmRhdGVRdWVzdGlvbi5xdWVzdGlvblR5cGU7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLmlkZW50aWZpZXIgPSB0aGlzLmRhdGVRdWVzdGlvbi5pZGVudGlmaWVyO1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5hbnN3ZXIgPSBkYXRlO1xuICAgICAgdGhpcy5wYWdlU2VydmljZS5wZXJzaXN0U3VydmV5KHRoaXMuc3VydmV5UmVzcG9uc2UpO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lucHV0JykuY2xhc3NMaXN0LmFkZCgnYmxpbmstYnRuLWFuaW1hdGlvbicpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuc3VibWl0RXZlbnQuZW1pdCgpO1xuICAgICAgfSwgMzUwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdWJtaXRFdmVudC5lbWl0KCk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG5cbiAgfVxufVxuIl19