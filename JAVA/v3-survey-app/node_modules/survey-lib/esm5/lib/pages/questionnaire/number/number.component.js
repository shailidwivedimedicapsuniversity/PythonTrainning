/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/questionnaire/number/number.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Question } from '../../pages.model';
import { SurveyResponses } from '../../survey-response.model';
import { PagesService } from '../../../shared/pages-services/pages.service';
var NumberComponent = /** @class */ (function () {
    function NumberComponent(pageService) {
        this.pageService = pageService;
        this.submitEvent = new EventEmitter();
    }
    /**
     * @return {?}
     */
    NumberComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.pageService.stage == 'entry-next') {
            document.getElementById('number-question').className = 'entry-next';
            document.getElementById('number-question-delay').className = 'entry-next-delay';
        }
        else if (this.pageService.stage == 'entry-previous') {
            document.getElementById('number-question').className = 'entry-previous-delay';
            document.getElementById('number-question-delay').className = 'entry-previous';
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NumberComponent.prototype.onSubmit = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var _this = this;
        if (value != undefined) {
            this.surveyResponse.questionId = this.phone.questionId;
            this.surveyResponse.question = this.phone.question;
            this.surveyResponse.identifier = this.phone.identifier;
            this.surveyResponse.questionType = this.phone.questionType;
            this.surveyResponse.answer = value;
            this.pageService.persistSurvey(this.surveyResponse);
            document.getElementById('btn-primary').classList.add('blink-btn-animation');
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.submitEvent.emit();
            }), 350);
        }
        else {
            this.submitEvent.emit();
        }
    };
    /**
     * @return {?}
     */
    NumberComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
    };
    NumberComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-number',
                    template: "<div id=\"number-question\">\n<div class=\"survey-statement\">\n  <span *ngIf=\"phone.attributes.required\" class=\"isRequired\">*</span>{{phone.question}}\n</div>\n<p class=\"question-description\">\n  {{phone.attributes.description}}\n</p>\n</div>\n\n<div id=\"number-question-delay\">\n<input class=\"survey-input-text-box\"\n  #numberInput\n  type=\"number\"\n  name=\"number\"\n  [(ngModel)]=\"surveyResponse.answer\"\n  onfocus=\"this.placeholder=''\" placeholder=\"Number\">\n<button class=\"btn-primary\" id=\"btn-primary\" (click)=\"onSubmit(numberInput.value)\">{{isLastQuestion?'Submit': 'Done'}}</button>\n<span\n  (click)=\"onSubmit(undefined)\"\n  *ngIf=\"!phone.attributes.required\"\n  class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n</div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    NumberComponent.ctorParameters = function () { return [
        { type: PagesService }
    ]; };
    NumberComponent.propDecorators = {
        phone: [{ type: Input }],
        surveyResponse: [{ type: Input }],
        submitEvent: [{ type: Output }],
        isLastQuestion: [{ type: Input }]
    };
    return NumberComponent;
}());
export { NumberComponent };
if (false) {
    /** @type {?} */
    NumberComponent.prototype.phone;
    /** @type {?} */
    NumberComponent.prototype.surveyResponse;
    /** @type {?} */
    NumberComponent.prototype.submitEvent;
    /** @type {?} */
    NumberComponent.prototype.isLastQuestion;
    /**
     * @type {?}
     * @private
     */
    NumberComponent.prototype.pageService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3N1cnZleS1saWIvIiwic291cmNlcyI6WyJsaWIvcGFnZXMvcXVlc3Rpb25uYWlyZS9udW1iZXIvbnVtYmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBRzFFO0lBbUJFLHlCQUFvQixXQUF5QjtRQUF6QixnQkFBVyxHQUFYLFdBQVcsQ0FBYztRQUw3QyxnQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFNakMsQ0FBQzs7OztJQUVELGtDQUFROzs7SUFBUjtRQUNFLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksWUFBWSxFQUFFO1lBQzFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxTQUFTLEdBQUcsWUFBWSxDQUFDO1lBQ3BFLFFBQVEsQ0FBQyxjQUFjLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxTQUFTLEdBQUcsa0JBQWtCLENBQUM7U0FDakY7YUFBTSxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxJQUFJLGdCQUFnQixFQUFFO1lBQ3JELFFBQVEsQ0FBQyxjQUFjLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxTQUFTLEdBQUcsc0JBQXNCLENBQUM7WUFDOUUsUUFBUSxDQUFDLGNBQWMsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQztTQUMvRTtJQUNILENBQUM7Ozs7O0lBRUQsa0NBQVE7Ozs7SUFBUixVQUFTLEtBQWE7UUFBdEIsaUJBZUM7UUFkQyxJQUFJLEtBQUssSUFBSSxTQUFTLEVBQUU7WUFDdEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUM7WUFDdkQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDbkQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUM7WUFDdkQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUM7WUFDM0QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1lBQ25DLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUNwRCxRQUFRLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUM1RSxVQUFVOzs7WUFBQztnQkFDVCxLQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO1lBQzFCLENBQUMsR0FBRSxHQUFHLENBQUMsQ0FBQztTQUNUO2FBQU07WUFDTCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7OztJQUVELHFDQUFXOzs7SUFBWDtJQUNBLENBQUM7O2dCQWxERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFlBQVk7b0JBQ3RCLDB4QkFBc0M7O2lCQUV2Qzs7OztnQkFQTyxZQUFZOzs7d0JBV2pCLEtBQUs7aUNBRUwsS0FBSzs4QkFHTCxNQUFNO2lDQUdOLEtBQUs7O0lBb0NSLHNCQUFDO0NBQUEsQUFwREQsSUFvREM7U0EvQ1ksZUFBZTs7O0lBRzFCLGdDQUF5Qjs7SUFFekIseUNBQ2dDOztJQUVoQyxzQ0FDaUM7O0lBRWpDLHlDQUMrQjs7Ozs7SUFFbkIsc0NBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtRdWVzdGlvbn0gZnJvbSAnLi4vLi4vcGFnZXMubW9kZWwnO1xuaW1wb3J0IHtTdXJ2ZXlSZXNwb25zZXN9IGZyb20gJy4uLy4uL3N1cnZleS1yZXNwb25zZS5tb2RlbCc7XG5pbXBvcnQgKiBhcyBzdXJ2ZXlBY3Rpb25zIGZyb20gJy4uLy4uL3N0b3JlL3N1cnZleS1hY3Rpb25zJztcbmltcG9ydCB7UGFnZXNTZXJ2aWNlfSBmcm9tICcuLi8uLi8uLi9zaGFyZWQvcGFnZXMtc2VydmljZXMvcGFnZXMuc2VydmljZSc7XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLW51bWJlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9udW1iZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9udW1iZXIuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIE51bWJlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcblxuXG4gIEBJbnB1dCgpIHBob25lOiBRdWVzdGlvbjtcblxuICBASW5wdXQoKVxuICBzdXJ2ZXlSZXNwb25zZTogU3VydmV5UmVzcG9uc2VzO1xuXG4gIEBPdXRwdXQoKVxuICBzdWJtaXRFdmVudCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgaXNMYXN0UXVlc3Rpb246IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwYWdlU2VydmljZTogUGFnZXNTZXJ2aWNlKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5wYWdlU2VydmljZS5zdGFnZSA9PSAnZW50cnktbmV4dCcpIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdudW1iZXItcXVlc3Rpb24nKS5jbGFzc05hbWUgPSAnZW50cnktbmV4dCc7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbnVtYmVyLXF1ZXN0aW9uLWRlbGF5JykuY2xhc3NOYW1lID0gJ2VudHJ5LW5leHQtZGVsYXknO1xuICAgIH0gZWxzZSBpZiAodGhpcy5wYWdlU2VydmljZS5zdGFnZSA9PSAnZW50cnktcHJldmlvdXMnKSB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbnVtYmVyLXF1ZXN0aW9uJykuY2xhc3NOYW1lID0gJ2VudHJ5LXByZXZpb3VzLWRlbGF5JztcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdudW1iZXItcXVlc3Rpb24tZGVsYXknKS5jbGFzc05hbWUgPSAnZW50cnktcHJldmlvdXMnO1xuICAgIH1cbiAgfVxuXG4gIG9uU3VibWl0KHZhbHVlOiBzdHJpbmcpIHtcbiAgICBpZiAodmFsdWUgIT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uSWQgPSB0aGlzLnBob25lLnF1ZXN0aW9uSWQ7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLnF1ZXN0aW9uID0gdGhpcy5waG9uZS5xdWVzdGlvbjtcbiAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UuaWRlbnRpZmllciA9IHRoaXMucGhvbmUuaWRlbnRpZmllcjtcbiAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb25UeXBlID0gdGhpcy5waG9uZS5xdWVzdGlvblR5cGU7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLmFuc3dlciA9IHZhbHVlO1xuICAgICAgdGhpcy5wYWdlU2VydmljZS5wZXJzaXN0U3VydmV5KHRoaXMuc3VydmV5UmVzcG9uc2UpO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2J0bi1wcmltYXJ5JykuY2xhc3NMaXN0LmFkZCgnYmxpbmstYnRuLWFuaW1hdGlvbicpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuc3VibWl0RXZlbnQuZW1pdCgpO1xuICAgICAgfSwgMzUwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdWJtaXRFdmVudC5lbWl0KCk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gIH1cblxufVxuIl19