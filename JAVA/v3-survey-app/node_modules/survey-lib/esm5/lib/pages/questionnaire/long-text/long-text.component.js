/**
 * @fileoverview added by tsickle
 * Generated from: lib/pages/questionnaire/long-text/long-text.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Question } from '../../pages.model';
import { SurveyResponses } from '../../survey-response.model';
import { PagesService } from '../../../shared/pages-services/pages.service';
import { SurveyLibService } from '../../../survey-lib.service';
var LongTextComponent = /** @class */ (function () {
    function LongTextComponent(pageService, surveyLibServices) {
        this.pageService = pageService;
        this.surveyLibServices = surveyLibServices;
        this.submitEvent = new EventEmitter();
    }
    /**
     * @return {?}
     */
    LongTextComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.pageService.stage == 'entry-next') {
            document.getElementById('long-question').className = 'entry-next';
            document.getElementById('long-question-delay').className = 'entry-next-delay';
        }
        else if (this.pageService.stage == 'entry-previous') {
            document.getElementById('long-question').className = 'entry-previous-delay';
            document.getElementById('long-question-delay').className = 'entry-previous';
        }
    };
    /**
     * @param {?} value
     * @return {?}
     */
    LongTextComponent.prototype.onInputValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        var _this = this;
        if (value != undefined) {
            this.surveyResponse.questionId = this.longText.questionId;
            this.surveyResponse.question = this.longText.question;
            this.surveyResponse.questionType = this.longText.questionType;
            this.surveyResponse.answer = value;
            this.surveyResponse.identifier = this.longText.identifier;
            this.pageService.persistSurvey(this.surveyResponse);
            document.getElementById('btn-primary').classList.add('blink-btn-animation');
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.submitEvent.emit();
            }), 350);
        }
        else {
            this.submitEvent.emit();
        }
    };
    /**
     * @return {?}
     */
    LongTextComponent.prototype.skipQuestion = /**
     * @return {?}
     */
    function () {
        this.submitEvent.emit();
    };
    /**
     * @return {?}
     */
    LongTextComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
    };
    LongTextComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-long-text',
                    template: "<div id=\"long-question\">\n\n<div class=\"survey-statement\">\n  <span *ngIf=\"longText.attributes.required\" class=\"isRequired\">*</span>{{ longText.question }}</div>\n  <p class=\"question-description\">\n  {{longText.attributes.description}}\n</p>\n\n</div>\n\n<div id=\"long-question-delay\">\n<textarea class=\"survey-input-textarea\" #longTextInput onfocus=\"this.placeholder=''\" name=\"message\"\n          placeholder=\"Add comment here\"\n          [maxLength]=\"longText.attributes.maxCharacterCount\"\n          [(ngModel)]=\"surveyResponse.answer\">\n  </textarea>\n<button class=\"btn-primary\"  id=\"btn-primary\" (click)=\"onInputValue(longTextInput.value)\">{{isLastQuestion?'Submit': 'Done'}}</button>\n<span *ngIf=\"!longText.attributes.required\"\n     (click)=\"onInputValue(undefined)\"\n     class=\"skip-this-question skip-this-question-marginLeft\">Skip</span>\n<!--<div class=\"row\">\n<button id=\"skip-button\"\n        (click)=\"skipQuestion()\">Skip</button>\n<button id=\"done-button\"\n        (click)=\"onInputValue()\">Done</button>\n</div>-->\n</div>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    LongTextComponent.ctorParameters = function () { return [
        { type: PagesService },
        { type: SurveyLibService }
    ]; };
    LongTextComponent.propDecorators = {
        longText: [{ type: Input }],
        surveyResponse: [{ type: Input }],
        submitEvent: [{ type: Output }],
        isLastQuestion: [{ type: Input }]
    };
    return LongTextComponent;
}());
export { LongTextComponent };
if (false) {
    /** @type {?} */
    LongTextComponent.prototype.longText;
    /** @type {?} */
    LongTextComponent.prototype.surveyResponse;
    /** @type {?} */
    LongTextComponent.prototype.submitEvent;
    /** @type {?} */
    LongTextComponent.prototype.isLastQuestion;
    /**
     * @type {?}
     * @private
     */
    LongTextComponent.prototype.pageService;
    /** @type {?} */
    LongTextComponent.prototype.surveyLibServices;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9uZy10ZXh0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3N1cnZleS1saWIvIiwic291cmNlcyI6WyJsaWIvcGFnZXMvcXVlc3Rpb25uYWlyZS9sb25nLXRleHQvbG9uZy10ZXh0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sNkJBQTZCLENBQUM7QUFFNUQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDhDQUE4QyxDQUFDO0FBQzFFLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLDZCQUE2QixDQUFDO0FBRTdEO0lBbUJFLDJCQUFvQixXQUF5QixFQUFRLGlCQUFtQztRQUFwRSxnQkFBVyxHQUFYLFdBQVcsQ0FBYztRQUFRLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBa0I7UUFMeEYsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBTWpDLENBQUM7Ozs7SUFFRCxvQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxJQUFJLFlBQVksRUFBRTtZQUMxQyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUM7WUFDbEUsUUFBUSxDQUFDLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsR0FBRyxrQkFBa0IsQ0FBQztTQUMvRTthQUFLLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksZ0JBQWdCLEVBQUU7WUFDcEQsUUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxTQUFTLEdBQUcsc0JBQXNCLENBQUE7WUFDM0UsUUFBUSxDQUFDLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLFNBQVMsR0FBRyxnQkFBZ0IsQ0FBQztTQUM3RTtJQUNILENBQUM7Ozs7O0lBRUQsd0NBQVk7Ozs7SUFBWixVQUFhLEtBQWE7UUFBMUIsaUJBZ0JDO1FBZkMsSUFBSSxLQUFLLElBQUksU0FBUyxFQUFFO1lBQ3RCLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDO1lBQzFELElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO1lBQ3RELElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDO1lBQzlELElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUNuQyxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQztZQUMxRCxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDcEQsUUFBUSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFDNUUsVUFBVTs7O1lBQUM7Z0JBQ1QsS0FBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUMxQixDQUFDLEdBQUMsR0FBRyxDQUFDLENBQUM7U0FDUjthQUFNO1lBQ0wsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN6QjtJQUVILENBQUM7Ozs7SUFFRCx3Q0FBWTs7O0lBQVo7UUFDRSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzFCLENBQUM7Ozs7SUFFRCx1Q0FBVzs7O0lBQVg7SUFDQSxDQUFDOztnQkF2REYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxlQUFlO29CQUN6Qiw2a0NBQXlDOztpQkFFMUM7Ozs7Z0JBUE8sWUFBWTtnQkFDWixnQkFBZ0I7OzsyQkFVckIsS0FBSztpQ0FFTCxLQUFLOzhCQUdMLE1BQU07aUNBR04sS0FBSzs7SUF5Q1Isd0JBQUM7Q0FBQSxBQXpERCxJQXlEQztTQXBEWSxpQkFBaUI7OztJQUc1QixxQ0FBNEI7O0lBRTVCLDJDQUNnQzs7SUFFaEMsd0NBQ2lDOztJQUVqQywyQ0FDK0I7Ozs7O0lBRW5CLHdDQUFpQzs7SUFBQyw4Q0FBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25EZXN0cm95LCBPbkluaXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1F1ZXN0aW9ufSBmcm9tICcuLi8uLi9wYWdlcy5tb2RlbCc7XG5pbXBvcnQge1N1cnZleVJlc3BvbnNlc30gZnJvbSAnLi4vLi4vc3VydmV5LXJlc3BvbnNlLm1vZGVsJztcbmltcG9ydCAqIGFzIHN1cnZleUFjdGlvbnMgZnJvbSAnLi4vLi4vc3RvcmUvc3VydmV5LWFjdGlvbnMnO1xuaW1wb3J0IHtQYWdlc1NlcnZpY2V9IGZyb20gJy4uLy4uLy4uL3NoYXJlZC9wYWdlcy1zZXJ2aWNlcy9wYWdlcy5zZXJ2aWNlJztcbmltcG9ydCB7U3VydmV5TGliU2VydmljZX0gZnJvbSAnLi4vLi4vLi4vc3VydmV5LWxpYi5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYXBwLWxvbmctdGV4dCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9sb25nLXRleHQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9sb25nLXRleHQuY29tcG9uZW50LmNzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBMb25nVGV4dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCxPbkRlc3Ryb3kge1xuXG5cbiAgQElucHV0KCkgbG9uZ1RleHQ6IFF1ZXN0aW9uO1xuXG4gIEBJbnB1dCgpXG4gIHN1cnZleVJlc3BvbnNlOiBTdXJ2ZXlSZXNwb25zZXM7XG5cbiAgQE91dHB1dCgpXG4gIHN1Ym1pdEV2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyBpc0xhc3RRdWVzdGlvbjogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHBhZ2VTZXJ2aWNlOiBQYWdlc1NlcnZpY2UscHVibGljIHN1cnZleUxpYlNlcnZpY2VzOiBTdXJ2ZXlMaWJTZXJ2aWNlKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICBpZiAodGhpcy5wYWdlU2VydmljZS5zdGFnZSA9PSAnZW50cnktbmV4dCcpIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb25nLXF1ZXN0aW9uJykuY2xhc3NOYW1lID0gJ2VudHJ5LW5leHQnO1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvbmctcXVlc3Rpb24tZGVsYXknKS5jbGFzc05hbWUgPSAnZW50cnktbmV4dC1kZWxheSc7XG4gICAgfWVsc2UgaWYgKHRoaXMucGFnZVNlcnZpY2Uuc3RhZ2UgPT0gJ2VudHJ5LXByZXZpb3VzJykge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvbmctcXVlc3Rpb24nKS5jbGFzc05hbWUgPSAnZW50cnktcHJldmlvdXMtZGVsYXknXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9uZy1xdWVzdGlvbi1kZWxheScpLmNsYXNzTmFtZSA9ICdlbnRyeS1wcmV2aW91cyc7XG4gICAgfVxuICB9XG5cbiAgb25JbnB1dFZhbHVlKHZhbHVlOiBzdHJpbmcpe1xuICAgIGlmICh2YWx1ZSAhPSB1bmRlZmluZWQpIHtcbiAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb25JZCA9IHRoaXMubG9uZ1RleHQucXVlc3Rpb25JZDtcbiAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UucXVlc3Rpb24gPSB0aGlzLmxvbmdUZXh0LnF1ZXN0aW9uO1xuICAgICAgdGhpcy5zdXJ2ZXlSZXNwb25zZS5xdWVzdGlvblR5cGUgPSB0aGlzLmxvbmdUZXh0LnF1ZXN0aW9uVHlwZTtcbiAgICAgIHRoaXMuc3VydmV5UmVzcG9uc2UuYW5zd2VyID0gdmFsdWU7XG4gICAgICB0aGlzLnN1cnZleVJlc3BvbnNlLmlkZW50aWZpZXIgPSB0aGlzLmxvbmdUZXh0LmlkZW50aWZpZXI7XG4gICAgICB0aGlzLnBhZ2VTZXJ2aWNlLnBlcnNpc3RTdXJ2ZXkodGhpcy5zdXJ2ZXlSZXNwb25zZSk7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnRuLXByaW1hcnknKS5jbGFzc0xpc3QuYWRkKCdibGluay1idG4tYW5pbWF0aW9uJyk7XG4gICAgICBzZXRUaW1lb3V0KCgpPT57XG4gICAgICAgIHRoaXMuc3VibWl0RXZlbnQuZW1pdCgpO1xuICAgICAgfSwzNTApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnN1Ym1pdEV2ZW50LmVtaXQoKTtcbiAgICB9XG5cbiAgfVxuXG4gIHNraXBRdWVzdGlvbigpe1xuICAgIHRoaXMuc3VibWl0RXZlbnQuZW1pdCgpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gIH1cblxufVxuIl19