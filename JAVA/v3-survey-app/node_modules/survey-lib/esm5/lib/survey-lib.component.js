/**
 * @fileoverview added by tsickle
 * Generated from: lib/survey-lib.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { SurveyContent } from './pages/pages.model';
import { SurveyLibService } from './survey-lib.service';
import { PagesService } from './shared/pages-services/pages.service';
import { SurveyResponses } from './pages/survey-response.model';
var SurveyLibComponent = /** @class */ (function () {
    function SurveyLibComponent(surveyLibraryService, pageService) {
        this.surveyLibraryService = surveyLibraryService;
        this.pageService = pageService;
        this.surveyResponseEmitter = new EventEmitter();
        this.isQuestionCardCampaign = false;
        this.responseFromQuestionCardCampaign = undefined;
    }
    /**
     * @return {?}
     */
    SurveyLibComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.isQuestionCardCampaign) {
            console.log('Inside question card campaign!');
            if (this.surveyContent.pages[0].pageName === 'Welcome page') {
                this.surveyContent.pages.splice(0, 1);
            }
            this.storeResponseFromQuestionCardCampaign();
            this.surveyLibraryService.isQuestionCardCampaign = true;
        }
        this.surveyLibraryService.initializeSurveyTheme(this.surveyContent.selectedTheme);
    };
    /**
     * @param {?} surveyResponse
     * @return {?}
     */
    SurveyLibComponent.prototype.emitResponse = /**
     * @param {?} surveyResponse
     * @return {?}
     */
    function (surveyResponse) {
        this.surveyResponseEmitter.emit(surveyResponse);
    };
    /**
     * @return {?}
     */
    SurveyLibComponent.prototype.storeResponseFromQuestionCardCampaign = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var question = this.surveyContent.pages[0].questions[0];
        /** @type {?} */
        var surveyResponse = new SurveyResponses();
        surveyResponse.question = question.question;
        surveyResponse.questionType = question.questionType;
        surveyResponse.identifier = question.identifier;
        surveyResponse.questionId = question.questionId;
        switch (question.questionType) {
            case 'Nps':
            case 'Rating':
                surveyResponse.rating = this.responseFromQuestionCardCampaign;
                this.pageService.persistSurvey(surveyResponse);
                break;
            case 'Yes / No':
                surveyResponse.answer = this.responseFromQuestionCardCampaign;
                this.pageService.persistSurvey(surveyResponse);
                break;
            case 'Statement':
                surveyResponse.answer = this.responseFromQuestionCardCampaign;
                this.pageService.persistSurvey(surveyResponse);
                break;
            case 'Date':
                surveyResponse.answer = this.responseFromQuestionCardCampaign;
                this.pageService.persistSurvey(surveyResponse);
                break;
            default:
                break;
        }
    };
    SurveyLibComponent.decorators = [
        { type: Component, args: [{
                    selector: 'omoto-survey-lib',
                    template: "\n    <app-pages [surveyContent]=\"surveyContent\"\n               (surveyResponseEmitter)=\"emitResponse($event)\"\n               [isTestMode]=\"testMode\"\n               [surveyTheme]=\"theme\"></app-pages>\n  "
                }] }
    ];
    /** @nocollapse */
    SurveyLibComponent.ctorParameters = function () { return [
        { type: SurveyLibService },
        { type: PagesService }
    ]; };
    SurveyLibComponent.propDecorators = {
        surveyResponseEmitter: [{ type: Output }],
        surveyContent: [{ type: Input }],
        testMode: [{ type: Input }],
        theme: [{ type: Input }],
        currentPageIndex: [{ type: Input }],
        currentQuestionIndex: [{ type: Input }],
        isQuestionCardCampaign: [{ type: Input }],
        responseFromQuestionCardCampaign: [{ type: Input }]
    };
    return SurveyLibComponent;
}());
export { SurveyLibComponent };
if (false) {
    /** @type {?} */
    SurveyLibComponent.prototype.surveyResponseEmitter;
    /** @type {?} */
    SurveyLibComponent.prototype.surveyContent;
    /** @type {?} */
    SurveyLibComponent.prototype.testMode;
    /** @type {?} */
    SurveyLibComponent.prototype.theme;
    /** @type {?} */
    SurveyLibComponent.prototype.currentPageIndex;
    /** @type {?} */
    SurveyLibComponent.prototype.currentQuestionIndex;
    /** @type {?} */
    SurveyLibComponent.prototype.isQuestionCardCampaign;
    /** @type {?} */
    SurveyLibComponent.prototype.responseFromQuestionCardCampaign;
    /**
     * @type {?}
     * @private
     */
    SurveyLibComponent.prototype.surveyLibraryService;
    /** @type {?} */
    SurveyLibComponent.prototype.pageService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VydmV5LWxpYi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9zdXJ2ZXktbGliLyIsInNvdXJjZXMiOlsibGliL3N1cnZleS1saWIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM3RSxPQUFPLEVBQWEsYUFBYSxFQUFDLE1BQU0scUJBQXFCLENBQUM7QUFDOUQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBRW5FLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUc5RDtJQXFDRSw0QkFBb0Isb0JBQXNDLEVBQ3ZDLFdBQXlCO1FBRHhCLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBa0I7UUFDdkMsZ0JBQVcsR0FBWCxXQUFXLENBQWM7UUF6QnJDLDBCQUFxQixHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBa0JuRSwyQkFBc0IsR0FBWSxLQUFLLENBQUM7UUFHeEMscUNBQWdDLEdBQVEsU0FBUyxDQUFDO0lBS3pELENBQUM7Ozs7SUFFRCxxQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLElBQUksQ0FBQyxzQkFBc0IsRUFBRTtZQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7WUFDOUMsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEtBQUssY0FBYyxFQUFFO2dCQUMzRCxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2FBQ3ZDO1lBQ0QsSUFBSSxDQUFDLHFDQUFxQyxFQUFFLENBQUM7WUFDN0MsSUFBSSxDQUFDLG9CQUFvQixDQUFDLHNCQUFzQixHQUFHLElBQUksQ0FBQztTQUN6RDtRQUNELElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3BGLENBQUM7Ozs7O0lBRUQseUNBQVk7Ozs7SUFBWixVQUFhLGNBQW1CO1FBQzlCLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDbEQsQ0FBQzs7OztJQUdELGtFQUFxQzs7O0lBQXJDOztZQUNNLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDOztZQUNuRCxjQUFjLEdBQUcsSUFBSSxlQUFlLEVBQUU7UUFDMUMsY0FBYyxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDO1FBQzVDLGNBQWMsQ0FBQyxZQUFZLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQztRQUNwRCxjQUFjLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQyxVQUFVLENBQUM7UUFDaEQsY0FBYyxDQUFDLFVBQVUsR0FBRyxRQUFRLENBQUMsVUFBVSxDQUFDO1FBRWhELFFBQVEsUUFBUSxDQUFDLFlBQVksRUFBRTtZQUM3QixLQUFLLEtBQUssQ0FBQztZQUNYLEtBQUssUUFBUTtnQkFDWCxjQUFjLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQztnQkFDOUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDLENBQUM7Z0JBQy9DLE1BQU07WUFFUixLQUFLLFVBQVU7Z0JBQ2IsY0FBYyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsZ0NBQWdDLENBQUM7Z0JBQzlELElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLGNBQWMsQ0FBQyxDQUFDO2dCQUUvQyxNQUFNO1lBRVIsS0FBSyxXQUFXO2dCQUNkLGNBQWMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGdDQUFnQyxDQUFDO2dCQUM5RCxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxjQUFjLENBQUMsQ0FBQztnQkFDL0MsTUFBTTtZQUVSLEtBQUssTUFBTTtnQkFDVCxjQUFjLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQztnQkFDOUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDLENBQUM7Z0JBQy9DLE1BQU07WUFFUjtnQkFDRSxNQUFNO1NBQ1Q7SUFDSCxDQUFDOztnQkE1RkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFFBQVEsRUFBRSx3TkFLVDtpQkFFRjs7OztnQkFmTyxnQkFBZ0I7Z0JBQ2hCLFlBQVk7Ozt3Q0FpQmpCLE1BQU07Z0NBR04sS0FBSzsyQkFHTCxLQUFLO3dCQUdMLEtBQUs7bUNBR0wsS0FBSzt1Q0FHTCxLQUFLO3lDQUdMLEtBQUs7bURBR0wsS0FBSzs7SUE0RFIseUJBQUM7Q0FBQSxBQTdGRCxJQTZGQztTQW5GWSxrQkFBa0I7OztJQUU3QixtREFDMEU7O0lBRTFFLDJDQUNvQzs7SUFFcEMsc0NBQ3lCOztJQUV6QixtQ0FDcUI7O0lBRXJCLDhDQUNnQzs7SUFFaEMsa0RBQ29DOztJQUVwQyxvREFDK0M7O0lBRS9DLDhEQUN5RDs7Ozs7SUFHN0Msa0RBQThDOztJQUM5Qyx5Q0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtQYWdlc01vZGVsLCBTdXJ2ZXlDb250ZW50fSBmcm9tICcuL3BhZ2VzL3BhZ2VzLm1vZGVsJztcbmltcG9ydCB7U3VydmV5TGliU2VydmljZX0gZnJvbSAnLi9zdXJ2ZXktbGliLnNlcnZpY2UnO1xuaW1wb3J0IHtQYWdlc1NlcnZpY2V9IGZyb20gJy4vc2hhcmVkL3BhZ2VzLXNlcnZpY2VzL3BhZ2VzLnNlcnZpY2UnO1xuaW1wb3J0ICogYXMgc3VydmV5QWN0aW9ucyBmcm9tICcuL3BhZ2VzL3N0b3JlL3N1cnZleS1hY3Rpb25zJztcbmltcG9ydCB7U3VydmV5UmVzcG9uc2VzfSBmcm9tICcuL3BhZ2VzL3N1cnZleS1yZXNwb25zZS5tb2RlbCc7XG5pbXBvcnQge1llc05vfSBmcm9tICcuL3BhZ2VzL3N0b3JlL3N1cnZleS1hY3Rpb25zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnb21vdG8tc3VydmV5LWxpYicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGFwcC1wYWdlcyBbc3VydmV5Q29udGVudF09XCJzdXJ2ZXlDb250ZW50XCJcbiAgICAgICAgICAgICAgIChzdXJ2ZXlSZXNwb25zZUVtaXR0ZXIpPVwiZW1pdFJlc3BvbnNlKCRldmVudClcIlxuICAgICAgICAgICAgICAgW2lzVGVzdE1vZGVdPVwidGVzdE1vZGVcIlxuICAgICAgICAgICAgICAgW3N1cnZleVRoZW1lXT1cInRoZW1lXCI+PC9hcHAtcGFnZXM+XG4gIGAsXG4gIHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgU3VydmV5TGliQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBAT3V0cHV0KClcbiAgcHVibGljIHN1cnZleVJlc3BvbnNlRW1pdHRlcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgc3VydmV5Q29udGVudDogU3VydmV5Q29udGVudDtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgdGVzdE1vZGU6IGJvb2xlYW47XG5cbiAgQElucHV0KClcbiAgcHVibGljIHRoZW1lOiBzdHJpbmc7XG5cbiAgQElucHV0KClcbiAgcHVibGljIGN1cnJlbnRQYWdlSW5kZXg6IG51bWJlcjtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgY3VycmVudFF1ZXN0aW9uSW5kZXg6IG51bWJlcjtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgaXNRdWVzdGlvbkNhcmRDYW1wYWlnbjogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpXG4gIHB1YmxpYyByZXNwb25zZUZyb21RdWVzdGlvbkNhcmRDYW1wYWlnbjogYW55ID0gdW5kZWZpbmVkO1xuXG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzdXJ2ZXlMaWJyYXJ5U2VydmljZTogU3VydmV5TGliU2VydmljZSxcbiAgICAgICAgICAgICAgcHVibGljIHBhZ2VTZXJ2aWNlOiBQYWdlc1NlcnZpY2UpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICh0aGlzLmlzUXVlc3Rpb25DYXJkQ2FtcGFpZ24pIHtcbiAgICAgIGNvbnNvbGUubG9nKCdJbnNpZGUgcXVlc3Rpb24gY2FyZCBjYW1wYWlnbiEnKTtcbiAgICAgIGlmICh0aGlzLnN1cnZleUNvbnRlbnQucGFnZXNbMF0ucGFnZU5hbWUgPT09ICdXZWxjb21lIHBhZ2UnKSB7XG4gICAgICAgIHRoaXMuc3VydmV5Q29udGVudC5wYWdlcy5zcGxpY2UoMCwgMSk7XG4gICAgICB9XG4gICAgICB0aGlzLnN0b3JlUmVzcG9uc2VGcm9tUXVlc3Rpb25DYXJkQ2FtcGFpZ24oKTtcbiAgICAgIHRoaXMuc3VydmV5TGlicmFyeVNlcnZpY2UuaXNRdWVzdGlvbkNhcmRDYW1wYWlnbiA9IHRydWU7XG4gICAgfVxuICAgIHRoaXMuc3VydmV5TGlicmFyeVNlcnZpY2UuaW5pdGlhbGl6ZVN1cnZleVRoZW1lKHRoaXMuc3VydmV5Q29udGVudC5zZWxlY3RlZFRoZW1lKTtcbiAgfVxuXG4gIGVtaXRSZXNwb25zZShzdXJ2ZXlSZXNwb25zZTogYW55KSB7XG4gICAgdGhpcy5zdXJ2ZXlSZXNwb25zZUVtaXR0ZXIuZW1pdChzdXJ2ZXlSZXNwb25zZSk7XG4gIH1cblxuXG4gIHN0b3JlUmVzcG9uc2VGcm9tUXVlc3Rpb25DYXJkQ2FtcGFpZ24oKSB7XG4gICAgbGV0IHF1ZXN0aW9uID0gdGhpcy5zdXJ2ZXlDb250ZW50LnBhZ2VzWzBdLnF1ZXN0aW9uc1swXTtcbiAgICBsZXQgc3VydmV5UmVzcG9uc2UgPSBuZXcgU3VydmV5UmVzcG9uc2VzKCk7XG4gICAgc3VydmV5UmVzcG9uc2UucXVlc3Rpb24gPSBxdWVzdGlvbi5xdWVzdGlvbjtcbiAgICBzdXJ2ZXlSZXNwb25zZS5xdWVzdGlvblR5cGUgPSBxdWVzdGlvbi5xdWVzdGlvblR5cGU7XG4gICAgc3VydmV5UmVzcG9uc2UuaWRlbnRpZmllciA9IHF1ZXN0aW9uLmlkZW50aWZpZXI7XG4gICAgc3VydmV5UmVzcG9uc2UucXVlc3Rpb25JZCA9IHF1ZXN0aW9uLnF1ZXN0aW9uSWQ7XG5cbiAgICBzd2l0Y2ggKHF1ZXN0aW9uLnF1ZXN0aW9uVHlwZSkge1xuICAgICAgY2FzZSAnTnBzJzpcbiAgICAgIGNhc2UgJ1JhdGluZyc6XG4gICAgICAgIHN1cnZleVJlc3BvbnNlLnJhdGluZyA9IHRoaXMucmVzcG9uc2VGcm9tUXVlc3Rpb25DYXJkQ2FtcGFpZ247XG4gICAgICAgIHRoaXMucGFnZVNlcnZpY2UucGVyc2lzdFN1cnZleShzdXJ2ZXlSZXNwb25zZSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdZZXMgLyBObyc6XG4gICAgICAgIHN1cnZleVJlc3BvbnNlLmFuc3dlciA9IHRoaXMucmVzcG9uc2VGcm9tUXVlc3Rpb25DYXJkQ2FtcGFpZ247XG4gICAgICAgIHRoaXMucGFnZVNlcnZpY2UucGVyc2lzdFN1cnZleShzdXJ2ZXlSZXNwb25zZSk7XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ1N0YXRlbWVudCc6XG4gICAgICAgIHN1cnZleVJlc3BvbnNlLmFuc3dlciA9IHRoaXMucmVzcG9uc2VGcm9tUXVlc3Rpb25DYXJkQ2FtcGFpZ247XG4gICAgICAgIHRoaXMucGFnZVNlcnZpY2UucGVyc2lzdFN1cnZleShzdXJ2ZXlSZXNwb25zZSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdEYXRlJzpcbiAgICAgICAgc3VydmV5UmVzcG9uc2UuYW5zd2VyID0gdGhpcy5yZXNwb25zZUZyb21RdWVzdGlvbkNhcmRDYW1wYWlnbjtcbiAgICAgICAgdGhpcy5wYWdlU2VydmljZS5wZXJzaXN0U3VydmV5KHN1cnZleVJlc3BvbnNlKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufVxuIl19