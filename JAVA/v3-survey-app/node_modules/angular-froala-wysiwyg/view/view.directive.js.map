{"version":3,"file":"view.directive.js","sourceRoot":"","sources":["../../.tmp/view/view.directive.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAKxE;IAKE,6BAAoB,QAAmB,EAAE,OAAmB;QAAxC,aAAQ,GAAR,QAAQ,CAAW;QACrC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,aAAa,CAAC;IACxC,CAAC;IAGQ,sBAAI,2CAAU;QADvB,mCAAmC;aAC1B,UAAe,OAAe;YACrC,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,OAAO,CAAC;QACpC,CAAC;;;OAAA;IAED,6CAAe,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACnD,CAAC;IANQ;QAAR,KAAK,EAAE;;;yDAEP;IAZU,mBAAmB;QAH/B,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;SACzB,CAAC;yCAM8B,SAAS,EAAW,UAAU;OALjD,mBAAmB,CAiB/B;IAAD,0BAAC;CAAA,AAjBD,IAiBC;SAjBY,mBAAmB","sourcesContent":["import { Directive, ElementRef, Renderer2, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[froalaView]'\r\n})\r\nexport class FroalaViewDirective {\r\n\r\n  private _element: HTMLElement;\r\n  private _content: any;\r\n\r\n  constructor(private renderer: Renderer2, element: ElementRef) {\r\n    this._element = element.nativeElement;\r\n  }\r\n\r\n  // update content model as it comes\r\n  @Input() set froalaView(content: string){\r\n    this._element.innerHTML = content;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.renderer.addClass(this._element, \"fr-view\");\r\n  }\r\n}"]}