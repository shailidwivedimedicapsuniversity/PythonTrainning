import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { NgrxFormControlDirective } from './control/directive';
import { NgrxLocalFormControlDirective } from './control/local-state-directive';
import { NgrxFormDirective } from './group/directive';
import { NgrxLocalFormDirective } from './group/local-state-directive';
import { NgrxStatusCssClassesDirective } from './status-css-classes.directive';
import { NgrxCheckboxViewAdapter } from './view-adapter/checkbox';
import { NgrxDefaultViewAdapter } from './view-adapter/default';
import { NgrxNumberViewAdapter } from './view-adapter/number';
import { NgrxFallbackSelectOption } from './view-adapter/option';
import { NgrxRadioViewAdapter } from './view-adapter/radio';
import { NgrxRangeViewAdapter } from './view-adapter/range';
import { NgrxSelectOption, NgrxSelectViewAdapter } from './view-adapter/select';
import { NgrxSelectMultipleOption, NgrxSelectMultipleViewAdapter } from './view-adapter/select-multiple';
var exportsAndDeclarations = [
    NgrxFormControlDirective,
    NgrxLocalFormControlDirective,
    NgrxFormDirective,
    NgrxLocalFormDirective,
    NgrxCheckboxViewAdapter,
    NgrxDefaultViewAdapter,
    NgrxNumberViewAdapter,
    NgrxRadioViewAdapter,
    NgrxRangeViewAdapter,
    NgrxSelectMultipleOption,
    NgrxSelectMultipleViewAdapter,
    NgrxSelectOption,
    NgrxSelectViewAdapter,
    NgrxFallbackSelectOption,
    NgrxStatusCssClassesDirective,
];
var NgrxFormsModule = /** @class */ (function () {
    function NgrxFormsModule() {
    }
    NgrxFormsModule = tslib_1.__decorate([
        NgModule({
            declarations: exportsAndDeclarations,
            exports: exportsAndDeclarations,
        })
    ], NgrxFormsModule);
    return NgrxFormsModule;
}());
export { NgrxFormsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmdyeC1mb3Jtcy8iLCJzb3VyY2VzIjpbInNyYy9tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0QsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDaEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDdkUsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDL0UsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDbEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDakUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDNUQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDaEYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLDZCQUE2QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFekcsSUFBTSxzQkFBc0IsR0FBRztJQUM3Qix3QkFBd0I7SUFDeEIsNkJBQTZCO0lBQzdCLGlCQUFpQjtJQUNqQixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLHNCQUFzQjtJQUN0QixxQkFBcUI7SUFDckIsb0JBQW9CO0lBQ3BCLG9CQUFvQjtJQUNwQix3QkFBd0I7SUFDeEIsNkJBQTZCO0lBQzdCLGdCQUFnQjtJQUNoQixxQkFBcUI7SUFDckIsd0JBQXdCO0lBQ3hCLDZCQUE2QjtDQUM5QixDQUFDO0FBTUY7SUFBQTtJQUErQixDQUFDO0lBQW5CLGVBQWU7UUFKM0IsUUFBUSxDQUFDO1lBQ1IsWUFBWSxFQUFFLHNCQUFzQjtZQUNwQyxPQUFPLEVBQUUsc0JBQXNCO1NBQ2hDLENBQUM7T0FDVyxlQUFlLENBQUk7SUFBRCxzQkFBQztDQUFBLEFBQWhDLElBQWdDO1NBQW5CLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgTmdyeEZvcm1Db250cm9sRGlyZWN0aXZlIH0gZnJvbSAnLi9jb250cm9sL2RpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IE5ncnhMb2NhbEZvcm1Db250cm9sRGlyZWN0aXZlIH0gZnJvbSAnLi9jb250cm9sL2xvY2FsLXN0YXRlLWRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IE5ncnhGb3JtRGlyZWN0aXZlIH0gZnJvbSAnLi9ncm91cC9kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBOZ3J4TG9jYWxGb3JtRGlyZWN0aXZlIH0gZnJvbSAnLi9ncm91cC9sb2NhbC1zdGF0ZS1kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBOZ3J4U3RhdHVzQ3NzQ2xhc3Nlc0RpcmVjdGl2ZSB9IGZyb20gJy4vc3RhdHVzLWNzcy1jbGFzc2VzLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IE5ncnhDaGVja2JveFZpZXdBZGFwdGVyIH0gZnJvbSAnLi92aWV3LWFkYXB0ZXIvY2hlY2tib3gnO1xyXG5pbXBvcnQgeyBOZ3J4RGVmYXVsdFZpZXdBZGFwdGVyIH0gZnJvbSAnLi92aWV3LWFkYXB0ZXIvZGVmYXVsdCc7XHJcbmltcG9ydCB7IE5ncnhOdW1iZXJWaWV3QWRhcHRlciB9IGZyb20gJy4vdmlldy1hZGFwdGVyL251bWJlcic7XHJcbmltcG9ydCB7IE5ncnhGYWxsYmFja1NlbGVjdE9wdGlvbiB9IGZyb20gJy4vdmlldy1hZGFwdGVyL29wdGlvbic7XHJcbmltcG9ydCB7IE5ncnhSYWRpb1ZpZXdBZGFwdGVyIH0gZnJvbSAnLi92aWV3LWFkYXB0ZXIvcmFkaW8nO1xyXG5pbXBvcnQgeyBOZ3J4UmFuZ2VWaWV3QWRhcHRlciB9IGZyb20gJy4vdmlldy1hZGFwdGVyL3JhbmdlJztcclxuaW1wb3J0IHsgTmdyeFNlbGVjdE9wdGlvbiwgTmdyeFNlbGVjdFZpZXdBZGFwdGVyIH0gZnJvbSAnLi92aWV3LWFkYXB0ZXIvc2VsZWN0JztcclxuaW1wb3J0IHsgTmdyeFNlbGVjdE11bHRpcGxlT3B0aW9uLCBOZ3J4U2VsZWN0TXVsdGlwbGVWaWV3QWRhcHRlciB9IGZyb20gJy4vdmlldy1hZGFwdGVyL3NlbGVjdC1tdWx0aXBsZSc7XHJcblxyXG5jb25zdCBleHBvcnRzQW5kRGVjbGFyYXRpb25zID0gW1xyXG4gIE5ncnhGb3JtQ29udHJvbERpcmVjdGl2ZSxcclxuICBOZ3J4TG9jYWxGb3JtQ29udHJvbERpcmVjdGl2ZSxcclxuICBOZ3J4Rm9ybURpcmVjdGl2ZSxcclxuICBOZ3J4TG9jYWxGb3JtRGlyZWN0aXZlLFxyXG4gIE5ncnhDaGVja2JveFZpZXdBZGFwdGVyLFxyXG4gIE5ncnhEZWZhdWx0Vmlld0FkYXB0ZXIsXHJcbiAgTmdyeE51bWJlclZpZXdBZGFwdGVyLFxyXG4gIE5ncnhSYWRpb1ZpZXdBZGFwdGVyLFxyXG4gIE5ncnhSYW5nZVZpZXdBZGFwdGVyLFxyXG4gIE5ncnhTZWxlY3RNdWx0aXBsZU9wdGlvbixcclxuICBOZ3J4U2VsZWN0TXVsdGlwbGVWaWV3QWRhcHRlcixcclxuICBOZ3J4U2VsZWN0T3B0aW9uLFxyXG4gIE5ncnhTZWxlY3RWaWV3QWRhcHRlcixcclxuICBOZ3J4RmFsbGJhY2tTZWxlY3RPcHRpb24sXHJcbiAgTmdyeFN0YXR1c0Nzc0NsYXNzZXNEaXJlY3RpdmUsXHJcbl07XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogZXhwb3J0c0FuZERlY2xhcmF0aW9ucyxcclxuICBleHBvcnRzOiBleHBvcnRzQW5kRGVjbGFyYXRpb25zLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmdyeEZvcm1zTW9kdWxlIHsgfVxyXG4iXX0=