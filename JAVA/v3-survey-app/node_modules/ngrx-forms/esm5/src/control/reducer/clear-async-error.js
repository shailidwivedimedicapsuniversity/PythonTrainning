import * as tslib_1 from "tslib";
import { ClearAsyncErrorAction } from '../../actions';
import { isEmpty } from '../../util';
export function clearAsyncErrorReducer(state, action) {
    if (action.type !== ClearAsyncErrorAction.TYPE) {
        return state;
    }
    var name = "$" + action.name;
    var errors = state.errors;
    if (errors.hasOwnProperty(name)) {
        errors = tslib_1.__assign({}, state.errors);
        delete errors[name];
    }
    var pendingValidations = state.pendingValidations.filter(function (v) { return v !== action.name; });
    var isValid = isEmpty(errors);
    if (errors === state.errors && isValid === state.isValid && pendingValidations.length === state.pendingValidations.length) {
        return state;
    }
    return tslib_1.__assign({}, state, { isValid: isValid, isInvalid: !isValid, errors: errors,
        pendingValidations: pendingValidations, isValidationPending: pendingValidations.length > 0 });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xlYXItYXN5bmMtZXJyb3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3J4LWZvcm1zLyIsInNvdXJjZXMiOlsic3JjL2NvbnRyb2wvcmVkdWNlci9jbGVhci1hc3luYy1lcnJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFXLHFCQUFxQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRS9ELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFckMsTUFBTSxVQUFVLHNCQUFzQixDQUNwQyxLQUErQixFQUMvQixNQUF1QjtJQUV2QixJQUFJLE1BQU0sQ0FBQyxJQUFJLEtBQUsscUJBQXFCLENBQUMsSUFBSSxFQUFFO1FBQzlDLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCxJQUFNLElBQUksR0FBRyxNQUFJLE1BQU0sQ0FBQyxJQUFNLENBQUM7SUFFL0IsSUFBSSxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUUxQixJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDL0IsTUFBTSx3QkFBUSxLQUFLLENBQUMsTUFBTSxDQUFFLENBQUM7UUFDN0IsT0FBUSxNQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7SUFFRCxJQUFNLGtCQUFrQixHQUFHLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLEtBQUssTUFBTSxDQUFDLElBQUksRUFBakIsQ0FBaUIsQ0FBQyxDQUFDO0lBQ25GLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUVoQyxJQUFJLE1BQU0sS0FBSyxLQUFLLENBQUMsTUFBTSxJQUFJLE9BQU8sS0FBSyxLQUFLLENBQUMsT0FBTyxJQUFJLGtCQUFrQixDQUFDLE1BQU0sS0FBSyxLQUFLLENBQUMsa0JBQWtCLENBQUMsTUFBTSxFQUFFO1FBQ3pILE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCw0QkFDSyxLQUFLLElBQ1IsT0FBTyxTQUFBLEVBQ1AsU0FBUyxFQUFFLENBQUMsT0FBTyxFQUNuQixNQUFNLFFBQUE7UUFDTixrQkFBa0Isb0JBQUEsRUFDbEIsbUJBQW1CLEVBQUUsa0JBQWtCLENBQUMsTUFBTSxHQUFHLENBQUMsSUFDbEQ7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9ucywgQ2xlYXJBc3luY0Vycm9yQWN0aW9uIH0gZnJvbSAnLi4vLi4vYWN0aW9ucyc7XHJcbmltcG9ydCB7IEZvcm1Db250cm9sU3RhdGUsIEZvcm1Db250cm9sVmFsdWVUeXBlcyB9IGZyb20gJy4uLy4uL3N0YXRlJztcclxuaW1wb3J0IHsgaXNFbXB0eSB9IGZyb20gJy4uLy4uL3V0aWwnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQXN5bmNFcnJvclJlZHVjZXI8VFZhbHVlIGV4dGVuZHMgRm9ybUNvbnRyb2xWYWx1ZVR5cGVzPihcclxuICBzdGF0ZTogRm9ybUNvbnRyb2xTdGF0ZTxUVmFsdWU+LFxyXG4gIGFjdGlvbjogQWN0aW9uczxUVmFsdWU+LFxyXG4pOiBGb3JtQ29udHJvbFN0YXRlPFRWYWx1ZT4ge1xyXG4gIGlmIChhY3Rpb24udHlwZSAhPT0gQ2xlYXJBc3luY0Vycm9yQWN0aW9uLlRZUEUpIHtcclxuICAgIHJldHVybiBzdGF0ZTtcclxuICB9XHJcblxyXG4gIGNvbnN0IG5hbWUgPSBgJCR7YWN0aW9uLm5hbWV9YDtcclxuXHJcbiAgbGV0IGVycm9ycyA9IHN0YXRlLmVycm9ycztcclxuXHJcbiAgaWYgKGVycm9ycy5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xyXG4gICAgZXJyb3JzID0geyAuLi5zdGF0ZS5lcnJvcnMgfTtcclxuICAgIGRlbGV0ZSAoZXJyb3JzIGFzIGFueSlbbmFtZV07XHJcbiAgfVxyXG5cclxuICBjb25zdCBwZW5kaW5nVmFsaWRhdGlvbnMgPSBzdGF0ZS5wZW5kaW5nVmFsaWRhdGlvbnMuZmlsdGVyKHYgPT4gdiAhPT0gYWN0aW9uLm5hbWUpO1xyXG4gIGNvbnN0IGlzVmFsaWQgPSBpc0VtcHR5KGVycm9ycyk7XHJcblxyXG4gIGlmIChlcnJvcnMgPT09IHN0YXRlLmVycm9ycyAmJiBpc1ZhbGlkID09PSBzdGF0ZS5pc1ZhbGlkICYmIHBlbmRpbmdWYWxpZGF0aW9ucy5sZW5ndGggPT09IHN0YXRlLnBlbmRpbmdWYWxpZGF0aW9ucy5sZW5ndGgpIHtcclxuICAgIHJldHVybiBzdGF0ZTtcclxuICB9XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICAuLi5zdGF0ZSxcclxuICAgIGlzVmFsaWQsXHJcbiAgICBpc0ludmFsaWQ6ICFpc1ZhbGlkLFxyXG4gICAgZXJyb3JzLFxyXG4gICAgcGVuZGluZ1ZhbGlkYXRpb25zLFxyXG4gICAgaXNWYWxpZGF0aW9uUGVuZGluZzogcGVuZGluZ1ZhbGlkYXRpb25zLmxlbmd0aCA+IDAsXHJcbiAgfTtcclxufVxyXG4iXX0=