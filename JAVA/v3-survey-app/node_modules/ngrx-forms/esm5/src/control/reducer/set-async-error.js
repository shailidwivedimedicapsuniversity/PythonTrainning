import * as tslib_1 from "tslib";
import { SetAsyncErrorAction } from '../../actions';
import { deepEquals } from '../../util';
export function setAsyncErrorReducer(state, action) {
    var _a;
    if (action.type !== SetAsyncErrorAction.TYPE) {
        return state;
    }
    if (state.isDisabled) {
        return state;
    }
    var name = "$" + action.name;
    var value = action.value;
    if (deepEquals(state.errors[name], action.value)) {
        value = state.errors[name];
    }
    var errors = tslib_1.__assign({}, state.errors, (_a = {}, _a[name] = value, _a));
    var pendingValidations = state.pendingValidations.filter(function (v) { return v !== action.name; });
    return tslib_1.__assign({}, state, { isValid: false, isInvalid: true, errors: errors,
        pendingValidations: pendingValidations, isValidationPending: pendingValidations.length > 0 });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LWFzeW5jLWVycm9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmdyeC1mb3Jtcy8iLCJzb3VyY2VzIjpbInNyYy9jb250cm9sL3JlZHVjZXIvc2V0LWFzeW5jLWVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQVcsbUJBQW1CLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFN0QsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUV4QyxNQUFNLFVBQVUsb0JBQW9CLENBQ2xDLEtBQStCLEVBQy9CLE1BQXVCOztJQUV2QixJQUFJLE1BQU0sQ0FBQyxJQUFJLEtBQUssbUJBQW1CLENBQUMsSUFBSSxFQUFFO1FBQzVDLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCxJQUFJLEtBQUssQ0FBQyxVQUFVLEVBQUU7UUFDcEIsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUVELElBQU0sSUFBSSxHQUFHLE1BQUksTUFBTSxDQUFDLElBQU0sQ0FBQztJQUMvQixJQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBRXpCLElBQUksVUFBVSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ2hELEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzVCO0lBRUQsSUFBTSxNQUFNLHdCQUFRLEtBQUssQ0FBQyxNQUFNLGVBQUcsSUFBSSxJQUFHLEtBQUssTUFBRSxDQUFDO0lBQ2xELElBQU0sa0JBQWtCLEdBQUcsS0FBSyxDQUFDLGtCQUFrQixDQUFDLE1BQU0sQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsS0FBSyxNQUFNLENBQUMsSUFBSSxFQUFqQixDQUFpQixDQUFDLENBQUM7SUFFbkYsNEJBQ0ssS0FBSyxJQUNSLE9BQU8sRUFBRSxLQUFLLEVBQ2QsU0FBUyxFQUFFLElBQUksRUFDZixNQUFNLFFBQUE7UUFDTixrQkFBa0Isb0JBQUEsRUFDbEIsbUJBQW1CLEVBQUUsa0JBQWtCLENBQUMsTUFBTSxHQUFHLENBQUMsSUFDbEQ7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWN0aW9ucywgU2V0QXN5bmNFcnJvckFjdGlvbiB9IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xyXG5pbXBvcnQgeyBGb3JtQ29udHJvbFN0YXRlLCBGb3JtQ29udHJvbFZhbHVlVHlwZXMgfSBmcm9tICcuLi8uLi9zdGF0ZSc7XHJcbmltcG9ydCB7IGRlZXBFcXVhbHMgfSBmcm9tICcuLi8uLi91dGlsJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRBc3luY0Vycm9yUmVkdWNlcjxUVmFsdWUgZXh0ZW5kcyBGb3JtQ29udHJvbFZhbHVlVHlwZXM+KFxyXG4gIHN0YXRlOiBGb3JtQ29udHJvbFN0YXRlPFRWYWx1ZT4sXHJcbiAgYWN0aW9uOiBBY3Rpb25zPFRWYWx1ZT4sXHJcbik6IEZvcm1Db250cm9sU3RhdGU8VFZhbHVlPiB7XHJcbiAgaWYgKGFjdGlvbi50eXBlICE9PSBTZXRBc3luY0Vycm9yQWN0aW9uLlRZUEUpIHtcclxuICAgIHJldHVybiBzdGF0ZTtcclxuICB9XHJcblxyXG4gIGlmIChzdGF0ZS5pc0Rpc2FibGVkKSB7XHJcbiAgICByZXR1cm4gc3RhdGU7XHJcbiAgfVxyXG5cclxuICBjb25zdCBuYW1lID0gYCQke2FjdGlvbi5uYW1lfWA7XHJcbiAgbGV0IHZhbHVlID0gYWN0aW9uLnZhbHVlO1xyXG5cclxuICBpZiAoZGVlcEVxdWFscyhzdGF0ZS5lcnJvcnNbbmFtZV0sIGFjdGlvbi52YWx1ZSkpIHtcclxuICAgIHZhbHVlID0gc3RhdGUuZXJyb3JzW25hbWVdO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgZXJyb3JzID0geyAuLi5zdGF0ZS5lcnJvcnMsIFtuYW1lXTogdmFsdWUgfTtcclxuICBjb25zdCBwZW5kaW5nVmFsaWRhdGlvbnMgPSBzdGF0ZS5wZW5kaW5nVmFsaWRhdGlvbnMuZmlsdGVyKHYgPT4gdiAhPT0gYWN0aW9uLm5hbWUpO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgLi4uc3RhdGUsXHJcbiAgICBpc1ZhbGlkOiBmYWxzZSxcclxuICAgIGlzSW52YWxpZDogdHJ1ZSxcclxuICAgIGVycm9ycyxcclxuICAgIHBlbmRpbmdWYWxpZGF0aW9ucyxcclxuICAgIGlzVmFsaWRhdGlvblBlbmRpbmc6IHBlbmRpbmdWYWxpZGF0aW9ucy5sZW5ndGggPiAwLFxyXG4gIH07XHJcbn1cclxuIl19