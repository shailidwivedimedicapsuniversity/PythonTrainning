import * as tslib_1 from "tslib";
import { AddArrayControlAction } from '../../actions';
import { computeArrayState, createChildState } from '../../state';
import { childReducer, updateIdRecursive } from './util';
export function addControlReducer(state, action) {
    if (action.type !== AddArrayControlAction.TYPE) {
        return state;
    }
    if (action.controlId !== state.id) {
        return childReducer(state, action);
    }
    var index = action.index === undefined ? state.controls.length : action.index;
    if (index > state.controls.length || index < 0) {
        throw new Error("Index " + index + " is out of bounds for array '" + state.id + "' with length " + state.controls.length + "!");
    }
    var controls = tslib_1.__spread(state.controls);
    controls.splice(index, 0, createChildState(state.id + "." + index, action.value));
    controls = controls.map(function (c, i) { return updateIdRecursive(c, state.id + "." + i); });
    return computeArrayState(state.id, controls, state.value, state.errors, state.pendingValidations, state.userDefinedProperties, {
        wasOrShouldBeDirty: true,
        wasOrShouldBeEnabled: state.isEnabled,
        wasOrShouldBeTouched: state.isTouched,
        wasOrShouldBeSubmitted: state.isSubmitted,
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLWNvbnRyb2wuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3J4LWZvcm1zLyIsInNvdXJjZXMiOlsic3JjL2FycmF5L3JlZHVjZXIvYWRkLWNvbnRyb2wudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBVyxxQkFBcUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsZ0JBQWdCLEVBQTZCLE1BQU0sYUFBYSxDQUFDO0FBQzdGLE9BQU8sRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFekQsTUFBTSxVQUFVLGlCQUFpQixDQUMvQixLQUE2QixFQUM3QixNQUF5QjtJQUV6QixJQUFJLE1BQU0sQ0FBQyxJQUFJLEtBQUsscUJBQXFCLENBQUMsSUFBSSxFQUFFO1FBQzlDLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLEtBQUssS0FBSyxDQUFDLEVBQUUsRUFBRTtRQUNqQyxPQUFPLFlBQVksQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7S0FDcEM7SUFFRCxJQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFFaEYsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRTtRQUM5QyxNQUFNLElBQUksS0FBSyxDQUFDLFdBQVMsS0FBSyxxQ0FBZ0MsS0FBSyxDQUFDLEVBQUUsc0JBQWlCLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxNQUFHLENBQUMsQ0FBQztLQUNsSDtJQUVELElBQUksUUFBUSxvQkFBTyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbkMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLGdCQUFnQixDQUFJLEtBQUssQ0FBQyxFQUFFLFNBQUksS0FBTyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQXNCLENBQUMsQ0FBQztJQUN2RyxRQUFRLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDLElBQUssT0FBQSxpQkFBaUIsQ0FBQyxDQUFDLEVBQUssS0FBSyxDQUFDLEVBQUUsU0FBSSxDQUFHLENBQUMsRUFBeEMsQ0FBd0MsQ0FBQyxDQUFDO0lBRTVFLE9BQU8saUJBQWlCLENBQ3RCLEtBQUssQ0FBQyxFQUFFLEVBQ1IsUUFBUSxFQUNSLEtBQUssQ0FBQyxLQUFLLEVBQ1gsS0FBSyxDQUFDLE1BQU0sRUFDWixLQUFLLENBQUMsa0JBQWtCLEVBQ3hCLEtBQUssQ0FBQyxxQkFBcUIsRUFDM0I7UUFDRSxrQkFBa0IsRUFBRSxJQUFJO1FBQ3hCLG9CQUFvQixFQUFFLEtBQUssQ0FBQyxTQUFTO1FBQ3JDLG9CQUFvQixFQUFFLEtBQUssQ0FBQyxTQUFTO1FBQ3JDLHNCQUFzQixFQUFFLEtBQUssQ0FBQyxXQUFXO0tBQzFDLENBQ0YsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBY3Rpb25zLCBBZGRBcnJheUNvbnRyb2xBY3Rpb24gfSBmcm9tICcuLi8uLi9hY3Rpb25zJztcclxuaW1wb3J0IHsgY29tcHV0ZUFycmF5U3RhdGUsIGNyZWF0ZUNoaWxkU3RhdGUsIEZvcm1BcnJheVN0YXRlLCBGb3JtU3RhdGUgfSBmcm9tICcuLi8uLi9zdGF0ZSc7XHJcbmltcG9ydCB7IGNoaWxkUmVkdWNlciwgdXBkYXRlSWRSZWN1cnNpdmUgfSBmcm9tICcuL3V0aWwnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGFkZENvbnRyb2xSZWR1Y2VyPFRWYWx1ZT4oXHJcbiAgc3RhdGU6IEZvcm1BcnJheVN0YXRlPFRWYWx1ZT4sXHJcbiAgYWN0aW9uOiBBY3Rpb25zPFRWYWx1ZVtdPixcclxuKTogRm9ybUFycmF5U3RhdGU8VFZhbHVlPiB7XHJcbiAgaWYgKGFjdGlvbi50eXBlICE9PSBBZGRBcnJheUNvbnRyb2xBY3Rpb24uVFlQRSkge1xyXG4gICAgcmV0dXJuIHN0YXRlO1xyXG4gIH1cclxuXHJcbiAgaWYgKGFjdGlvbi5jb250cm9sSWQgIT09IHN0YXRlLmlkKSB7XHJcbiAgICByZXR1cm4gY2hpbGRSZWR1Y2VyKHN0YXRlLCBhY3Rpb24pO1xyXG4gIH1cclxuXHJcbiAgY29uc3QgaW5kZXggPSBhY3Rpb24uaW5kZXggPT09IHVuZGVmaW5lZCA/IHN0YXRlLmNvbnRyb2xzLmxlbmd0aCA6IGFjdGlvbi5pbmRleDtcclxuXHJcbiAgaWYgKGluZGV4ID4gc3RhdGUuY29udHJvbHMubGVuZ3RoIHx8IGluZGV4IDwgMCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbmRleCAke2luZGV4fSBpcyBvdXQgb2YgYm91bmRzIGZvciBhcnJheSAnJHtzdGF0ZS5pZH0nIHdpdGggbGVuZ3RoICR7c3RhdGUuY29udHJvbHMubGVuZ3RofSFgKTtcclxuICB9XHJcblxyXG4gIGxldCBjb250cm9scyA9IFsuLi5zdGF0ZS5jb250cm9sc107XHJcbiAgY29udHJvbHMuc3BsaWNlKGluZGV4LCAwLCBjcmVhdGVDaGlsZFN0YXRlKGAke3N0YXRlLmlkfS4ke2luZGV4fWAsIGFjdGlvbi52YWx1ZSkgYXMgRm9ybVN0YXRlPFRWYWx1ZT4pO1xyXG4gIGNvbnRyb2xzID0gY29udHJvbHMubWFwKChjLCBpKSA9PiB1cGRhdGVJZFJlY3Vyc2l2ZShjLCBgJHtzdGF0ZS5pZH0uJHtpfWApKTtcclxuXHJcbiAgcmV0dXJuIGNvbXB1dGVBcnJheVN0YXRlKFxyXG4gICAgc3RhdGUuaWQsXHJcbiAgICBjb250cm9scyxcclxuICAgIHN0YXRlLnZhbHVlLFxyXG4gICAgc3RhdGUuZXJyb3JzLFxyXG4gICAgc3RhdGUucGVuZGluZ1ZhbGlkYXRpb25zLFxyXG4gICAgc3RhdGUudXNlckRlZmluZWRQcm9wZXJ0aWVzLFxyXG4gICAge1xyXG4gICAgICB3YXNPclNob3VsZEJlRGlydHk6IHRydWUsXHJcbiAgICAgIHdhc09yU2hvdWxkQmVFbmFibGVkOiBzdGF0ZS5pc0VuYWJsZWQsXHJcbiAgICAgIHdhc09yU2hvdWxkQmVUb3VjaGVkOiBzdGF0ZS5pc1RvdWNoZWQsXHJcbiAgICAgIHdhc09yU2hvdWxkQmVTdWJtaXR0ZWQ6IHN0YXRlLmlzU3VibWl0dGVkLFxyXG4gICAgfSxcclxuICApO1xyXG59XHJcbiJdfQ==