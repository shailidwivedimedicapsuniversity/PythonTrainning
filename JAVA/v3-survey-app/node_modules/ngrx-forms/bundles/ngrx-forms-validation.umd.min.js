!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("ngrx-forms")):"function"==typeof define&&define.amd?define("ngrx-forms/validation",["exports","ngrx-forms"],e):e(((n=n||self)["ngrx-forms"]=n["ngrx-forms"]||{},n["ngrx-forms"].validation={}),n["ngrx-forms"])}(this,function(n,e){"use strict";var r=/^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;n.email=function(n){return null===(n=e.unbox(n))||n===undefined||0===n.length?{}:r.test(n)?{}:{email:{pattern:r.toString(),actual:n}}},n.equalTo=function(n){return function(r){return(r=e.unbox(r))===n?{}:{equalTo:{comparand:n,actual:r}}}},n.greaterThan=function(n){if(null===n||n===undefined)throw new Error("The greaterThan Validation function requires the comparand parameter to be a non-null number, got "+n+"!");return function(r){return null===(r=e.unbox(r))||r===undefined?{}:r>n?{}:{greaterThan:{comparand:n,actual:r}}}},n.greaterThanOrEqualTo=function(n){if(null===n||n===undefined)throw new Error("The greaterThanOrEqualTo Validation function requires the comparand parameter to be a non-null number, got "+n+"!");return function(r){return null===(r=e.unbox(r))||r===undefined?{}:r>=n?{}:{greaterThanOrEqualTo:{comparand:n,actual:r}}}},n.lessThan=function(n){if(null===n||n===undefined)throw new Error("The lessThan Validation function requires the comparand parameter to be a non-null number, got "+n+"!");return function(r){return null===(r=e.unbox(r))||r===undefined?{}:r<n?{}:{lessThan:{comparand:n,actual:r}}}},n.lessThanOrEqualTo=function(n){if(null===n||n===undefined)throw new Error("The lessThanOrEqualTo Validation function requires the comparand parameter to be a non-null number, got "+n+"!");return function(r){return null===(r=e.unbox(r))||r===undefined?{}:r<=n?{}:{lessThanOrEqualTo:{comparand:n,actual:r}}}},n.maxLength=function(n){if(null===n||n===undefined)throw new Error("The maxLength Validation function requires the maxLength parameter to be a non-null number, got "+n+"!");return function(r){if(null===(r=e.unbox(r))||r===undefined)return{};var t=r.length;return t<=n?{}:{maxLength:{maxLength:n,value:r,actualLength:t}}}},n.minLength=function(n){if(null===n||n===undefined)throw new Error("The minLength Validation function requires the minLength parameter to be a non-null number, got "+n+"!");return function(r){if(null===(r=e.unbox(r))||r===undefined)return{};var t=r.length;return 0===t?{}:t>=n?{}:{minLength:{minLength:n,value:r,actualLength:t}}}},n.notEqualTo=function(n){return function(r){return(r=e.unbox(r))!==n?{}:{notEqualTo:{comparand:n,actual:r}}}},n.pattern=function(n){if(null===n||n===undefined)throw new Error("The pattern Validation function requires the pattern parameter to be a non-null string or regular expression, got "+n+"!");return function(r){return null===(r=e.unbox(r))||r===undefined||0===r.length?{}:n.test(r)?{}:{pattern:{pattern:n.toString(),actual:r}}}},n.required=function(n){return(n=e.unbox(n))!==undefined&&null!==n&&0!==n.length?{}:{required:{actual:n}}},n.requiredFalse=function(n){return null===(n=e.unbox(n))||n===undefined?{}:n?{required:{actual:n}}:{}},n.requiredTrue=function(n){return null===(n=e.unbox(n))||n===undefined?{}:n?{}:{required:{actual:n}}},Object.defineProperty(n,"__esModule",{value:!0})});
//# sourceMappingURL=ngrx-forms-validation.umd.min.js.map