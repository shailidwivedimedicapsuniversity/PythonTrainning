{"version":3,"file":"ngrx-forms.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ng://ngrx-forms/src/actions.ts","ng://ngrx-forms/src/boxing.ts","ng://ngrx-forms/src/util.ts","ng://ngrx-forms/src/state.ts","ng://ngrx-forms/src/control/reducer/clear-async-error.ts","ng://ngrx-forms/src/control/reducer/disable.ts","ng://ngrx-forms/src/control/reducer/enable.ts","ng://ngrx-forms/src/control/reducer/focus.ts","ng://ngrx-forms/src/control/reducer/mark-as-dirty.ts","ng://ngrx-forms/src/control/reducer/mark-as-pristine.ts","ng://ngrx-forms/src/control/reducer/mark-as-submitted.ts","ng://ngrx-forms/src/control/reducer/mark-as-touched.ts","ng://ngrx-forms/src/control/reducer/mark-as-unsubmitted.ts","ng://ngrx-forms/src/control/reducer/mark-as-untouched.ts","ng://ngrx-forms/src/control/reducer/reset.ts","ng://ngrx-forms/src/control/reducer/set-async-error.ts","ng://ngrx-forms/src/control/reducer/set-errors.ts","ng://ngrx-forms/src/control/reducer/set-user-defined-property.ts","ng://ngrx-forms/src/control/reducer/set-value.ts","ng://ngrx-forms/src/control/reducer/start-async-validation.ts","ng://ngrx-forms/src/control/reducer/unfocus.ts","ng://ngrx-forms/src/control/reducer.ts","ng://ngrx-forms/src/array/reducer/util.ts","ng://ngrx-forms/src/array/reducer/add-control.ts","ng://ngrx-forms/src/array/reducer/clear-async-error.ts","ng://ngrx-forms/src/array/reducer/disable.ts","ng://ngrx-forms/src/array/reducer/enable.ts","ng://ngrx-forms/src/array/reducer/mark-as-dirty.ts","ng://ngrx-forms/src/array/reducer/mark-as-pristine.ts","ng://ngrx-forms/src/array/reducer/mark-as-submitted.ts","ng://ngrx-forms/src/array/reducer/mark-as-touched.ts","ng://ngrx-forms/src/array/reducer/mark-as-unsubmitted.ts","ng://ngrx-forms/src/array/reducer/mark-as-untouched.ts","ng://ngrx-forms/src/array/reducer/move-control.ts","ng://ngrx-forms/src/array/reducer/remove-control.ts","ng://ngrx-forms/src/array/reducer/reset.ts","ng://ngrx-forms/src/array/reducer/set-async-error.ts","ng://ngrx-forms/src/array/reducer/set-errors.ts","ng://ngrx-forms/src/array/reducer/set-user-defined-property.ts","ng://ngrx-forms/src/array/reducer/set-value.ts","ng://ngrx-forms/src/array/reducer/start-async-validation.ts","ng://ngrx-forms/src/array/reducer/swap-control.ts","ng://ngrx-forms/src/array/reducer.ts","ng://ngrx-forms/src/reducer.ts","ng://ngrx-forms/src/group/reducer/util.ts","ng://ngrx-forms/src/group/reducer/add-control.ts","ng://ngrx-forms/src/group/reducer/clear-async-error.ts","ng://ngrx-forms/src/group/reducer/disable.ts","ng://ngrx-forms/src/group/reducer/enable.ts","ng://ngrx-forms/src/group/reducer/mark-as-dirty.ts","ng://ngrx-forms/src/group/reducer/mark-as-pristine.ts","ng://ngrx-forms/src/group/reducer/mark-as-submitted.ts","ng://ngrx-forms/src/group/reducer/mark-as-touched.ts","ng://ngrx-forms/src/group/reducer/mark-as-unsubmitted.ts","ng://ngrx-forms/src/group/reducer/mark-as-untouched.ts","ng://ngrx-forms/src/group/reducer/remove-control.ts","ng://ngrx-forms/src/group/reducer/reset.ts","ng://ngrx-forms/src/group/reducer/set-async-error.ts","ng://ngrx-forms/src/group/reducer/set-errors.ts","ng://ngrx-forms/src/group/reducer/set-user-defined-property.ts","ng://ngrx-forms/src/group/reducer/set-value.ts","ng://ngrx-forms/src/group/reducer/start-async-validation.ts","ng://ngrx-forms/src/group/reducer.ts","ng://ngrx-forms/src/update-function/util.ts","ng://ngrx-forms/src/update-function/update-array.ts","ng://ngrx-forms/src/update-function/update-group.ts","ng://ngrx-forms/src/update-function/update-recursive.ts","ng://ngrx-forms/src/update-function/set-value.ts","ng://ngrx-forms/src/update-function/set-errors.ts","ng://ngrx-forms/src/update-function/validate.ts","ng://ngrx-forms/src/update-function/enable.ts","ng://ngrx-forms/src/update-function/disable.ts","ng://ngrx-forms/src/update-function/mark-as-dirty.ts","ng://ngrx-forms/src/update-function/mark-as-pristine.ts","ng://ngrx-forms/src/update-function/mark-as-touched.ts","ng://ngrx-forms/src/update-function/mark-as-untouched.ts","ng://ngrx-forms/src/update-function/mark-as-submitted.ts","ng://ngrx-forms/src/update-function/mark-as-unsubmitted.ts","ng://ngrx-forms/src/update-function/focus.ts","ng://ngrx-forms/src/update-function/unfocus.ts","ng://ngrx-forms/src/update-function/add-array-control.ts","ng://ngrx-forms/src/update-function/add-group-control.ts","ng://ngrx-forms/src/update-function/remove-array-control.ts","ng://ngrx-forms/src/update-function/remove-group-control.ts","ng://ngrx-forms/src/update-function/set-user-defined-property.ts","ng://ngrx-forms/src/update-function/reset.ts","ng://ngrx-forms/src/update-function/start-async-validation.ts","ng://ngrx-forms/src/update-function/set-async-error.ts","ng://ngrx-forms/src/update-function/clear-async-error.ts","ng://ngrx-forms/src/view-adapter/view-adapter.ts","ng://ngrx-forms/src/view-adapter/checkbox.ts","ng://ngrx-forms/src/view-adapter/default.ts","ng://ngrx-forms/src/view-adapter/number.ts","ng://ngrx-forms/src/view-adapter/select.ts","ng://ngrx-forms/src/view-adapter/select-multiple.ts","ng://ngrx-forms/src/view-adapter/option.ts","ng://ngrx-forms/src/view-adapter/radio.ts","ng://ngrx-forms/src/view-adapter/range.ts","ng://ngrx-forms/src/view-adapter/util.ts","ng://ngrx-forms/src/control/value-converter.ts","ng://ngrx-forms/src/control/directive.ts","ng://ngrx-forms/src/control/local-state-directive.ts","ng://ngrx-forms/src/group/directive.ts","ng://ngrx-forms/src/group/local-state-directive.ts","ng://ngrx-forms/src/status-css-classes.directive.ts","ng://ngrx-forms/src/module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { KeyValue, NgrxFormControlId, ValidationErrors } from './state';\r\n\r\n// NOTE: the explicit type declaration for the `TYPE` properties is required\r\n// for the output declarations to properly use the literal string type instead\r\n// of just `string`\r\n\r\nexport class SetValueAction<TValue> implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SET_VALUE' = 'ngrx/forms/SET_VALUE';\r\n  readonly type = SetValueAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly value: TValue,\r\n  ) { }\r\n}\r\n\r\nexport class SetErrorsAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SET_ERRORS' = 'ngrx/forms/SET_ERRORS';\r\n  readonly type = SetErrorsAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly errors: ValidationErrors,\r\n  ) { }\r\n}\r\n\r\nexport class SetAsyncErrorAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SET_ASYNC_ERROR' = 'ngrx/forms/SET_ASYNC_ERROR';\r\n  readonly type = SetAsyncErrorAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: string,\r\n    public readonly value: any,\r\n  ) { }\r\n}\r\n\r\nexport class ClearAsyncErrorAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/CLEAR_ASYNC_ERROR' = 'ngrx/forms/CLEAR_ASYNC_ERROR';\r\n  readonly type = ClearAsyncErrorAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: string,\r\n  ) { }\r\n}\r\n\r\nexport class StartAsyncValidationAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/START_ASYNC_VALIDATION' = 'ngrx/forms/START_ASYNC_VALIDATION';\r\n  readonly type = StartAsyncValidationAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: string,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsDirtyAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_DIRTY' = 'ngrx/forms/MARK_AS_DIRTY';\r\n  readonly type = MarkAsDirtyAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsPristineAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_PRISTINE' = 'ngrx/forms/MARK_AS_PRISTINE';\r\n  readonly type = MarkAsPristineAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class EnableAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/ENABLE' = 'ngrx/forms/ENABLE';\r\n  readonly type = EnableAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class DisableAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/DISABLE' = 'ngrx/forms/DISABLE';\r\n  readonly type = DisableAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsTouchedAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_TOUCHED' = 'ngrx/forms/MARK_AS_TOUCHED';\r\n  readonly type = MarkAsTouchedAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsUntouchedAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_UNTOUCHED' = 'ngrx/forms/MARK_AS_UNTOUCHED';\r\n  readonly type = MarkAsUntouchedAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class FocusAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/FOCUS' = 'ngrx/forms/FOCUS';\r\n  readonly type = FocusAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class UnfocusAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/UNFOCUS' = 'ngrx/forms/UNFOCUS';\r\n  readonly type = UnfocusAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsSubmittedAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_SUBMITTED' = 'ngrx/forms/MARK_AS_SUBMITTED';\r\n  readonly type = MarkAsSubmittedAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class MarkAsUnsubmittedAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MARK_AS_UNSUBMITTED' = 'ngrx/forms/MARK_AS_UNSUBMITTED';\r\n  readonly type = MarkAsUnsubmittedAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport class AddArrayControlAction<TValue> implements Action {\r\n  static readonly TYPE: 'ngrx/forms/ADD_ARRAY_CONTROL' = 'ngrx/forms/ADD_ARRAY_CONTROL';\r\n  readonly type = AddArrayControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly value: TValue,\r\n    public readonly index?: number,\r\n  ) { }\r\n}\r\n\r\nexport class AddGroupControlAction<TValue extends KeyValue, TControlKey extends keyof TValue = keyof TValue> implements Action {\r\n  static readonly TYPE: 'ngrx/forms/ADD_GROUP_CONTROL' = 'ngrx/forms/ADD_GROUP_CONTROL';\r\n  readonly type = AddGroupControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: keyof TValue,\r\n    public readonly value: TValue[TControlKey],\r\n  ) { }\r\n}\r\n\r\nexport class RemoveArrayControlAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/REMOVE_ARRAY_CONTROL' = 'ngrx/forms/REMOVE_ARRAY_CONTROL';\r\n  readonly type = RemoveArrayControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly index: number,\r\n  ) { }\r\n}\r\n\r\nexport class SwapArrayControlAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SWAP_ARRAY_CONTROL' = 'ngrx/forms/SWAP_ARRAY_CONTROL';\r\n  readonly type = SwapArrayControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly fromIndex: number,\r\n    public readonly toIndex: number\r\n  ) { }\r\n}\r\n\r\nexport class MoveArrayControlAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/MOVE_ARRAY_CONTROL' = 'ngrx/forms/MOVE_ARRAY_CONTROL';\r\n  readonly type = MoveArrayControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly fromIndex: number,\r\n    public readonly toIndex: number\r\n  ) { }\r\n}\r\n\r\nexport class RemoveGroupControlAction<TValue> implements Action {\r\n  static readonly TYPE: 'ngrx/forms/REMOVE_CONTROL' = 'ngrx/forms/REMOVE_CONTROL';\r\n  readonly type = RemoveGroupControlAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: keyof TValue,\r\n  ) { }\r\n}\r\n\r\nexport class SetUserDefinedPropertyAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/SET_USER_DEFINED_PROPERTY' = 'ngrx/forms/SET_USER_DEFINED_PROPERTY';\r\n  readonly type = SetUserDefinedPropertyAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n    public readonly name: string,\r\n    public readonly value: any,\r\n  ) { }\r\n}\r\n\r\nexport class ResetAction implements Action {\r\n  static readonly TYPE: 'ngrx/forms/RESET' = 'ngrx/forms/RESET';\r\n  readonly type = ResetAction.TYPE;\r\n\r\n  constructor(\r\n    public readonly controlId: NgrxFormControlId,\r\n  ) { }\r\n}\r\n\r\nexport type Actions<TValue> =\r\n  | SetValueAction<TValue>\r\n  | SetErrorsAction\r\n  | SetAsyncErrorAction\r\n  | ClearAsyncErrorAction\r\n  | StartAsyncValidationAction\r\n  | MarkAsDirtyAction\r\n  | MarkAsPristineAction\r\n  | EnableAction\r\n  | DisableAction\r\n  | MarkAsTouchedAction\r\n  | MarkAsUntouchedAction\r\n  | FocusAction\r\n  | UnfocusAction\r\n  | MarkAsSubmittedAction\r\n  | MarkAsUnsubmittedAction\r\n  | AddGroupControlAction<TValue>\r\n  | RemoveGroupControlAction<TValue>\r\n  | AddArrayControlAction<any>\r\n  | RemoveArrayControlAction\r\n  | SetUserDefinedPropertyAction\r\n  | ResetAction\r\n  | SwapArrayControlAction\r\n  | MoveArrayControlAction\r\n  ;\r\n\r\nexport function isNgrxFormsAction(action: Action) {\r\n  return !!action.type && action.type.startsWith('ngrx/forms/');\r\n}\r\n\r\nexport const ALL_NGRX_FORMS_ACTION_TYPES: Actions<any>['type'][] = [\r\n  SetValueAction.TYPE,\r\n  SetErrorsAction.TYPE,\r\n  SetAsyncErrorAction.TYPE,\r\n  ClearAsyncErrorAction.TYPE,\r\n  StartAsyncValidationAction.TYPE,\r\n  MarkAsDirtyAction.TYPE,\r\n  MarkAsPristineAction.TYPE,\r\n  EnableAction.TYPE,\r\n  DisableAction.TYPE,\r\n  MarkAsTouchedAction.TYPE,\r\n  MarkAsUntouchedAction.TYPE,\r\n  FocusAction.TYPE,\r\n  UnfocusAction.TYPE,\r\n  MarkAsSubmittedAction.TYPE,\r\n  MarkAsUnsubmittedAction.TYPE,\r\n  AddGroupControlAction.TYPE,\r\n  RemoveGroupControlAction.TYPE,\r\n  AddArrayControlAction.TYPE,\r\n  RemoveArrayControlAction.TYPE,\r\n  SetUserDefinedPropertyAction.TYPE,\r\n  ResetAction.TYPE,\r\n  SwapArrayControlAction.TYPE,\r\n  MoveArrayControlAction.TYPE,\r\n];\r\n","export interface Boxed<T> {\r\n  __boxed: '';\r\n  value: T;\r\n}\r\n\r\nexport type UnboxedObject<T> = {\r\n  [prop in keyof T]: Unboxed<T[prop]>;\r\n};\r\n\r\nexport type Unboxed<T> =\r\n  // (ab)use 'symbol' to catch 'any' typing\r\n  T extends Boxed<symbol> ? any\r\n  : T extends Boxed<infer U> ? U\r\n  : T extends symbol[] ? any\r\n  : T extends symbol ? any\r\n  : T extends undefined ? undefined\r\n  : T extends null ? null\r\n  : T extends string ? string\r\n  : T extends number ? number\r\n  : T extends boolean ? boolean\r\n  : UnboxedObject<T>;\r\n\r\nexport function isBoxed<T = any>(value: any): value is Boxed<T> {\r\n  return !!value && (value as Boxed<any>).__boxed === '';\r\n}\r\n\r\nexport function box<T>(value: T): Boxed<T> {\r\n  return {\r\n    __boxed: '',\r\n    value,\r\n  };\r\n}\r\n\r\nexport function unbox<T>(value: T): Unboxed<T> {\r\n  if (['string', 'boolean', 'number', 'undefined'].indexOf(typeof value) >= 0 || value === null) {\r\n    return value as unknown as Unboxed<T>;\r\n  }\r\n\r\n  if (isBoxed<T>(value)) {\r\n    return value.value as unknown as Unboxed<T>;\r\n  }\r\n\r\n  if (Array.isArray(value)) {\r\n    return (value as any).map(unbox) as Unboxed<T>;\r\n  }\r\n\r\n  return Object.keys(value as any).reduce(\r\n    (a, k) => Object.assign(a, { [k]: unbox(value[k as keyof T] as any) }),\r\n    {} as any,\r\n  ) as Unboxed<T>;\r\n}\r\n","export function isEmpty(obj: object) {\r\n  return Object.keys(obj).length === 0;\r\n}\r\n\r\nexport function deepEquals<T>(_1: T, _2: T, ..._3: T[]) {\r\n  let i: any;\r\n  let l: any;\r\n  let leftChain: any;\r\n  let rightChain: any;\r\n\r\n  function compare2Objects(x: any, y: any) {\r\n    let p;\r\n\r\n    // remember that NaN === NaN returns false\r\n    // and isNaN(undefined) returns true\r\n    if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\r\n      return true;\r\n    }\r\n\r\n    // Compare primitives and functions.\r\n    // Check if both arguments link to the same object.\r\n    // Especially useful on the step where we compare prototypes\r\n    if (x === y) {\r\n      return true;\r\n    }\r\n\r\n    // Works in case when functions are created in constructor.\r\n    // Comparing dates is a common scenario. Another built-ins?\r\n    // We can even handle functions passed across iframes\r\n    if ((typeof x === 'function' && typeof y === 'function') ||\r\n      (x instanceof Date && y instanceof Date) ||\r\n      (x instanceof RegExp && y instanceof RegExp) ||\r\n      (x instanceof String && y instanceof String) ||\r\n      (x instanceof Number && y instanceof Number)) {\r\n      return x.toString() === y.toString();\r\n    }\r\n\r\n    // At last checking prototypes as good as we can\r\n    if (!(x instanceof Object && y instanceof Object)) {\r\n      return false;\r\n    }\r\n\r\n    if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\r\n      return false;\r\n    }\r\n\r\n    if (x.constructor !== y.constructor) {\r\n      return false;\r\n    }\r\n\r\n    // Check for infinitive linking loops\r\n    if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\r\n      return false;\r\n    }\r\n\r\n    // Quick checking of one object being a subset of another.\r\n    for (p in y) {\r\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n        return false;\r\n      } else if (typeof y[p] !== typeof x[p]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // tslint:disable:forin\r\n    for (p in x) {\r\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n        return false;\r\n      }\r\n\r\n      switch (typeof (x[p])) {\r\n        case 'object':\r\n        case 'function':\r\n\r\n          leftChain.push(x);\r\n          rightChain.push(y);\r\n\r\n          if (!compare2Objects(x[p], y[p])) {\r\n            return false;\r\n          }\r\n\r\n          leftChain.pop();\r\n          rightChain.pop();\r\n          break;\r\n\r\n        default:\r\n          if (x[p] !== y[p]) {\r\n            return false;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  if (arguments.length <= 1) {\r\n    throw new Error('Need two or more arguments to compare');\r\n  }\r\n\r\n  for (i = 1, l = arguments.length; i < l; i++) {\r\n    leftChain = [];\r\n    rightChain = [];\r\n\r\n    if (!compare2Objects(arguments[0], arguments[i])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","import { Boxed, isBoxed } from './boxing';\r\nimport { deepEquals, isEmpty } from './util';\r\n\r\nexport type FormControlValueTypes = Boxed<any> | string | number | boolean | null | undefined;\r\nexport type NgrxFormControlId = string;\r\n\r\n/**\r\n * This type represents a collection of named errors.\r\n */\r\nexport interface ValidationErrors { readonly [key: string]: any; }\r\nexport interface KeyValue { [key: string]: any; }\r\n\r\n/**\r\n * Base interface for all types of form states.\r\n */\r\nexport interface AbstractControlState<TValue> {\r\n  /**\r\n   * The unique ID of the form state. Usually this is the name or index\r\n   * of the control in the form value prefixed by the ID of the containing\r\n   * group or array, e.g. `MY_FORM.someTextInput` or `MY_FORM.0`.\r\n   */\r\n  readonly id: string;\r\n\r\n  /**\r\n   * The value of the form state.\r\n   */\r\n  readonly value: TValue;\r\n\r\n  /**\r\n   * This property is `true` if the state does not have any errors.\r\n   */\r\n  readonly isValid: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the state has at least one error.\r\n   */\r\n  readonly isInvalid: boolean;\r\n\r\n  /**\r\n   * The errors of the state. This property always has a value.\r\n   * If the state has no errors the property is set to `{}`.\r\n   */\r\n  readonly errors: ValidationErrors;\r\n\r\n  /**\r\n   * The names of all asynchronous validations currently running\r\n   * for the state.\r\n   */\r\n  readonly pendingValidations: readonly string[];\r\n\r\n  /**\r\n   * This property indicates whether the control is currently being\r\n   * asynchronously validated.\r\n   */\r\n  readonly isValidationPending: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the state is enabled. When it\r\n   * is `false` the `errors` are always `{}` (i.e. the state is\r\n   * always valid if disabled) and `pendingValidations` is always `[]`\r\n   * (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isEnabled: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the state is disabled. When it\r\n   * is `true` the `errors` are always `{}` (i.e. the state is\r\n   * always valid if disabled) and `pendingValidations` is always `[]`\r\n   * (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isDisabled: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the state's value changes.\r\n   */\r\n  readonly isDirty: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state's value never changed.\r\n   */\r\n  readonly isPristine: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the state is touched.\r\n   */\r\n  readonly isTouched: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not touched.\r\n   */\r\n  readonly isUntouched: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the state is submitted.\r\n   */\r\n  readonly isSubmitted: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not submitted.\r\n   */\r\n  readonly isUnsubmitted: boolean;\r\n\r\n  /**\r\n   * This property is a container for user-defined metadata (e.g. if\r\n   * you wanted to count the number of times a state's value has been\r\n   * changed, what keys were pressed on an input, or how often a form\r\n   * has been submitted etc.). While it is possible to store this kind\r\n   * of information outside of **ngrx-forms** in your own state the\r\n   * `userDefinedProperties` allow you to store your own metadata\r\n   * directly in the state.\r\n   */\r\n  readonly userDefinedProperties: KeyValue;\r\n}\r\n\r\n/**\r\n * State associated with a form control, i.e. an HTML form\r\n * element in the view (e.g. `input`, `select`, `textarea` etc.).\r\n */\r\nexport interface FormControlState<TValue extends FormControlValueTypes> extends AbstractControlState<TValue> {\r\n  /**\r\n   * The value of the form state. Form controls only support values of\r\n   * type `string`, `number`, `boolean`, `null`, and `undefined` to\r\n   * keep the state string serializable.\r\n   */\r\n  readonly value: TValue;\r\n\r\n  /**\r\n   * This property is `true` if the form control does not have any errors.\r\n   */\r\n  readonly isValid: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the form control has at least one error.\r\n   */\r\n  readonly isInvalid: boolean;\r\n\r\n  /**\r\n   * The errors of the form control. This property always has a value.\r\n   * If the control has no errors the property is set to `{}`.\r\n   */\r\n  readonly errors: ValidationErrors;\r\n\r\n  /**\r\n   * The names of all asynchronous validations currently running for the\r\n   * form control.\r\n   */\r\n  readonly pendingValidations: readonly string[];\r\n\r\n  /**\r\n   * This property indicates whether the control is currently being\r\n   * asynchronously validated (i.e. this is `true` if and only if\r\n   * `pendingValidations` is not empty).\r\n   */\r\n  readonly isValidationPending: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form control is enabled.\r\n   * When it is `false` the `errors` are always `{}` (i.e. the form\r\n   * control is always valid if disabled) and `pendingValidations`\r\n   * is always `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isEnabled: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form control is disabled.\r\n   * When it is `true` the `errors` are always `{}` (i.e. the form\r\n   * control is always valid if disabled) and `pendingValidations`\r\n   * is always `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isDisabled: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the underlying\r\n   * `FormViewAdapter` or `ControlValueAccessor` reports a new\r\n   * value for the first time.\r\n   */\r\n  readonly isDirty: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the underlying\r\n   * `FormViewAdapter` or `ControlValueAccessor` has never\r\n   * reported a new value.\r\n   */\r\n  readonly isPristine: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` based on the rules of the\r\n   * underlying `FormViewAdapter` (usually on `blur` for most form\r\n   * elements).\r\n   */\r\n  readonly isTouched: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the control is not touched.\r\n   */\r\n  readonly isUntouched: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the group or array\r\n   * containing this form control is submitted. A form control can\r\n   * never be submitted on its own.\r\n   */\r\n  readonly isSubmitted: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not submitted.\r\n   */\r\n  readonly isUnsubmitted: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` if the form control currently\r\n   * has focus. This feature is opt-in. To enable it you have to\r\n   * enable it for a given form element like this:\r\n   *\r\n```html\r\n<input [ngrxFormControlState]=\"state\"\r\n      [ngrxEnableFocusTracking]=\"true\" />\r\n```\r\n   */\r\n  readonly isFocused: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the control currently does not have\r\n   * focus or focus tracking is not enabled for the form control.\r\n   */\r\n  readonly isUnfocused: boolean;\r\n}\r\n\r\n/**\r\n * This type represents the child control states of a form group.\r\n */\r\nexport type FormGroupControls<TValue> = {\r\n  readonly [controlId in keyof TValue]: FormState<TValue[controlId]>;\r\n};\r\n\r\n/**\r\n * Form groups are collections of named controls. Just like controls\r\n * groups are represented as plain state objects. The state of a\r\n * group is determined almost fully by its child states.\r\n */\r\nexport interface FormGroupState<TValue extends KeyValue> extends AbstractControlState<TValue> {\r\n  /**\r\n   * The aggregated value of the form group. The value is computed by\r\n   * aggregating the values of all children, e.g.\r\n   *\r\n```typescript\r\n{\r\n  child1: 'some value',\r\n  child2: {\r\n    nestedChild: 10,\r\n  },\r\n}\r\n```\r\n   */\r\n  readonly value: TValue;\r\n\r\n  /**\r\n   * This property is `true` if the form group does not have any errors\r\n   * itself and none of its children have any errors.\r\n   */\r\n  readonly isValid: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the form group or any of its children\r\n   * have at least one error.\r\n   */\r\n  readonly isInvalid: boolean;\r\n\r\n  /**\r\n   * The errors of the form group. This property is computed by merging\r\n   * the errors of the group with the errors of all its children where\r\n   * the child errors are a property of the `errors` object prefixed with\r\n   * an underscore, e.g.\r\n   *\r\n```\r\n{\r\n  groupError: true,\r\n  _child: {\r\n    childError: true,\r\n  },\r\n}\r\n```\r\n   *\r\n   * If neither the group nor any children have errors the property is\r\n   * set to `{}`.\r\n   */\r\n  readonly errors: ValidationErrors;\r\n\r\n  /**\r\n   * The names of all asynchronous validations currently running for the\r\n   * form group.\r\n   */\r\n  readonly pendingValidations: readonly string[];\r\n\r\n  /**\r\n   * This property indicates whether the group or any of its children\r\n   * are currently being asynchronously validated.\r\n   */\r\n  readonly isValidationPending: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form group is enabled. It is\r\n   * `true` if and only if at least one of its child states is\r\n   * enabled. When it is `false` the `errors` are always `{}` (i.e.\r\n   * the form group is always valid if disabled) and `pendingValidations`\r\n   * is always `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isEnabled: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form group is disabled. It is\r\n   * `true` if and only if all of its child state are disabled. When\r\n   * it is `true` the `errors` are always `{}` (i.e. the form group\r\n   * is always valid if disabled) and `pendingValidations` is always\r\n   * `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isDisabled: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if at least one of the form\r\n   * group's child states is marked as dirty.\r\n   */\r\n  readonly isDirty: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if all of the form group's\r\n   * child states are pristine.\r\n   */\r\n  readonly isPristine: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if at least one of the form\r\n   * group's child states is marked as touched.\r\n   */\r\n  readonly isTouched: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if all of the form group's\r\n   * child states are untouched.\r\n   */\r\n  readonly isUntouched: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the form group is\r\n   * submitted. This is tracked by the `NgrxFormDirective`, which\r\n   * needs to be applied to a form like this:\r\n   *\r\n```html\r\n<form [ngrxFormState]=\"groupState\">\r\n</form>\r\n```\r\n   *\r\n   * Note that applying this directive to a form prevents normal form\r\n   * submission since that does not make much sense for ngrx forms.\r\n   */\r\n  readonly isSubmitted: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not submitted.\r\n   */\r\n  readonly isUnsubmitted: boolean;\r\n\r\n  /**\r\n   * This property contains all child states of the form group. As\r\n   * you may have noticed the type of each child state is\r\n   * `AbstractControlState` which sometimes forces you to cast the\r\n   * state explicitly. It is not possible to improve this typing\r\n   * until [conditional mapped types](https://github.com/Microsoft/TypeScript/issues/12424)\r\n   * are added to TypeScript.\r\n   */\r\n  readonly controls: FormGroupControls<TValue>;\r\n}\r\n\r\n/**\r\n * Form arrays are collections of controls. They are represented as\r\n * plain state arrays. The state of an array is determined almost\r\n * fully by its child states.\r\n */\r\nexport interface FormArrayState<TValue> extends AbstractControlState<readonly TValue[]> {\r\n  /**\r\n   * The aggregated value of the form array. The value is computed by\r\n   * aggregating the values of all children into an array.\r\n   */\r\n  readonly value: TValue[];\r\n\r\n  /**\r\n   * This property is `true` if the form array does not have any errors\r\n   * itself and none of its children have any errors.\r\n   */\r\n  readonly isValid: boolean;\r\n\r\n  /**\r\n   * This property is `true` if the form array or any of its children\r\n   * have at least one error.\r\n   */\r\n  readonly isInvalid: boolean;\r\n\r\n  /**\r\n   * The errors of the form array. This property is computed by merging\r\n   * the errors of the array with the errors of all its children where\r\n   * the child errors are a property of the `errors` object prefixed with\r\n   * an underscore, e.g.\r\n   *\r\n```\r\n{\r\n  arrayError: true,\r\n  _0: {\r\n    childError: true,\r\n  },\r\n}\r\n```\r\n   *\r\n   * If neither the array nor any children have errors the property is\r\n   * set to `{}`.\r\n   */\r\n  readonly errors: ValidationErrors;\r\n\r\n  /**\r\n   * The names of all asynchronous validations currently running for the\r\n   * form array.\r\n   */\r\n  readonly pendingValidations: readonly string[];\r\n\r\n  /**\r\n   * This property indicates whether the array or any of its children\r\n   * are currently being asynchronously validated.\r\n   */\r\n  readonly isValidationPending: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form array is enabled. It is\r\n   * `true` if and only if at least one of its child states is\r\n   * enabled. When it is `false` the `errors` are always `{}` (i.e.\r\n   * the form array is always valid if disabled) and `pendingValidations`\r\n   * is always `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isEnabled: boolean;\r\n\r\n  /**\r\n   * This property indicates whether the form array is disabled. It is\r\n   * `true` if and only if all of its child states are disabled. When\r\n   * it is `true` the `errors` are always `{}` (i.e. the form array\r\n   * is always valid if disabled) and `pendingValidations` is always\r\n   * `[]` (i.e. all pending validations are cancelled).\r\n   */\r\n  readonly isDisabled: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if at least one of the form\r\n   * array's child states is marked as dirty.\r\n   */\r\n  readonly isDirty: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if all of the form array's\r\n   * child states are pristine.\r\n   */\r\n  readonly isPristine: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if at least one of the form\r\n   * array's child states is marked as touched.\r\n   */\r\n  readonly isTouched: boolean;\r\n\r\n  /**\r\n   * This property is `true` if and only if all of the form array's\r\n   * child states are untouched.\r\n   */\r\n  readonly isUntouched: boolean;\r\n\r\n  /**\r\n   * This property is set to `true` as soon as the form array is\r\n   * submitted. This is tracked by the `NgrxFormDirective`, which\r\n   * needs to be applied to a form like this:\r\n   *\r\n```html\r\n<form [ngrxFormState]=\"arrayState\">\r\n</form>\r\n```\r\n   *\r\n   * Note that applying this directive to a form prevents normal form\r\n   * submission since that does not make much sense for ngrx forms.\r\n   */\r\n  readonly isSubmitted: boolean;\r\n\r\n  /**\r\n   * This property is `true` as long as the state is not submitted.\r\n   */\r\n  readonly isUnsubmitted: boolean;\r\n\r\n  /**\r\n   * This property contains all child states of the form array. As\r\n   * you may have noticed the type of each child state is\r\n   * `AbstractControlState` which sometimes forces you to cast the\r\n   * state explicitly. It is not possible to improve this typing\r\n   * until [conditional mapped types](https://github.com/Microsoft/TypeScript/issues/12424)\r\n   * are added to TypeScript.\r\n   */\r\n  readonly controls: readonly FormState<TValue>[];\r\n}\r\n\r\n/**\r\n * This is a helper type that allows working around the distributiveness\r\n * of conditional types.\r\n */\r\nexport interface InferenceWrapper<T> {\r\n  t: T;\r\n}\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the boxed type contained in the inference wrapper.\r\n */\r\nexport type InferredBoxedFormState<T extends InferenceWrapper<any>> =\r\n  T extends InferenceWrapper<Boxed<infer U>> ? FormControlState<Boxed<U>>\r\n  : T extends InferenceWrapper<Boxed<infer U> | undefined> ? FormControlState<Boxed<U> | undefined>\r\n  : T extends InferenceWrapper<Boxed<infer U> | null> ? FormControlState<Boxed<U> | null>\r\n  : T extends InferenceWrapper<Boxed<infer U> | undefined | null> ? FormControlState<Boxed<U> | undefined | null>\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the string type contained in the inference wrapper.\r\n */\r\nexport type InferredStringFormState<T extends InferenceWrapper<any>> =\r\n  T extends InferenceWrapper<string> ? FormControlState<string>\r\n  : T extends InferenceWrapper<string | undefined> ? FormControlState<string | undefined>\r\n  : T extends InferenceWrapper<string | null> ? FormControlState<string | null>\r\n  : T extends InferenceWrapper<string | undefined | null> ? FormControlState<string | undefined | null>\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the number type contained in the inference wrapper.\r\n */\r\nexport type InferredNumberFormState<T extends InferenceWrapper<any>> =\r\n  T extends InferenceWrapper<number> ? FormControlState<number>\r\n  : T extends InferenceWrapper<number | undefined> ? FormControlState<number | undefined>\r\n  : T extends InferenceWrapper<number | null> ? FormControlState<number | null>\r\n  : T extends InferenceWrapper<number | undefined | null> ? FormControlState<number | undefined | null>\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the boolean type contained in the inference wrapper.\r\n */\r\nexport type InferredBooleanFormState<T extends InferenceWrapper<any>> =\r\n  T extends InferenceWrapper<boolean> ? FormControlState<boolean>\r\n  : T extends InferenceWrapper<boolean | undefined> ? FormControlState<boolean | undefined>\r\n  : T extends InferenceWrapper<boolean | null> ? FormControlState<boolean | null>\r\n  : T extends InferenceWrapper<boolean | undefined | null> ? FormControlState<boolean | undefined | null>\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a helper type that infers the correct form state type based\r\n * on the type contained in the inference wrapper.\r\n */\r\nexport type InferredFormState<T extends InferenceWrapper<any>> =\r\n  // (ab)use 'symbol' to catch 'any' typing\r\n  T extends InferenceWrapper<symbol> ? AbstractControlState<any>\r\n  : T extends InferenceWrapper<undefined> ? AbstractControlState<any>\r\n  : T extends InferenceWrapper<null> ? AbstractControlState<any>\r\n\r\n  // control\r\n  : T extends InferenceWrapper<Boxed<any> | undefined | null> ? InferredBoxedFormState<T>\r\n  : T extends InferenceWrapper<string | undefined | null> ? InferredStringFormState<T>\r\n  : T extends InferenceWrapper<number | undefined | null> ? InferredNumberFormState<T>\r\n  : T extends InferenceWrapper<boolean | undefined | null> ? InferredBooleanFormState<T>\r\n\r\n  // array\r\n  : T extends InferenceWrapper<readonly (infer U)[] | undefined | null> ? FormArrayState<U>\r\n\r\n  // group\r\n  : T extends InferenceWrapper<infer U | undefined | null> ? FormGroupState<U>\r\n\r\n  // fallback type (this case should never (no pun intended) be hit)\r\n  : never\r\n  ;\r\n\r\n/**\r\n * This is a type that can infer the concrete type of a form state based\r\n * on the given type parameter.\r\n */\r\nexport type FormState<T> = InferredFormState<InferenceWrapper<T>>;\r\n\r\n/**\r\n * This function determines if a value is a form state.\r\n */\r\nexport function isFormState<TValue = any>(state: any): state is FormState<TValue> {\r\n  return !!state && state.hasOwnProperty('id') && state.hasOwnProperty('value') && state.hasOwnProperty('errors');\r\n}\r\n\r\n/**\r\n * This function determines if a value is an array state.\r\n */\r\nexport function isArrayState<TValue = any>(state: any): state is FormArrayState<TValue> {\r\n  return isFormState(state) && state.hasOwnProperty('controls') && Array.isArray((state as any).controls);\r\n}\r\n\r\n/**\r\n * This function determines if a value is a group state.\r\n */\r\nexport function isGroupState<TValue = any>(state: any): state is FormGroupState<TValue> {\r\n  return isFormState(state) && state.hasOwnProperty('controls') && !Array.isArray((state as any).controls) && typeof (state as any).controls !== 'function';\r\n}\r\n\r\nexport function createChildState<TValue>(id: string, childValue: TValue): FormState<TValue> {\r\n  if (isBoxed(childValue)) {\r\n    return createFormControlState<any>(id, childValue) as FormState<TValue>;\r\n  }\r\n\r\n  if (childValue !== null && Array.isArray(childValue)) {\r\n    return createFormArrayState(id, childValue) as FormState<TValue>;\r\n  }\r\n\r\n  if (childValue !== null && typeof childValue === 'object') {\r\n    return createFormGroupState(id, childValue) as FormState<TValue>;\r\n  }\r\n\r\n  return createFormControlState<any>(id, childValue) as FormState<TValue>;\r\n}\r\n\r\nexport function verifyFormControlValueIsValid<TValue>(value: TValue) {\r\n  if (value === null || ['string', 'number', 'boolean', 'undefined'].indexOf(typeof value) >= 0) {\r\n    return value;\r\n  }\r\n\r\n  if (!isBoxed(value)) {\r\n    const errorMsg = 'Form control states only support undefined, null, string, number, and boolean values as well as boxed values';\r\n    throw new Error(`${errorMsg}; got ${JSON.stringify(value)} of type ${typeof value}`); // `;\r\n  }\r\n\r\n  if (value.value === null || ['string', 'number', 'boolean', 'undefined'].indexOf(typeof value.value) >= 0) {\r\n    return value;\r\n  }\r\n\r\n  const serialized = JSON.stringify(value);\r\n  const deserialized = JSON.parse(serialized);\r\n\r\n  if (deepEquals(value, deserialized)) {\r\n    return value;\r\n  }\r\n\r\n  throw new Error(`A form control value must be serializable (i.e. value === JSON.parse(JSON.stringify(value))), got: ${JSON.stringify(value)}`);\r\n}\r\n\r\n/**\r\n * This function creates a form control state with an ID and a value.\r\n */\r\nexport function createFormControlState<TValue extends FormControlValueTypes>(\r\n  id: NgrxFormControlId,\r\n  value: TValue,\r\n): FormControlState<TValue> {\r\n  return {\r\n    id,\r\n    value: verifyFormControlValueIsValid(value),\r\n    errors: {},\r\n    pendingValidations: [],\r\n    isValidationPending: false,\r\n    isValid: true,\r\n    isInvalid: false,\r\n    isEnabled: true,\r\n    isDisabled: false,\r\n    isDirty: false,\r\n    isPristine: true,\r\n    isTouched: false,\r\n    isUntouched: true,\r\n    isSubmitted: false,\r\n    isUnsubmitted: true,\r\n    isFocused: false,\r\n    isUnfocused: true,\r\n    userDefinedProperties: {},\r\n  };\r\n}\r\n\r\nexport function getFormGroupValue<TValue extends KeyValue>(\r\n  controls: FormGroupControls<TValue>,\r\n  originalValue: TValue,\r\n): TValue {\r\n  let hasChanged = Object.keys(originalValue).length !== Object.keys(controls).length;\r\n  const newValue = Object.keys(controls).reduce((res, key: keyof TValue) => {\r\n    hasChanged = hasChanged || originalValue[key] !== controls[key].value;\r\n    res[key] = controls[key].value;\r\n    return res;\r\n  }, {} as TValue);\r\n\r\n  return hasChanged ? newValue : originalValue;\r\n}\r\n\r\nexport function getFormGroupErrors<TValue extends KeyValue>(\r\n  controls: FormGroupControls<TValue>,\r\n  originalErrors: ValidationErrors,\r\n): ValidationErrors {\r\n  let hasChanged = false;\r\n  const groupErrors =\r\n    Object.keys(originalErrors)\r\n      .filter(key => !key.startsWith('_'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: originalErrors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = Object.keys(controls).reduce((res, key: any) => {\r\n    const controlErrors = controls[key].errors;\r\n    if (!isEmpty(controlErrors)) {\r\n      hasChanged = hasChanged || originalErrors[`_${key}`] !== controlErrors;\r\n      Object.assign(res, { [`_${key}`]: controls[key].errors });\r\n    } else {\r\n      hasChanged = hasChanged || originalErrors.hasOwnProperty(`_${key}`);\r\n    }\r\n\r\n    return res;\r\n  }, groupErrors);\r\n\r\n  hasChanged = hasChanged || Object.keys(originalErrors).length !== Object.keys(newErrors).length;\r\n\r\n  return hasChanged ? newErrors : originalErrors;\r\n}\r\n\r\nexport function computeGroupState<TValue extends KeyValue>(\r\n  id: string,\r\n  controls: FormGroupControls<TValue>,\r\n  value: TValue,\r\n  errors: ValidationErrors,\r\n  pendingValidations: readonly string[],\r\n  userDefinedProperties: KeyValue,\r\n  flags: {\r\n    wasOrShouldBeDirty?: boolean;\r\n    wasOrShouldBeEnabled?: boolean;\r\n    wasOrShouldBeTouched?: boolean;\r\n    wasOrShouldBeSubmitted?: boolean;\r\n  },\r\n): FormGroupState<TValue> {\r\n  value = getFormGroupValue<TValue>(controls, value);\r\n  errors = getFormGroupErrors(controls, errors);\r\n  const isValid = isEmpty(errors);\r\n  const isDirty = flags.wasOrShouldBeDirty || Object.keys(controls).some(key => controls[key].isDirty);\r\n  const isEnabled = flags.wasOrShouldBeEnabled || Object.keys(controls).some(key => controls[key].isEnabled);\r\n  const isTouched = flags.wasOrShouldBeTouched || Object.keys(controls).some(key => controls[key].isTouched);\r\n  const isSubmitted = flags.wasOrShouldBeSubmitted || Object.keys(controls).some(key => controls[key].isSubmitted);\r\n  const isValidationPending = pendingValidations.length > 0 || Object.keys(controls).some(key => controls[key].isValidationPending);\r\n  return {\r\n    id,\r\n    value,\r\n    errors,\r\n    pendingValidations,\r\n    isValidationPending,\r\n    isValid,\r\n    isInvalid: !isValid,\r\n    isEnabled,\r\n    isDisabled: !isEnabled,\r\n    isDirty,\r\n    isPristine: !isDirty,\r\n    isTouched,\r\n    isUntouched: !isTouched,\r\n    isSubmitted,\r\n    isUnsubmitted: !isSubmitted,\r\n    userDefinedProperties,\r\n    controls,\r\n  };\r\n}\r\n\r\n/**\r\n * This function creates a form group state with an ID and a value.\r\n * From the value the shape of the group state is inferred, i.e.\r\n * object properties are inferred as form groups, array properties\r\n * are inferred as form arrays, and primitive properties are inferred\r\n * as form controls.\r\n */\r\nexport function createFormGroupState<TValue extends KeyValue>(\r\n  id: NgrxFormControlId,\r\n  initialValue: TValue,\r\n): FormGroupState<TValue> {\r\n  const controls = Object.keys(initialValue)\r\n    .map((key: keyof TValue) => [key, createChildState(`${id}.${key}`, initialValue[key])] as [string, FormState<any>])\r\n    .reduce((res, [controlId, state]) => Object.assign(res, { [controlId]: state }), {} as FormGroupControls<TValue>);\r\n\r\n  return computeGroupState(id, controls, initialValue, {}, [], {}, { wasOrShouldBeEnabled: true });\r\n}\r\n\r\nfunction getFormArrayValue<TValue>(\r\n  controls: readonly AbstractControlState<TValue>[],\r\n  originalValue: TValue[],\r\n): TValue[] {\r\n  let hasChanged = Object.keys(originalValue).length !== Object.keys(controls).length;\r\n  const newValue = controls.map((state, i) => {\r\n    hasChanged = hasChanged || originalValue[i] !== state.value;\r\n    return state.value;\r\n  });\r\n\r\n  return hasChanged ? newValue : originalValue;\r\n}\r\n\r\nfunction getFormArrayErrors<TValue>(\r\n  controls: readonly AbstractControlState<TValue>[],\r\n  originalErrors: ValidationErrors,\r\n): ValidationErrors {\r\n  let hasChanged = false;\r\n  const groupErrors =\r\n    Object.keys(originalErrors)\r\n      .filter(key => !key.startsWith('_'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: originalErrors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = controls.reduce((res, state, i) => {\r\n    const controlErrors = state.errors;\r\n    if (!isEmpty(controlErrors)) {\r\n      hasChanged = hasChanged || originalErrors[`_${i}`] !== controlErrors;\r\n      Object.assign(res, { [`_${i}`]: controlErrors });\r\n    } else {\r\n      hasChanged = hasChanged || originalErrors.hasOwnProperty(`_${i}`);\r\n    }\r\n\r\n    return res;\r\n  }, groupErrors);\r\n\r\n  hasChanged = hasChanged || Object.keys(originalErrors).length !== Object.keys(newErrors).length;\r\n\r\n  return hasChanged ? newErrors : originalErrors;\r\n}\r\n\r\nexport function computeArrayState<TValue>(\r\n  id: string,\r\n  inferredControls: readonly FormState<TValue>[],\r\n  value: TValue[],\r\n  errors: ValidationErrors,\r\n  pendingValidations: readonly string[],\r\n  userDefinedProperties: KeyValue,\r\n  flags: {\r\n    wasOrShouldBeDirty?: boolean;\r\n    wasOrShouldBeEnabled?: boolean;\r\n    wasOrShouldBeTouched?: boolean;\r\n    wasOrShouldBeSubmitted?: boolean;\r\n  },\r\n): FormArrayState<TValue> {\r\n  const controls = inferredControls as readonly AbstractControlState<any>[];\r\n\r\n  value = getFormArrayValue<TValue>(controls, value);\r\n  errors = getFormArrayErrors(controls, errors);\r\n  const isValid = isEmpty(errors);\r\n  const isDirty = flags.wasOrShouldBeDirty || controls.some(state => state.isDirty);\r\n  const isEnabled = flags.wasOrShouldBeEnabled || controls.some(state => state.isEnabled);\r\n  const isTouched = flags.wasOrShouldBeTouched || controls.some(state => state.isTouched);\r\n  const isSubmitted = flags.wasOrShouldBeSubmitted || controls.some(state => state.isSubmitted);\r\n  const isValidationPending = pendingValidations.length > 0 || controls.some(state => state.isValidationPending);\r\n  return {\r\n    id,\r\n    value,\r\n    errors,\r\n    pendingValidations,\r\n    isValidationPending,\r\n    isValid,\r\n    isInvalid: !isValid,\r\n    isEnabled,\r\n    isDisabled: !isEnabled,\r\n    isDirty,\r\n    isPristine: !isDirty,\r\n    isTouched,\r\n    isUntouched: !isTouched,\r\n    isSubmitted,\r\n    isUnsubmitted: !isSubmitted,\r\n    userDefinedProperties,\r\n    controls: inferredControls,\r\n  };\r\n}\r\n\r\n/**\r\n * This function creates a form array state with an ID and a value.\r\n * From the value the shape of the array state is inferred, i.e.\r\n * object values are inferred as form groups, array values\r\n * are inferred as form arrays, and primitive values are inferred\r\n * as form controls.\r\n */\r\nexport function createFormArrayState<TValue>(\r\n  id: NgrxFormControlId,\r\n  initialValue: TValue[],\r\n): FormArrayState<TValue> {\r\n  const controls = initialValue\r\n    .map((value, i) => createChildState(`${id}.${i}`, value));\r\n\r\n  return computeArrayState(id, controls, initialValue, {}, [], {}, { wasOrShouldBeEnabled: true });\r\n}\r\n","import { Actions, ClearAsyncErrorAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\nimport { isEmpty } from '../../util';\r\n\r\nexport function clearAsyncErrorReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n\r\n  let errors = state.errors;\r\n\r\n  if (errors.hasOwnProperty(name)) {\r\n    errors = { ...state.errors };\r\n    delete (errors as any)[name];\r\n  }\r\n\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n  const isValid = isEmpty(errors);\r\n\r\n  if (errors === state.errors && isValid === state.isValid && pendingValidations.length === state.pendingValidations.length) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isValid,\r\n    isInvalid: !isValid,\r\n    errors,\r\n    pendingValidations,\r\n    isValidationPending: pendingValidations.length > 0,\r\n  };\r\n}\r\n","import { Actions, DisableAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function disableReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== DisableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isEnabled: false,\r\n    isDisabled: true,\r\n    isValid: true,\r\n    isInvalid: false,\r\n    errors: {},\r\n    pendingValidations: [],\r\n    isValidationPending: false,\r\n  };\r\n}\r\n","import { Actions, EnableAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function enableReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== EnableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isEnabled) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isEnabled: true,\r\n    isDisabled: false,\r\n  };\r\n}\r\n","import { Actions, FocusAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function focusReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== FocusAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isFocused) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isFocused: true,\r\n    isUnfocused: false,\r\n  };\r\n}\r\n","import { Actions, MarkAsDirtyAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsDirtyReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsDirtyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isDirty) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isDirty: true,\r\n    isPristine: false,\r\n  };\r\n}\r\n","import { Actions, MarkAsPristineAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsPristineReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsPristineAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isPristine) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isDirty: false,\r\n    isPristine: true,\r\n  };\r\n}\r\n","import { Actions, MarkAsSubmittedAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsSubmittedReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsSubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isSubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isSubmitted: true,\r\n    isUnsubmitted: false,\r\n  };\r\n}\r\n","import { Actions, MarkAsTouchedAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsTouchedReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsTouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isTouched) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isTouched: true,\r\n    isUntouched: false,\r\n  };\r\n}\r\n","import { Actions, MarkAsUnsubmittedAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsUnsubmittedReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsUnsubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isSubmitted: false,\r\n    isUnsubmitted: true,\r\n  };\r\n}\r\n","import { Actions, MarkAsUntouchedAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function markAsUntouchedReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== MarkAsUntouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isUntouched) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isTouched: false,\r\n    isUntouched: true,\r\n  };\r\n}\r\n","import { Actions, ResetAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function resetReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== ResetAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isDirty: false,\r\n    isPristine: true,\r\n    isTouched: false,\r\n    isUntouched: true,\r\n    isSubmitted: false,\r\n    isUnsubmitted: true,\r\n  };\r\n}\r\n","import { Actions, SetAsyncErrorAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\nimport { deepEquals } from '../../util';\r\n\r\nexport function setAsyncErrorReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== SetAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n  let value = action.value;\r\n\r\n  if (deepEquals(state.errors[name], action.value)) {\r\n    value = state.errors[name];\r\n  }\r\n\r\n  const errors = { ...state.errors, [name]: value };\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  return {\r\n    ...state,\r\n    isValid: false,\r\n    isInvalid: true,\r\n    errors,\r\n    pendingValidations,\r\n    isValidationPending: pendingValidations.length > 0,\r\n  };\r\n}\r\n","import { Actions, SetErrorsAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes, ValidationErrors } from '../../state';\r\nimport { deepEquals, isEmpty } from '../../util';\r\n\r\nexport function setErrorsReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== SetErrorsAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  if (state.errors === action.errors) {\r\n    return state;\r\n  }\r\n\r\n  if (deepEquals(state.errors, action.errors)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.errors || typeof (action.errors as any) !== 'object' || Array.isArray(action.errors)) {\r\n    throw new Error(`Control errors must be an object; got ${action.errors}`); // `;\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\r\n    throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`); // `;\r\n  }\r\n\r\n  const asyncErrors =\r\n    Object.keys(state.errors)\r\n      .filter(key => key.startsWith('$'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: state.errors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = isEmpty(asyncErrors) ? action.errors : Object.assign(asyncErrors, action.errors);\r\n  const isValid = isEmpty(newErrors);\r\n\r\n  return {\r\n    ...state,\r\n    isValid,\r\n    isInvalid: !isValid,\r\n    errors: newErrors,\r\n  };\r\n}\r\n","import { Actions, SetUserDefinedPropertyAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function setUserDefinedPropertyReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== SetUserDefinedPropertyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.userDefinedProperties[action.name] === action.value) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    userDefinedProperties: {\r\n      ...state.userDefinedProperties,\r\n      [action.name]: action.value,\r\n    },\r\n  };\r\n}\r\n","import { Actions, SetValueAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes, verifyFormControlValueIsValid } from '../../state';\r\n\r\nexport function setValueReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== SetValueAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.value === action.value) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    value: verifyFormControlValueIsValid(action.value),\r\n  };\r\n}\r\n","import { Actions, StartAsyncValidationAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function startAsyncValidationReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== StartAsyncValidationAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.pendingValidations.indexOf(action.name) >= 0) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    pendingValidations: [...state.pendingValidations, action.name],\r\n    isValidationPending: true,\r\n  };\r\n}\r\n","import { Actions, UnfocusAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function unfocusReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== UnfocusAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isUnfocused) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isFocused: false,\r\n    isUnfocused: true,\r\n  };\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { Actions } from '../actions';\r\nimport { FormControlState, FormControlValueTypes, isArrayState, isGroupState } from '../state';\r\nimport { clearAsyncErrorReducer } from './reducer/clear-async-error';\r\nimport { disableReducer } from './reducer/disable';\r\nimport { enableReducer } from './reducer/enable';\r\nimport { focusReducer } from './reducer/focus';\r\nimport { markAsDirtyReducer } from './reducer/mark-as-dirty';\r\nimport { markAsPristineReducer } from './reducer/mark-as-pristine';\r\nimport { markAsSubmittedReducer } from './reducer/mark-as-submitted';\r\nimport { markAsTouchedReducer } from './reducer/mark-as-touched';\r\nimport { markAsUnsubmittedReducer } from './reducer/mark-as-unsubmitted';\r\nimport { markAsUntouchedReducer } from './reducer/mark-as-untouched';\r\nimport { resetReducer } from './reducer/reset';\r\nimport { setAsyncErrorReducer } from './reducer/set-async-error';\r\nimport { setErrorsReducer } from './reducer/set-errors';\r\nimport { setUserDefinedPropertyReducer } from './reducer/set-user-defined-property';\r\nimport { setValueReducer } from './reducer/set-value';\r\nimport { startAsyncValidationReducer } from './reducer/start-async-validation';\r\nimport { unfocusReducer } from './reducer/unfocus';\r\n\r\nexport function formControlReducerInternal<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (isGroupState(state) || isArrayState(state)) {\r\n    throw new Error('The state must be a control state');\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return state;\r\n  }\r\n\r\n  state = setValueReducer(state, action);\r\n  state = setErrorsReducer(state, action);\r\n  state = startAsyncValidationReducer(state, action);\r\n  state = setAsyncErrorReducer(state, action);\r\n  state = clearAsyncErrorReducer(state, action);\r\n  state = enableReducer(state, action);\r\n  state = disableReducer(state, action);\r\n  state = focusReducer(state, action);\r\n  state = unfocusReducer(state, action);\r\n  state = markAsDirtyReducer(state, action);\r\n  state = markAsPristineReducer(state, action);\r\n  state = markAsTouchedReducer(state, action);\r\n  state = markAsUntouchedReducer(state, action);\r\n  state = markAsSubmittedReducer(state, action);\r\n  state = markAsUnsubmittedReducer(state, action);\r\n  state = setUserDefinedPropertyReducer(state, action);\r\n  state = resetReducer(state, action);\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * This reducer function updates a form control state with actions.\r\n */\r\nexport function formControlReducer<TValue extends FormControlValueTypes>(state: FormControlState<TValue> | undefined, action: Action) {\r\n  if (!state) {\r\n    throw new Error('The control state must be defined!');\r\n  }\r\n\r\n  return formControlReducerInternal(state, action as any);\r\n}\r\n","import { Actions } from '../../actions';\r\nimport { formStateReducer } from '../../reducer';\r\nimport { computeArrayState, FormArrayState, FormGroupControls, FormGroupState, FormState, isArrayState, isGroupState } from '../../state';\r\n\r\nexport function dispatchActionPerChild<TValue>(\r\n  controls: readonly FormState<TValue>[],\r\n  actionCreator: (controlId: string) => Actions<TValue>,\r\n): readonly FormState<TValue>[] {\r\n  let hasChanged = false;\r\n  const newControls = controls\r\n    .map(state => {\r\n      const newState = formStateReducer<TValue>(state, actionCreator(state.id));\r\n      hasChanged = hasChanged || state !== newState;\r\n      return newState;\r\n    });\r\n\r\n  return hasChanged ? newControls : controls;\r\n}\r\n\r\nfunction callChildReducers<TValue>(\r\n  controls: readonly FormState<TValue>[],\r\n  action: Actions<TValue[]>,\r\n): readonly FormState<TValue>[] {\r\n  let hasChanged = false;\r\n  const newControls = controls\r\n    .map(state => {\r\n      const newState = formStateReducer<TValue>(state, action);\r\n      hasChanged = hasChanged || state !== newState;\r\n      return newState;\r\n    });\r\n\r\n  return hasChanged ? newControls : controls;\r\n}\r\n\r\nexport function childReducer<TValue>(state: FormArrayState<TValue>, action: Actions<TValue[]>) {\r\n  const controls = callChildReducers(state.controls, action);\r\n\r\n  if (state.controls === controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n\r\nexport function updateIdRecursiveForGroup<TValue>(state: FormGroupState<TValue>, newId: string): FormGroupState<TValue> {\r\n  const controls: FormGroupControls<TValue> =\r\n    Object.keys(state.controls)\r\n      .reduce((agg, key) => Object.assign(agg, {\r\n        [key]: updateIdRecursive<TValue[keyof TValue]>(state.controls[key as keyof TValue], `${newId}.${key}`),\r\n      }), {} as FormGroupControls<TValue>);\r\n\r\n  return {\r\n    ...state,\r\n    id: newId,\r\n    controls,\r\n  };\r\n}\r\n\r\nexport function updateIdRecursiveForArray<TValue>(state: FormArrayState<TValue>, newId: string): FormArrayState<TValue> {\r\n  const controls = state.controls.map((c, i) => updateIdRecursive(c, `${newId}.${i}`));\r\n\r\n  return {\r\n    ...state,\r\n    id: newId,\r\n    controls,\r\n  };\r\n}\r\n\r\nexport function updateIdRecursive<TValue>(state: FormState<TValue>, newId: string): FormState<TValue> {\r\n  if (state.id === newId) {\r\n    return state;\r\n  }\r\n\r\n  if (isGroupState<TValue>(state)) {\r\n    return updateIdRecursiveForGroup<TValue>(state, newId) as FormState<TValue>;\r\n  }\r\n\r\n  if (isArrayState<TValue>(state)) {\r\n    return updateIdRecursiveForArray<TValue>(state, newId) as any;\r\n  }\r\n\r\n  return {\r\n    ...(state as any),\r\n    id: newId,\r\n  };\r\n}\r\n","import { Actions, AddArrayControlAction } from '../../actions';\r\nimport { computeArrayState, createChildState, FormArrayState, FormState } from '../../state';\r\nimport { childReducer, updateIdRecursive } from './util';\r\n\r\nexport function addControlReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== AddArrayControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const index = action.index === undefined ? state.controls.length : action.index;\r\n\r\n  if (index > state.controls.length || index < 0) {\r\n    throw new Error(`Index ${index} is out of bounds for array '${state.id}' with length ${state.controls.length}!`);\r\n  }\r\n\r\n  let controls = [...state.controls];\r\n  controls.splice(index, 0, createChildState(`${state.id}.${index}`, action.value) as FormState<TValue>);\r\n  controls = controls.map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, ClearAsyncErrorAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function clearAsyncErrorReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n\r\n  let errors = state.errors;\r\n\r\n  if (state.errors.hasOwnProperty(name)) {\r\n    errors = { ...state.errors };\r\n    delete (errors as any)[name];\r\n  }\r\n\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  if (errors === state.errors && pendingValidations.length === state.pendingValidations.length) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, DisableAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function disableReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== DisableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new DisableAction(controlId)),\r\n    state.value,\r\n    {},\r\n    [],\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: false,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, EnableAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function enableReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== EnableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new EnableAction(controlId));\r\n\r\n  if (controls === state.controls && state.isEnabled) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: true,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsDirtyAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsDirtyReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsDirtyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsDirtyAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsPristineAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsPristineReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsPristineAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isPristine) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsPristineAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: false,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsSubmittedAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsSubmittedReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsSubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsSubmittedAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: true,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsTouchedAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsTouchedReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsTouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsTouchedAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: true,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsUnsubmittedAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsUnsubmittedReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsUnsubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsUnsubmittedAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: false,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsUntouchedAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsUntouchedReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MarkAsUntouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isUntouched) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsUntouchedAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: false,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MoveArrayControlAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, updateIdRecursive } from './util';\r\n\r\nexport function move(array: readonly any[], fromIndex: number, toIndex: number) {\r\n  const item = array[fromIndex];\r\n  const length = array.length;\r\n  if (fromIndex > toIndex) {\r\n    return [\r\n      ...array.slice(0, toIndex),\r\n      item,\r\n      ...array.slice(toIndex, fromIndex),\r\n      ...array.slice(fromIndex + 1, length),\r\n    ];\r\n  } else {\r\n    const targetIndex = toIndex + 1;\r\n    return [\r\n      ...array.slice(0, fromIndex),\r\n      ...array.slice(fromIndex + 1, targetIndex),\r\n      item,\r\n      ...array.slice(targetIndex, length),\r\n    ];\r\n  }\r\n}\r\n\r\nexport function moveControlReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== MoveArrayControlAction.TYPE) {\r\n    return state;\r\n  }\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const fromIndex = action.fromIndex;\r\n  const toIndex = action.toIndex;\r\n\r\n  if (fromIndex === toIndex) {\r\n    return state;\r\n  }\r\n\r\n  if (fromIndex < 0 || toIndex < 0) {\r\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${fromIndex} was negative`);\r\n  }\r\n\r\n  if (fromIndex >= state.controls.length || toIndex >= state.controls.length) {\r\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${toIndex} is out of bounds with the length of the controls ${state.controls.length}`);\r\n  }\r\n\r\n  let controls = move(state.controls, fromIndex, toIndex);\r\n\r\n  controls = controls.map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    }\r\n  );\r\n}\r\n","import { Actions, RemoveArrayControlAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, updateIdRecursive } from './util';\r\n\r\nexport function removeControlReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== RemoveArrayControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (action.index >= state.controls.length || action.index < 0) {\r\n    throw new Error(`Index ${action.index} is out of bounds for array '${state.id}' with length ${state.controls.length}!`);\r\n  }\r\n\r\n  const index = action.index;\r\n  const controls = state.controls.filter((_, i) => i !== index).map((c, i) => updateIdRecursive(c, `${state.id}.${i}`));\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, ResetAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function resetReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== ResetAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new ResetAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: false,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: false,\r\n      wasOrShouldBeSubmitted: false,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetAsyncErrorAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { deepEquals } from '../../util';\r\nimport { childReducer } from './util';\r\n\r\nexport function setAsyncErrorReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SetAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n  let value = action.value;\r\n\r\n  if (deepEquals(state.errors[name], action.value)) {\r\n    value = state.errors[name];\r\n  }\r\n\r\n  const errors = { ...state.errors, [name]: value };\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetErrorsAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState, ValidationErrors } from '../../state';\r\nimport { deepEquals } from '../../util';\r\nimport { childReducer } from './util';\r\n\r\nexport function setErrorsReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SetErrorsAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  if (state.errors === action.errors) {\r\n    return state;\r\n  }\r\n\r\n  if (deepEquals(state.errors, action.errors)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.errors || typeof (action.errors as any) !== 'object' || Array.isArray(action.errors)) {\r\n    throw new Error(`Control errors must be an object; got ${action.errors}`);\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('_'))) {\r\n    throw new Error(`Control errors must not use underscore as a prefix; got ${JSON.stringify(action.errors)}`);\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\r\n    throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`);\r\n  }\r\n\r\n  const childAndAsyncErrors =\r\n    Object.keys(state.errors)\r\n      .filter(key => key.startsWith('_') || key.startsWith('$'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: state.errors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = Object.assign(childAndAsyncErrors, action.errors);\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    newErrors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetUserDefinedPropertyAction } from '../../actions';\r\nimport { FormArrayState } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function setUserDefinedPropertyReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SetUserDefinedPropertyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.userDefinedProperties[action.name] === action.value) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    userDefinedProperties: {\r\n      ...state.userDefinedProperties,\r\n      [action.name]: action.value,\r\n    },\r\n  };\r\n}\r\n","import { Actions, SetValueAction } from '../../actions';\r\nimport { formStateReducer } from '../../reducer';\r\nimport { computeArrayState, createChildState, FormArrayState } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function setValueReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SetValueAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.value === action.value) {\r\n    return state;\r\n  }\r\n\r\n  if (action.value instanceof Date) {\r\n    throw new Error('Date values are not supported. Please used serialized strings instead.');\r\n  }\r\n\r\n  const value = action.value;\r\n\r\n  const controls = value\r\n    .map((v, i) => {\r\n      if (!state.controls[i]) {\r\n        return createChildState(`${state.id}.${i}`, v);\r\n      }\r\n\r\n      return formStateReducer<TValue>(state.controls[i], new SetValueAction(state.controls[i].id, v));\r\n    });\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, StartAsyncValidationAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function startAsyncValidationReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== StartAsyncValidationAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.pendingValidations.indexOf(action.name) >= 0) {\r\n    return state;\r\n  }\r\n\r\n  const pendingValidations = [...state.pendingValidations, action.name];\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    state.errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SwapArrayControlAction } from '../../actions';\r\nimport { computeArrayState, FormArrayState } from '../../state';\r\nimport { childReducer, updateIdRecursive } from './util';\r\n\r\nfunction swapArrayValues(a: readonly any[], i: number, j: number) {\r\n  const n = [...a];\r\n  [n[i], n[j]] = [n[j], n[i]];\r\n  return n;\r\n}\r\n\r\nexport function swapControlReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SwapArrayControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const fromIndex = action.fromIndex;\r\n  const toIndex = action.toIndex;\r\n\r\n  if (fromIndex === toIndex) {\r\n    return state;\r\n  }\r\n\r\n  if (fromIndex < 0 || toIndex < 0) {\r\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${fromIndex} was negative`);\r\n  }\r\n\r\n  if (fromIndex >= state.controls.length || toIndex >= state.controls.length) {\r\n    throw new Error(`fromIndex ${fromIndex} or toIndex ${toIndex} is out of bounds with the length of the controls ${state.controls.length}`);\r\n  }\r\n\r\n  let controls = swapArrayValues(state.controls, fromIndex, toIndex);\r\n  controls = controls.map((c, i) => (i >= fromIndex || i >= toIndex) ? updateIdRecursive(c, `${state.id}.${i}`) : c);\r\n\r\n  return computeArrayState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    }\r\n  );\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport {\r\n  Actions,\r\n  AddGroupControlAction,\r\n  FocusAction,\r\n  isNgrxFormsAction,\r\n  RemoveGroupControlAction,\r\n  UnfocusAction,\r\n} from '../actions';\r\nimport { FormArrayState, isArrayState } from '../state';\r\nimport { addControlReducer } from './reducer/add-control';\r\nimport { clearAsyncErrorReducer } from './reducer/clear-async-error';\r\nimport { disableReducer } from './reducer/disable';\r\nimport { enableReducer } from './reducer/enable';\r\nimport { markAsDirtyReducer } from './reducer/mark-as-dirty';\r\nimport { markAsPristineReducer } from './reducer/mark-as-pristine';\r\nimport { markAsSubmittedReducer } from './reducer/mark-as-submitted';\r\nimport { markAsTouchedReducer } from './reducer/mark-as-touched';\r\nimport { markAsUnsubmittedReducer } from './reducer/mark-as-unsubmitted';\r\nimport { markAsUntouchedReducer } from './reducer/mark-as-untouched';\r\nimport { moveControlReducer } from './reducer/move-control';\r\nimport { removeControlReducer } from './reducer/remove-control';\r\nimport { resetReducer } from './reducer/reset';\r\nimport { setAsyncErrorReducer } from './reducer/set-async-error';\r\nimport { setErrorsReducer } from './reducer/set-errors';\r\nimport { setUserDefinedPropertyReducer } from './reducer/set-user-defined-property';\r\nimport { setValueReducer } from './reducer/set-value';\r\nimport { startAsyncValidationReducer } from './reducer/start-async-validation';\r\nimport { swapControlReducer } from './reducer/swap-control';\r\nimport { childReducer } from './reducer/util';\r\n\r\nexport function formArrayReducerInternal<TValue>(state: FormArrayState<TValue>, action: Actions<TValue[]>) {\r\n  if (!isArrayState(state)) {\r\n    throw new Error('The state must be an array state');\r\n  }\r\n\r\n  if (!isNgrxFormsAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.controlId.startsWith(state.id)) {\r\n    return state;\r\n  }\r\n\r\n  switch (action.type) {\r\n    case FocusAction.TYPE:\r\n    case UnfocusAction.TYPE:\r\n    case AddGroupControlAction.TYPE:\r\n    case RemoveGroupControlAction.TYPE:\r\n      return childReducer(state, action);\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  state = setValueReducer(state, action);\r\n  state = setErrorsReducer(state, action);\r\n  state = startAsyncValidationReducer(state, action);\r\n  state = setAsyncErrorReducer(state, action);\r\n  state = clearAsyncErrorReducer(state, action);\r\n  state = enableReducer(state, action);\r\n  state = disableReducer(state, action);\r\n  state = markAsDirtyReducer(state, action);\r\n  state = markAsPristineReducer(state, action);\r\n  state = markAsTouchedReducer(state, action);\r\n  state = markAsUntouchedReducer(state, action);\r\n  state = markAsSubmittedReducer(state, action);\r\n  state = markAsUnsubmittedReducer(state, action);\r\n  state = setUserDefinedPropertyReducer(state, action);\r\n  state = resetReducer(state, action);\r\n  state = addControlReducer(state, action);\r\n  state = removeControlReducer(state, action);\r\n  state = swapControlReducer(state, action);\r\n  state = moveControlReducer(state, action);\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * This reducer function updates a form array state with actions.\r\n */\r\nexport function formArrayReducer<TValue>(state: FormArrayState<TValue> | undefined, action: Action) {\r\n  if (!state) {\r\n    throw new Error('The array state must be defined!');\r\n  }\r\n\r\n  return formArrayReducerInternal(state, action as any);\r\n}\r\n","import { Action, ActionReducer } from '@ngrx/store';\r\n\r\nimport { Actions, ALL_NGRX_FORMS_ACTION_TYPES } from './actions';\r\nimport { formArrayReducer } from './array/reducer';\r\nimport { formControlReducer } from './control/reducer';\r\nimport { formGroupReducer } from './group/reducer';\r\nimport { AbstractControlState, FormControlState, FormState, isArrayState, isFormState, isGroupState } from './state';\r\nimport { ProjectFn } from './update-function/util';\r\n\r\nexport function formStateReducer<TValue>(\r\n  state: FormState<TValue> | AbstractControlState<TValue> | undefined,\r\n  action: Action,\r\n): FormState<TValue> {\r\n  if (!state) {\r\n    throw new Error('The form state must be defined!');\r\n  }\r\n\r\n  if (!isFormState(state)) {\r\n    throw new Error(`state must be a form state, got ${state}`);\r\n  }\r\n\r\n  if (isGroupState(state)) {\r\n    return formGroupReducer(state, action) as any;\r\n  }\r\n\r\n  if (isArrayState(state)) {\r\n    return formArrayReducer(state, action) as any;\r\n  }\r\n\r\n  return formControlReducer(state as FormControlState<any>, action) as any;\r\n}\r\n\r\n/**\r\n * This function creates a reducer function that first applies an action to the state\r\n * and afterwards applies all given update functions one after another to the resulting\r\n * form state. However, the update functions are only applied if the form state changed\r\n * as result of applying the action. If you need the update functions to be applied\r\n * regardless of whether the state changed (e.g. because the update function closes\r\n * over variables that may change independently of the form state) you can simply apply\r\n * the update manually (e.g. `updateFunction(formStateReducer(state, action))`).\r\n *\r\n * The following (contrived) example uses this function to create a reducer that after\r\n * each action validates the child control `name` to be required and sets the child\r\n * control `email`'s value to be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst updateFormState = updateGroup<FormValue>(\r\n  {\r\n    name: validate(required),\r\n  },\r\n  {\r\n    email: (email, parentGroup) =>\r\n      parentGroup.controls.name.isInvalid\r\n        ? setValue('', email)\r\n        : email,\r\n  },\r\n);\r\n\r\nconst reducer = createFormStateReducerWithUpdate<FormValue>(updateFormState);\r\n```\r\n */\r\nexport function createFormStateReducerWithUpdate<TValue>(\r\n  updateFnOrUpdateFnArr: ProjectFn<FormState<TValue>> | ProjectFn<FormState<TValue>>[],\r\n  ...updateFnArr: ProjectFn<FormState<TValue>>[]\r\n): ActionReducer<FormState<TValue>> {\r\n  updateFnArr = [...(Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr]), ...updateFnArr];\r\n  return (state: FormState<TValue> | undefined, action: Action): FormState<TValue> => {\r\n    const newState = formStateReducer(state as AbstractControlState<TValue>, action);\r\n    return newState === state ? state : updateFnArr.reduce((s, f) => f(s), newState);\r\n  };\r\n}\r\n\r\nfunction reduceNestedFormState<TState>(state: TState, key: keyof TState, action: Action): TState {\r\n  const value = state[key];\r\n\r\n  if (!isFormState(value)) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    [key]: formStateReducer(value, action),\r\n  };\r\n}\r\n\r\nfunction reduceNestedFormStates<TState>(state: TState, action: Action): TState {\r\n  return Object.keys(state).reduce((s, key) => reduceNestedFormState(s, key as keyof TState, action), state);\r\n}\r\n\r\n/**\r\n * This function returns an object that can be passed to ngrx's `createReducer`\r\n * function (available starting with ngrx version 8). By doing this all form\r\n * state properties on the state will be updated whenever necessary (i.e.\r\n * whenever an ngrx-forms action is dispatched).\r\n *\r\n * To manually update a form state (e.g. to validate it) use\r\n * `wrapReducerWithFormStateUpdate`.\r\n */\r\nexport function onNgrxForms<TState = any>(): { reducer: ActionReducer<TState>; types: string[] } {\r\n  return {\r\n    reducer: (state, action) => reduceNestedFormStates(state!, action),\r\n    types: ALL_NGRX_FORMS_ACTION_TYPES,\r\n  };\r\n}\r\n\r\nexport interface ActionConstructor {\r\n  new(...args: any[]): Actions<any>;\r\n  readonly TYPE: string;\r\n}\r\n\r\nexport type CreatedAction<TActionCons> = TActionCons extends new (...args: any[]) => infer TAction ? TAction : never;\r\n\r\n/**\r\n * Define a reducer for a ngrx-forms action. This functions works the same as\r\n * ngrx's `on` except that you provide the ngrx-forms action class instead of\r\n * your action creator as a parameter.\r\n */\r\nexport function onNgrxFormsAction<\r\n  TActionCons extends ActionConstructor,\r\n  TState\r\n>(\r\n  actionCons: TActionCons,\r\n  reducer: (state: TState, action: CreatedAction<TActionCons>) => TState,\r\n): { reducer: ActionReducer<TState>; types: string[] } {\r\n  return {\r\n    reducer: (state, action) => reducer(reduceNestedFormStates(state!, action), action as any),\r\n    types: [actionCons.TYPE],\r\n  };\r\n}\r\n\r\n/**\r\n * This function wraps a reducer and returns another reducer that first calls\r\n * the given reducer and then calls the given update function for the form state\r\n * that is specified by the form state locator function.\r\n *\r\n * The update function is passed the form state and the updated containing state\r\n * as parameters.\r\n */\r\nexport function wrapReducerWithFormStateUpdate<TState, TFormState extends AbstractControlState<any>>(\r\n  reducer: ActionReducer<TState>,\r\n  formStateLocator: (state: TState) => TFormState,\r\n  updateFn: (formState: TFormState, state: TState) => TFormState,\r\n): ActionReducer<TState> {\r\n  return (state, action) => {\r\n    const updatedState = reducer(state, action);\r\n\r\n    const formState = formStateLocator(updatedState);\r\n    const formStateKey = Object.keys(updatedState).find(key => updatedState[key as keyof TState] as any === formState)!;\r\n\r\n    const updatedFormState = updateFn(formState, updatedState);\r\n\r\n    if (updatedFormState === formState) {\r\n      return updatedState;\r\n    }\r\n\r\n    return {\r\n      ...updatedState,\r\n      [formStateKey]: updatedFormState,\r\n    };\r\n  };\r\n}\r\n","import { Actions } from '../../actions';\r\nimport { formStateReducer } from '../../reducer';\r\nimport { computeGroupState, FormGroupControls, FormGroupState, FormState, KeyValue } from '../../state';\r\n\r\nexport function dispatchActionPerChild<TValue extends KeyValue>(\r\n  controls: FormGroupControls<TValue>,\r\n  actionCreator: (controlId: string) => Actions<TValue>,\r\n) {\r\n  let hasChanged = false;\r\n  const newControls = Object.keys(controls)\r\n    .reduce((c, key) => {\r\n      Object.assign(c, { [key]: formStateReducer(controls[key], actionCreator(controls[key].id)) });\r\n      hasChanged = hasChanged || c[key] !== controls[key];\r\n      return c;\r\n    }, {} as FormGroupControls<TValue>);\r\n  return hasChanged ? newControls : controls;\r\n}\r\n\r\nfunction callChildReducers<TValue extends { [key: string]: any }>(\r\n  controls: FormGroupControls<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupControls<TValue> {\r\n  let hasChanged = false;\r\n  const newControls = Object.keys(controls)\r\n    .map(key => [key, formStateReducer(controls[key], action)] as [string, FormState<any>])\r\n    .reduce((res, [key, state]) => {\r\n      hasChanged = hasChanged || state !== controls[key];\r\n      return Object.assign(res, { [key]: state });\r\n    }, {} as FormGroupControls<TValue>);\r\n  return hasChanged ? newControls : controls;\r\n}\r\n\r\nexport function childReducer<TValue extends KeyValue>(state: FormGroupState<TValue>, action: Actions<TValue>) {\r\n  const controls = callChildReducers(state.controls, action);\r\n\r\n  if (state.controls === controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, AddGroupControlAction } from '../../actions';\r\nimport { computeGroupState, createChildState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function addControlReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== AddGroupControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.controls.hasOwnProperty(action.name)) {\r\n    throw new Error(`Group '${state.id}' already has child control '${action.name}'!`); // `;\r\n  }\r\n\r\n  const controls = Object.assign({}, state.controls, {\r\n    [action.name]: createChildState(`${state.id}.${action.name}`, action.value),\r\n  });\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, ClearAsyncErrorAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function clearAsyncErrorReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n\r\n  let errors = state.errors;\r\n\r\n  if (errors.hasOwnProperty(name)) {\r\n    errors = { ...state.errors };\r\n    delete (errors as any)[name];\r\n  }\r\n\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  if (errors === state.errors && pendingValidations.length === state.pendingValidations.length) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, DisableAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function disableReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== DisableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new DisableAction(controlId)),\r\n    state.value,\r\n    {},\r\n    [],\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: false,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, EnableAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function enableReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== EnableAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new EnableAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: true,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsDirtyAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsDirtyReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsDirtyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsDirtyAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsPristineAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsPristineReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsPristineAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isPristine) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsPristineAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: false,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsSubmittedAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsSubmittedReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsSubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsSubmittedAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: true,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsTouchedAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsTouchedReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsTouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  const controls = dispatchActionPerChild(state.controls, controlId => new MarkAsTouchedAction(controlId));\r\n\r\n  if (controls === state.controls) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: true,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsUnsubmittedAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsUnsubmittedReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsUnsubmittedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsUnsubmittedAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: false,\r\n    },\r\n  );\r\n}\r\n","import { Actions, MarkAsUntouchedAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function markAsUntouchedReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== MarkAsUntouchedAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isUntouched) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new MarkAsUntouchedAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: false,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, RemoveGroupControlAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function removeControlReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== RemoveGroupControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (!state.controls.hasOwnProperty(action.name)) {\r\n    throw new Error(`Group '${state.id}' does not have child control '${action.name}'!`); // `;\r\n  }\r\n\r\n  const controls = Object.assign({}, state.controls);\r\n  delete controls[action.name];\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: true,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, ResetAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer, dispatchActionPerChild } from './util';\r\n\r\nexport function resetReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== ResetAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    dispatchActionPerChild(state.controls, controlId => new ResetAction(controlId)),\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: false,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: false,\r\n      wasOrShouldBeSubmitted: false,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetAsyncErrorAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { deepEquals } from '../../util';\r\nimport { childReducer } from './util';\r\n\r\nexport function setAsyncErrorReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== SetAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  const name = `$${action.name}`;\r\n  let value = action.value;\r\n\r\n  if (deepEquals(state.errors[name], action.value)) {\r\n    value = state.errors[name];\r\n  }\r\n\r\n  const errors = { ...state.errors, [name]: value };\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.name);\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetErrorsAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue, ValidationErrors } from '../../state';\r\nimport { deepEquals } from '../../util';\r\nimport { childReducer } from './util';\r\n\r\nexport function setErrorsReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== SetErrorsAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.isDisabled) {\r\n    return state;\r\n  }\r\n\r\n  if (state.errors === action.errors) {\r\n    return state;\r\n  }\r\n\r\n  if (deepEquals(state.errors, action.errors)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.errors || typeof (action.errors as any) !== 'object' || Array.isArray(action.errors)) {\r\n    throw new Error(`Control errors must be an object; got ${action.errors}`); // `;\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('_'))) {\r\n    throw new Error(`Control errors must not use underscore as a prefix; got ${JSON.stringify(action.errors)}`); // `;\r\n  }\r\n\r\n  if (Object.keys(action.errors).some(key => key.startsWith('$'))) {\r\n    throw new Error(`Control errors must not use $ as a prefix; got ${JSON.stringify(action.errors)}`); // `;\r\n  }\r\n\r\n  const childAndAsyncErrors =\r\n    Object.keys(state.errors)\r\n      .filter(key => key.startsWith('_') || key.startsWith('$'))\r\n      .reduce((res, key) => Object.assign(res, { [key]: state.errors[key] }), {} as ValidationErrors);\r\n\r\n  const newErrors = Object.assign(childAndAsyncErrors, action.errors);\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    newErrors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, SetUserDefinedPropertyAction } from '../../actions';\r\nimport { FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function setUserDefinedPropertyReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== SetUserDefinedPropertyAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.userDefinedProperties[action.name] === action.value) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    userDefinedProperties: {\r\n      ...state.userDefinedProperties,\r\n      [action.name]: action.value,\r\n    },\r\n  };\r\n}\r\n","import { Actions, SetValueAction } from '../../actions';\r\nimport { formStateReducer } from '../../reducer';\r\nimport { computeGroupState, createChildState, FormGroupControls, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function setValueReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== SetValueAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.value === action.value) {\r\n    return state;\r\n  }\r\n\r\n  if (action.value instanceof Date) {\r\n    throw new Error('Date values are not supported. Please used serialized strings instead.');\r\n  }\r\n\r\n  const value = action.value;\r\n\r\n  const controls = Object.keys(value)\r\n    .reduce((c, key) => {\r\n      // tslint:disable-next-line:prefer-conditional-expression\r\n      if (!state.controls[key]) {\r\n        Object.assign(c, { [key]: createChildState<TValue[string]>(`${state.id}.${key}`, value[key]) });\r\n      } else {\r\n        Object.assign(c, { [key]: formStateReducer(state.controls[key], new SetValueAction(state.controls[key].id, value[key])) });\r\n      }\r\n      return c;\r\n    }, {} as FormGroupControls<TValue>);\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Actions, StartAsyncValidationAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function startAsyncValidationReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== StartAsyncValidationAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.pendingValidations.indexOf(action.name) >= 0) {\r\n    return state;\r\n  }\r\n\r\n  const pendingValidations = [...state.pendingValidations, action.name];\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    state.controls,\r\n    state.value,\r\n    state.errors,\r\n    pendingValidations,\r\n    state.userDefinedProperties,\r\n    {\r\n      wasOrShouldBeDirty: state.isDirty,\r\n      wasOrShouldBeEnabled: state.isEnabled,\r\n      wasOrShouldBeTouched: state.isTouched,\r\n      wasOrShouldBeSubmitted: state.isSubmitted,\r\n    },\r\n  );\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport {\r\n  Actions,\r\n  AddArrayControlAction,\r\n  FocusAction,\r\n  isNgrxFormsAction,\r\n  RemoveArrayControlAction,\r\n  UnfocusAction,\r\n} from '../actions';\r\nimport { FormGroupState, isGroupState, KeyValue } from '../state';\r\nimport { addControlReducer } from './reducer/add-control';\r\nimport { clearAsyncErrorReducer } from './reducer/clear-async-error';\r\nimport { disableReducer } from './reducer/disable';\r\nimport { enableReducer } from './reducer/enable';\r\nimport { markAsDirtyReducer } from './reducer/mark-as-dirty';\r\nimport { markAsPristineReducer } from './reducer/mark-as-pristine';\r\nimport { markAsSubmittedReducer } from './reducer/mark-as-submitted';\r\nimport { markAsTouchedReducer } from './reducer/mark-as-touched';\r\nimport { markAsUnsubmittedReducer } from './reducer/mark-as-unsubmitted';\r\nimport { markAsUntouchedReducer } from './reducer/mark-as-untouched';\r\nimport { removeControlReducer } from './reducer/remove-control';\r\nimport { resetReducer } from './reducer/reset';\r\nimport { setAsyncErrorReducer } from './reducer/set-async-error';\r\nimport { setErrorsReducer } from './reducer/set-errors';\r\nimport { setUserDefinedPropertyReducer } from './reducer/set-user-defined-property';\r\nimport { setValueReducer } from './reducer/set-value';\r\nimport { startAsyncValidationReducer } from './reducer/start-async-validation';\r\nimport { childReducer } from './reducer/util';\r\n\r\nexport function formGroupReducerInternal<TValue extends KeyValue>(state: FormGroupState<TValue>, action: Actions<TValue>) {\r\n  if (!isGroupState(state)) {\r\n    throw new Error('The state must be a group state');\r\n  }\r\n\r\n  if (!isNgrxFormsAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.controlId.startsWith(state.id)) {\r\n    return state;\r\n  }\r\n\r\n  switch (action.type) {\r\n    case FocusAction.TYPE:\r\n    case UnfocusAction.TYPE:\r\n    case AddArrayControlAction.TYPE:\r\n    case RemoveArrayControlAction.TYPE:\r\n      return childReducer(state, action);\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  state = setValueReducer(state, action);\r\n  state = setErrorsReducer(state, action);\r\n  state = startAsyncValidationReducer(state, action);\r\n  state = setAsyncErrorReducer(state, action);\r\n  state = clearAsyncErrorReducer(state, action);\r\n  state = enableReducer(state, action);\r\n  state = disableReducer(state, action);\r\n  state = markAsDirtyReducer(state, action);\r\n  state = markAsPristineReducer(state, action);\r\n  state = markAsTouchedReducer(state, action);\r\n  state = markAsUntouchedReducer(state, action);\r\n  state = markAsSubmittedReducer(state, action);\r\n  state = markAsUnsubmittedReducer(state, action);\r\n  state = addControlReducer(state, action);\r\n  state = removeControlReducer(state, action);\r\n  state = setUserDefinedPropertyReducer(state, action);\r\n  state = resetReducer(state, action);\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * This reducer function updates a form group state with actions.\r\n */\r\nexport function formGroupReducer<TValue extends KeyValue>(state: FormGroupState<TValue> | undefined, action: Action) {\r\n  if (!state) {\r\n    throw new Error('The group state must be defined!');\r\n  }\r\n\r\n  return formGroupReducerInternal(state, action as any);\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { formArrayReducer } from '../array/reducer';\r\nimport { formControlReducer } from '../control/reducer';\r\nimport { formGroupReducer } from '../group/reducer';\r\nimport { AbstractControlState, isArrayState, isGroupState } from '../state';\r\n\r\nexport type ProjectFn<T> = (t: T) => T;\r\nexport type ProjectFn2<T, K> = (t: T, k: K) => T;\r\n\r\nexport function abstractControlReducer<TValue>(state: AbstractControlState<TValue>, action: Action): AbstractControlState<TValue> {\r\n  if (isArrayState(state)) {\r\n    return formArrayReducer(state, action as any) as any;\r\n  }\r\n\r\n  if (isGroupState(state)) {\r\n    return formGroupReducer(state, action);\r\n  }\r\n\r\n  return formControlReducer(state as any, action) as any;\r\n}\r\n\r\nexport function compose<T>(...fns: ((t: T) => T)[]) {\r\n  return (t: T) => fns.reduce((res, f) => f(res), t);\r\n}\r\n\r\nexport function ensureState<TState>(state: TState | undefined): TState {\r\n  if (!state) {\r\n    throw new Error('state must not be undefined!');\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { computeArrayState, FormArrayState, FormState, isArrayState } from '../state';\r\nimport { ensureState, ProjectFn2 } from './util';\r\n\r\nexport type FilterFn<TValue> = (s: FormState<TValue>, idx: number) => boolean;\r\n\r\nfunction updateArrayControlsState<TValue>(filterFn: FilterFn<TValue>, updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>) {\r\n  return (state: FormArrayState<TValue>) => {\r\n    let hasChanged = false;\r\n    const newControls = state.controls.map((control, idx) => {\r\n      if (!filterFn(control, idx)) {\r\n        return control;\r\n      }\r\n\r\n      const newControl = updateFn(control, state);\r\n      hasChanged = hasChanged || newControl !== control;\r\n      return newControl;\r\n    });\r\n    return hasChanged ? newControls : state.controls;\r\n  };\r\n}\r\n\r\nfunction updateArraySingle<TValue>(filterFn: FilterFn<TValue>, updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>) {\r\n  return (state: FormArrayState<TValue>): FormArrayState<TValue> => {\r\n    const newControls = updateArrayControlsState<TValue>(filterFn, updateFn)(state);\r\n    return newControls !== state.controls\r\n      ? computeArrayState<TValue>(\r\n        state.id,\r\n        newControls,\r\n        state.value,\r\n        state.errors,\r\n        state.pendingValidations,\r\n        state.userDefinedProperties,\r\n        {\r\n          wasOrShouldBeDirty: state.isDirty,\r\n          wasOrShouldBeEnabled: state.isEnabled,\r\n          wasOrShouldBeTouched: state.isTouched,\r\n          wasOrShouldBeSubmitted: state.isSubmitted,\r\n        },\r\n      )\r\n      : state;\r\n  };\r\n}\r\n\r\n/**\r\n * This update function takes a filter function and one or more update functions\r\n * and returns a projection function that applies all update functions one after\r\n * another to each element of the form array state for which the filter function\r\n * returns `true`.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst arrayUpdateFn = updateArray<string>(\r\n  (_, idx) => idx > 0,\r\n  validate(required),\r\n  markAsDirty,\r\n);\r\nconst updatedState = arrayUpdateFn(state);\r\n```\r\n */\r\nexport function updateArrayWithFilter<TValue>(\r\n  filterFn: FilterFn<TValue>,\r\n  updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>,\r\n  ...updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a filter function and an array of update functions\r\n * and returns a projection function that applies all update functions one after\r\n * another to each element of the form array state for which the filter function\r\n * returns `true`.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst arrayUpdateFn = updateArray<string>(\r\n  (_, idx) => idx > 0,\r\n  [\r\n    validate(required),\r\n    markAsDirty,\r\n  ],\r\n);\r\nconst updatedState = arrayUpdateFn(state);\r\n```\r\n */\r\nexport function updateArrayWithFilter<TValue>(\r\n  filterFn: FilterFn<TValue>,\r\n  updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state, a filter function, and a variable\r\n * number of update functions and applies all update functions one after another to\r\n * each element of the form array state for which the filter function returns `true`.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst updatedState = updateArray<string>(\r\n  state,\r\n  (_, idx) => idx > 0,\r\n  validate(required),\r\n  markAsDirty,\r\n);\r\n```\r\n */\r\nexport function updateArrayWithFilter<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  filterFn: FilterFn<TValue>,\r\n  updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>,\r\n  ...updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state, a filter function, and an array of\r\n * update functions and applies all update functions one after another to each\r\n * element of the form array state for which the filter function returns `true`.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst updatedState = updateArray<string>(\r\n  state,\r\n  (_, idx) => idx > 0,\r\n  [\r\n    validate(required),\r\n    markAsDirty,\r\n  ],\r\n);\r\n```\r\n */\r\nexport function updateArrayWithFilter<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  filterFn: FilterFn<TValue>,\r\n  updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n): FormArrayState<TValue>;\r\n\r\nexport function updateArrayWithFilter<TValue>(\r\n  stateOrFilterFunction: FormArrayState<TValue> | FilterFn<TValue>,\r\n  filterFunctionOrFunctionOrFunctionArray:\r\n    | FilterFn<TValue>\r\n    | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>\r\n    | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n  updateFnOrUpdateFnArr?: ProjectFn2<FormState<TValue>, FormArrayState<TValue>> | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n  ...rest: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n) {\r\n  if (isArrayState<TValue>(stateOrFilterFunction)) {\r\n    const filterFn = filterFunctionOrFunctionOrFunctionArray as FilterFn<TValue>;\r\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr!];\r\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateArraySingle<TValue>(filterFn, updateFn)(s), stateOrFilterFunction);\r\n  }\r\n\r\n  let updateFnArr = Array.isArray(filterFunctionOrFunctionOrFunctionArray)\r\n    ? filterFunctionOrFunctionOrFunctionArray\r\n    : [filterFunctionOrFunctionOrFunctionArray as ProjectFn2<FormState<TValue>, FormArrayState<TValue>>];\r\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\r\n  return (s: FormArrayState<TValue>) => updateArrayWithFilter<TValue>(ensureState(s), stateOrFilterFunction, updateFnArr.concat(rest));\r\n}\r\n\r\n/**\r\n * This update function takes one or more update functions and returns a\r\n * projection function that applies all update functions one after another to\r\n * each element of the form array state.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst arrayUpdateFn = updateArray<string>(\r\n  validate<string>(required),\r\n  markAsDirty,\r\n);\r\nconst updatedState = arrayUpdateFn(state);\r\n```\r\n */\r\nexport function updateArray<TValue>(\r\n  updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>,\r\n  ...updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of update functions and returns\r\n * a projection function that applies all update functions one after another to\r\n * each element of the form array state.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst arrayUpdateFn = updateArray<string>([\r\n  validate<string>(required),\r\n  markAsDirty,\r\n]);\r\nconst updatedState = arrayUpdateFn(state);\r\n```\r\n */\r\nexport function updateArray<TValue>(\r\n  updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and one or more update functions\r\n * and applies all update functions one after another to each element of the form\r\n * array state.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst updatedState = updateArray<string>(\r\n  state,\r\n  validate<string>(required),\r\n  markAsDirty,\r\n);\r\n```\r\n */\r\nexport function updateArray<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  updateFn: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>,\r\n  ...updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and an array of update\r\n * functions and applies all update functions one after another to each element\r\n * of the form array state.\r\n *\r\n * The following (contrived) example uses this function to validate all its\r\n * children to be required and mark them as dirty.\r\n *\r\n```typescript\r\nconst updatedState = updateArray<string>(\r\n  state,\r\n  [\r\n    validate<string>(required),\r\n    markAsDirty,\r\n  ],\r\n);\r\n```\r\n */\r\nexport function updateArray<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  updateFnArr: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n): FormArrayState<TValue>;\r\n\r\nexport function updateArray<TValue>(\r\n  stateOrFunctionOrFunctionArray:\r\n    | FormArrayState<TValue>\r\n    | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>\r\n    | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n  updateFnOrUpdateFnArr?: ProjectFn2<FormState<TValue>, FormArrayState<TValue>> | ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[],\r\n  ...rest: ProjectFn2<FormState<TValue>, FormArrayState<TValue>>[]\r\n) {\r\n  if (isArrayState<TValue>(stateOrFunctionOrFunctionArray)) {\r\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr!];\r\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateArraySingle<TValue>(() => true, updateFn)(s), stateOrFunctionOrFunctionArray);\r\n  }\r\n\r\n  let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\r\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\r\n  return (s: FormArrayState<TValue>) => updateArray<TValue>(ensureState(s), updateFnArr.concat(rest));\r\n}\r\n","import { computeGroupState, FormGroupControls, FormGroupState, FormState, isGroupState, KeyValue } from '../state';\r\nimport { ensureState, ProjectFn2 } from './util';\r\n\r\nexport type StateUpdateFns<TValue extends KeyValue> = {\r\n  [controlId in keyof TValue]?: ProjectFn2<FormState<TValue[controlId]>, FormGroupState<TValue>>;\r\n};\r\n\r\nfunction updateGroupControlsState<TValue extends KeyValue>(updateFns: StateUpdateFns<TValue>) {\r\n  return (state: FormGroupState<TValue>) => {\r\n    let hasChanged = false;\r\n    const newControls = Object.keys(state.controls).reduce((res, key) => {\r\n      const control = state.controls[key];\r\n      Object.assign(res, { [key]: control });\r\n      if (updateFns.hasOwnProperty(key)) {\r\n        const newControl = updateFns[key]!(control, state);\r\n        hasChanged = hasChanged || newControl !== control;\r\n        Object.assign(res, { [key]: newControl });\r\n      }\r\n      return res;\r\n    }, {} as FormGroupControls<TValue>);\r\n    return hasChanged ? newControls : state.controls;\r\n  };\r\n}\r\n\r\nfunction updateGroupSingle<TValue extends KeyValue>(updateFns: StateUpdateFns<TValue>) {\r\n  return (state: FormGroupState<TValue>): FormGroupState<TValue> => {\r\n    const newControls = updateGroupControlsState<TValue>(updateFns)(state);\r\n    return newControls !== state.controls\r\n      ? computeGroupState<TValue>(\r\n        state.id,\r\n        newControls,\r\n        state.value,\r\n        state.errors,\r\n        state.pendingValidations,\r\n        state.userDefinedProperties,\r\n        {\r\n          wasOrShouldBeDirty: state.isDirty,\r\n          wasOrShouldBeEnabled: state.isEnabled,\r\n          wasOrShouldBeTouched: state.isTouched,\r\n          wasOrShouldBeSubmitted: state.isSubmitted,\r\n        },\r\n      )\r\n      : state;\r\n  };\r\n}\r\n\r\n/**\r\n * This update function takes one or more update function objects and returns\r\n * a projection function that applies all objects one after another to a form\r\n * group state.\r\n *\r\n * The following (contrived) example uses this function to validate the child\r\n * control `name` to be required and set the child control `email`'s value to\r\n * be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst groupUpdateFn = updateGroup<FormValue>(\r\n  {\r\n    name: validate<string>(required),\r\n  },\r\n  {\r\n    email: (email, parentGroup) =>\r\n      parentGroup.controls.name.isInvalid\r\n        ? setValue('', email)\r\n        : email,\r\n  },\r\n);\r\nconst updatedState = groupUpdateFn(state);\r\n```\r\n */\r\nexport function updateGroup<TValue>(\r\n  updateFn: StateUpdateFns<TValue>,\r\n  ...updateFnsArr: StateUpdateFns<TValue>[]\r\n): (state: FormGroupState<TValue>) => FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of update function objects and\r\n * returns a projection function that applies all objects one after another to\r\n * a form group state.\r\n *\r\n * The following (contrived) example uses this function to validate the child\r\n * control `name` to be required and set the child control `email`'s value to\r\n * be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst groupUpdateFn = updateGroup<FormValue>(\r\n  [\r\n    {\r\n      name: validate<string>(required),\r\n    },\r\n    {\r\n      email: (email, parentGroup) =>\r\n        parentGroup.controls.name.isInvalid\r\n          ? setValue('', email)\r\n          : email,\r\n    },\r\n  ],\r\n);\r\nconst updatedState = groupUpdateFn(state);\r\n```\r\n */\r\nexport function updateGroup<TValue>(\r\n  updateFnsArr: StateUpdateFns<TValue>[],\r\n): (state: FormGroupState<TValue>) => FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and one or more update\r\n * function objects and applies all objects one after another to the state.\r\n * Providing multiple update function objects is mainly useful if the result\r\n * of a later object depends on the result of previous objects.\r\n *\r\n * The following (contrived) example uses this function to validate the child\r\n * control `name` to be required and set the child control `email`'s value to\r\n * be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst updatedState = updateGroup<FormValue>(\r\n  state,\r\n  {\r\n    name: validate<string>(required),\r\n  },\r\n  {\r\n    email: (email, parentGroup) =>\r\n      parentGroup.controls.name.isInvalid\r\n        ? setValue('', email)\r\n        : email,\r\n  },\r\n);\r\n```\r\n */\r\nexport function updateGroup<TValue>(\r\n  state: FormGroupState<TValue>,\r\n  updateFn: StateUpdateFns<TValue>,\r\n  ...updateFnsArr: StateUpdateFns<TValue>[]\r\n): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and an array of update\r\n * function objects and applies all objects one after another to the state.\r\n * Providing multiple update function objects is mainly useful if the result\r\n * of a later object depends on the result of previous objects.\r\n *\r\n * The following (contrived) example uses this function to validate the child\r\n * control `name` to be required and set the child control `email`'s value to\r\n * be `''` if the name is invalid.\r\n *\r\n```typescript\r\ninterface FormValue {\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nconst updatedState = updateGroup<FormValue>(\r\n  state,\r\n  [\r\n    {\r\n      name: validate<string>(required),\r\n    },\r\n    {\r\n      email: (email, parentGroup) =>\r\n        parentGroup.controls.name.isInvalid\r\n          ? setValue('', email)\r\n          : email,\r\n    },\r\n  ],\r\n);\r\n```\r\n */\r\nexport function updateGroup<TValue>(\r\n  state: FormGroupState<TValue>,\r\n  updateFnsArr: StateUpdateFns<TValue>[],\r\n): FormGroupState<TValue>;\r\n\r\nexport function updateGroup<TValue extends KeyValue>(\r\n  stateOrUpdateFnOrUpdateFnArray: FormGroupState<TValue> | StateUpdateFns<TValue> | StateUpdateFns<TValue>[],\r\n  updateFnOrUpdateFnArr?: StateUpdateFns<TValue> | StateUpdateFns<TValue>[],\r\n  ...rest: StateUpdateFns<TValue>[]\r\n) {\r\n  if (isGroupState<TValue>(stateOrUpdateFnOrUpdateFnArray)) {\r\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr!];\r\n    return updateFnArr.concat(...rest).reduce((s, updateFn) => updateGroupSingle<TValue>(updateFn)(s), stateOrUpdateFnOrUpdateFnArray);\r\n  }\r\n\r\n  let updateFnArr = Array.isArray(stateOrUpdateFnOrUpdateFnArray) ? stateOrUpdateFnOrUpdateFnArray : [stateOrUpdateFnOrUpdateFnArray];\r\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\r\n  return (s: FormGroupState<TValue>) => updateGroup<TValue>(ensureState(s), updateFnArr.concat(rest));\r\n}\r\n","import {\r\n  AbstractControlState,\r\n  FormState,\r\n  isArrayState,\r\n  isFormState,\r\n  isGroupState,\r\n} from '../state';\r\nimport { updateArray } from './update-array';\r\nimport { StateUpdateFns, updateGroup } from './update-group';\r\nimport { ensureState, ProjectFn2 } from './util';\r\n\r\nfunction updateRecursiveSingle(parent: AbstractControlState<any>, updateFn: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>) {\r\n  return (state: AbstractControlState<any>): AbstractControlState<any> => {\r\n    if (isGroupState(state)) {\r\n      const updateFunctions = Object.keys(state.controls).reduce((agg, key) => Object.assign(agg, {\r\n        [key]: (s: AbstractControlState<any>, p: AbstractControlState<any>) => updateRecursiveSingle(p, updateFn)(s),\r\n      }), {} as StateUpdateFns<any>);\r\n      state = updateGroup<any>(updateFunctions)(state);\r\n      return updateFn(state, parent);\r\n    }\r\n\r\n    if (isArrayState(state)) {\r\n      state = updateArray<any>((s, p) => updateRecursiveSingle(p, updateFn)(s))(state);\r\n      return updateFn(state, parent);\r\n    }\r\n\r\n    return updateFn(state, parent);\r\n  };\r\n}\r\n\r\n/**\r\n * This update function takes a form array state and one or more update\r\n * functions applies all update functions one after another to the state\r\n * recursively, i.e. the function is applied to the state's children,\r\n * their children etc.\r\n *\r\n * The following example uses this function to validate all controls in a\r\n * group or array as required.\r\n *\r\n ```typescript\r\n const updatedState = updateRecursive(\r\n   state,\r\n   validate<any>(required),\r\n );\r\n ```\r\n */\r\nexport function updateRecursive<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  updateFn: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>,\r\n  ...updateFnArr: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[]\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and an array of\r\n * update functions applies all update functions one after another to the\r\n * state recursively, i.e. the function is applied to the state's children,\r\n * their children etc.\r\n *\r\n * The following example uses this function to validate all controls in a\r\n * group or array as required.\r\n *\r\n```typescript\r\nconst updatedState = updateRecursive(\r\n  state,\r\n  [validate<any>(required)],\r\n);\r\n```\r\n */\r\nexport function updateRecursive<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  updateFnArr: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[],\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes one or more update functions and returns a\r\n * projection function that applies all update functions one after another to\r\n * a form state.\r\n *\r\n * The following example uses this function to validate all controls in a\r\n * group as required.\r\n *\r\n```typescript\r\nconst updateFn = updateRecursive(validate<any>(required));\r\nconst updatedState = updateFn(state);\r\n```\r\n */\r\nexport function updateRecursive(\r\n  updateFn: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>,\r\n  ...updateFnArr: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[]\r\n): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of update functions and returns\r\n * a projection function that applies all update functions one after another to\r\n * a form state.\r\n *\r\n * The following example uses this function to validate all controls in a\r\n * group as required.\r\n *\r\n```typescript\r\nconst updateFn = updateRecursive([validate<any>(required)]);\r\nconst updatedState = updateFn(state);\r\n```\r\n */\r\nexport function updateRecursive(\r\n  updateFnArr: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[],\r\n): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\nexport function updateRecursive<TValue>(\r\n  stateOrFunctionOrFunctionArray:\r\n    | AbstractControlState<TValue>\r\n    | ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>\r\n    | ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[],\r\n  updateFnOrUpdateFnArr?: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>> | ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[],\r\n  ...rest: ProjectFn2<AbstractControlState<any>, AbstractControlState<any>>[]\r\n) {\r\n  if (isFormState(stateOrFunctionOrFunctionArray)) {\r\n    const updateFnArr = Array.isArray(updateFnOrUpdateFnArr) ? updateFnOrUpdateFnArr : [updateFnOrUpdateFnArr!];\r\n    return updateFnArr.concat(...rest)\r\n      .reduce((s, updateFn) => updateRecursiveSingle(stateOrFunctionOrFunctionArray, updateFn)(s), stateOrFunctionOrFunctionArray);\r\n  }\r\n\r\n  let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\r\n  updateFnArr = updateFnOrUpdateFnArr === undefined ? updateFnArr : updateFnArr.concat(updateFnOrUpdateFnArr);\r\n  return (s: AbstractControlState<TValue>) => updateRecursive<TValue>(ensureState(s), updateFnArr.concat(rest));\r\n}\r\n","import { SetValueAction } from '../actions';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a value and returns a projection function that\r\n * sets the value of a form state. Setting the value of a group or array will\r\n * also update the values of all children including adding and removing\r\n * children on the fly for added/removed properties/items.\r\n */\r\nexport function setValue<TValue>(value: TValue): (state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and a value and sets the value of\r\n * the state. Setting the value of a group or array will also update the\r\n * values of all children including adding and removing children on the fly\r\n * for added/removed properties/items.\r\n */\r\nexport function setValue<TValue>(state: AbstractControlState<TValue>, value: TValue): FormState<TValue>;\r\n\r\nexport function setValue<TValue>(valueOrState: TValue | AbstractControlState<TValue>, value?: TValue) {\r\n  if (isFormState(valueOrState)) {\r\n    return abstractControlReducer(valueOrState, new SetValueAction(valueOrState.id, value));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => setValue(ensureState(s), valueOrState);\r\n}\r\n","import { SetErrorsAction } from '../actions';\r\nimport { formStateReducer } from '../reducer';\r\nimport { AbstractControlState, FormState, isFormState, ValidationErrors } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a form state and a number of error objects and sets the\r\n * errors of the state.\r\n */\r\nexport function setErrors<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  errors: ValidationErrors,\r\n  ...rest: ValidationErrors[]\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and an array of error objects and sets the\r\n * errors of the state.\r\n */\r\nexport function setErrors<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  errorsArray: ValidationErrors[],\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a number of error objects and returns a projection\r\n * function that sets the errors of a form state.\r\n */\r\nexport function setErrors(errors: ValidationErrors, ...rest: ValidationErrors[]): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of error objects and returns a projection\r\n * function that sets the errors of a form state.\r\n */\r\nexport function setErrors(errorsArray: ValidationErrors[]): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\nexport function setErrors<TValue>(\r\n  errorsOrErrorsArrayOrState: ValidationErrors | ValidationErrors[] | FormState<TValue>,\r\n  errorsOrErrorsArray?: ValidationErrors | ValidationErrors[],\r\n  ...rest: ValidationErrors[]\r\n) {\r\n  if (isFormState<TValue>(errorsOrErrorsArrayOrState)) {\r\n    const errorsArray = Array.isArray(errorsOrErrorsArray) ? errorsOrErrorsArray : [errorsOrErrorsArray!];\r\n    const errors = errorsArray.concat(...rest).reduce((agg, err) => Object.assign(agg, err), {} as ValidationErrors);\r\n\r\n    return formStateReducer(errorsOrErrorsArrayOrState, new SetErrorsAction(errorsOrErrorsArrayOrState.id, errors));\r\n  }\r\n\r\n  let errorsArray = Array.isArray(errorsOrErrorsArrayOrState) ? errorsOrErrorsArrayOrState : [errorsOrErrorsArrayOrState];\r\n  errorsArray = errorsOrErrorsArray === undefined ? errorsArray : errorsArray.concat(errorsOrErrorsArray);\r\n  return (s: AbstractControlState<TValue>) => setErrors<TValue>(ensureState(s), errorsArray.concat(rest));\r\n}\r\n","import { SetErrorsAction } from '../actions';\r\nimport { formStateReducer } from '../reducer';\r\nimport { AbstractControlState, FormState, isFormState, ValidationErrors } from '../state';\r\nimport { ensureState } from './util';\r\n\r\nexport type ValidationFn<TValue> = (value: TValue) => ValidationErrors;\r\n\r\n/**\r\n * This update function takes one or more validation functions and a form\r\n * state and sets the errors of the state to the result of applying the\r\n * given validation function(s) to the state's value.\r\n */\r\nexport function validate<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  fn: ValidationFn<TValue>,\r\n  ...rest: ValidationFn<TValue>[]\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of validation functions and a form\r\n * state and sets the errors of the state to the result of applying the given\r\n * validation function(s) to the state's value.\r\n */\r\nexport function validate<TValue>(\r\n  state: AbstractControlState<TValue>,\r\n  rest: ValidationFn<TValue>[],\r\n): FormState<TValue>;\r\n\r\n/**\r\n * This update function takes one or more validation functions and returns\r\n * a projection function that sets the errors of a form state to the result\r\n * of applying the given validation function(s) to the state's value.\r\n */\r\nexport function validate<TValue>(\r\n  fn: ValidationFn<TValue>,\r\n  ...rest: ValidationFn<TValue>[]\r\n): (state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes an array of validation functions and returns a\r\n * projection function that sets the errors of a form state to the result of\r\n * applying the given validation function(s) to the state's value.\r\n */\r\nexport function validate<TValue>(\r\n  rest: ValidationFn<TValue>[],\r\n): (state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\nexport function validate<TValue>(\r\n  stateOrFunctionOrFunctionArray: FormState<TValue> | ValidationFn<TValue> | ValidationFn<TValue>[],\r\n  functionOrFunctionArr?: ValidationFn<TValue> | ValidationFn<TValue>[],\r\n  ...rest: ValidationFn<TValue>[]\r\n) {\r\n  if (isFormState<TValue>(stateOrFunctionOrFunctionArray)) {\r\n    const functionArr = Array.isArray(functionOrFunctionArr) ? functionOrFunctionArr : [functionOrFunctionArr!];\r\n    const errors = functionArr.concat(...rest)\r\n      .reduce((agg, validationFn) => Object.assign(agg, validationFn(stateOrFunctionOrFunctionArray.value)), {} as ValidationErrors);\r\n    return formStateReducer<TValue>(stateOrFunctionOrFunctionArray, new SetErrorsAction(stateOrFunctionOrFunctionArray.id, errors));\r\n  }\r\n\r\n  let updateFnArr = Array.isArray(stateOrFunctionOrFunctionArray) ? stateOrFunctionOrFunctionArray : [stateOrFunctionOrFunctionArray];\r\n  updateFnArr = functionOrFunctionArr === undefined ? updateFnArr : updateFnArr.concat(functionOrFunctionArr);\r\n  return (s: AbstractControlState<TValue>) => validate<TValue>(ensureState(s), updateFnArr.concat(rest));\r\n}\r\n","import { EnableAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and enables it.\r\n */\r\nexport function enable<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and enables it and all of its children.\r\n */\r\nexport function enable<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and enables it and all of its children.\r\n */\r\nexport function enable<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and enables it. For groups and arrays also\r\n * enables all children.\r\n */\r\nexport function enable<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function enable<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new EnableAction(state.id));\r\n}\r\n","import { DisableAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and disables it. Disabling a control\r\n * will clear all of its errors (i.e. making it always valid) and will remove all\r\n * pending validations (thereby effectively cancelling those validations).\r\n */\r\nexport function disable<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and disables it and all of its children.\r\n * Disabling a control will clear all of its errors (i.e. making it always valid) and\r\n * will remove all pending validations (thereby effectively cancelling those validations).\r\n */\r\nexport function disable<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and disables it and all of its children.\r\n * Disabling a control will clear all of its errors (i.e. making it always valid) and\r\n * will remove all pending validations (thereby effectively cancelling those validations).\r\n */\r\nexport function disable<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and disables it. For groups and arrays also\r\n * disables all children. Disabling a control will clear all of its errors (i.e. making\r\n * it always valid) and will remove all pending validations (thereby effectively\r\n * cancelling those validations).\r\n */\r\nexport function disable<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function disable<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new DisableAction(state.id));\r\n}\r\n","import { MarkAsDirtyAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as dirty.\r\n */\r\nexport function markAsDirty<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as dirty.\r\n */\r\nexport function markAsDirty<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as dirty.\r\n */\r\nexport function markAsDirty<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as dirty. For groups and arrays this also marks\r\n * all children as dirty.\r\n */\r\nexport function markAsDirty<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsDirty<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsDirtyAction(state.id));\r\n}\r\n","import { MarkAsPristineAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as pristine.\r\n */\r\nexport function markAsPristine<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as pristine.\r\n */\r\nexport function markAsPristine<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as pristine.\r\n */\r\nexport function markAsPristine<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as pristine. For groups and arrays this also marks\r\n * all children as pristine.\r\n */\r\nexport function markAsPristine<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsPristine<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsPristineAction(state.id));\r\n}\r\n","import { MarkAsTouchedAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as touched.\r\n */\r\nexport function markAsTouched<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as touched.\r\n */\r\nexport function markAsTouched<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as touched.\r\n */\r\nexport function markAsTouched<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as touched. For groups and arrays this also marks\r\n * all children as touched.\r\n */\r\nexport function markAsTouched<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsTouched<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsTouchedAction(state.id));\r\n}\r\n","import { MarkAsUntouchedAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as untouched.\r\n */\r\nexport function markAsUntouched<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as untouched.\r\n */\r\nexport function markAsUntouched<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as untouched.\r\n */\r\nexport function markAsUntouched<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as untouched. For groups and arrays this also marks\r\n * all children as untouched.\r\n */\r\nexport function markAsUntouched<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsUntouched<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsUntouchedAction(state.id));\r\n}\r\n","import { MarkAsSubmittedAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as submitted.\r\n */\r\nexport function markAsSubmitted<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as submitted.\r\n */\r\nexport function markAsSubmitted<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as submitted.\r\n */\r\nexport function markAsSubmitted<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as submitted. For groups and arrays this also marks\r\n * all children as submitted.\r\n */\r\nexport function markAsSubmitted<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsSubmitted<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsSubmittedAction(state.id));\r\n}\r\n","import { MarkAsUnsubmittedAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as unsubmitted.\r\n */\r\nexport function markAsUnsubmitted<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as unsubmitted.\r\n */\r\nexport function markAsUnsubmitted<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as unsubmitted.\r\n */\r\nexport function markAsUnsubmitted<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as unsubmitted. For groups and arrays this also marks\r\n * all children as unsubmitted.\r\n */\r\nexport function markAsUnsubmitted<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function markAsUnsubmitted<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsUnsubmittedAction(state.id));\r\n}\r\n","import { FocusAction } from '../actions';\r\nimport { formControlReducer } from '../control/reducer';\r\nimport { FormControlState, FormControlValueTypes } from '../state';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as focused (which\r\n * will also `.focus()` the form element).\r\n */\r\nexport function focus<TValue extends FormControlValueTypes>(state: FormControlState<TValue>) {\r\n  return formControlReducer(state, new FocusAction(state.id));\r\n}\r\n","import { UnfocusAction } from '../actions';\r\nimport { formControlReducer } from '../control/reducer';\r\nimport { FormControlState, FormControlValueTypes } from '../state';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as not focused (which\r\n * will also `.blur()` the form element).\r\n */\r\nexport function unfocus<TValue extends FormControlValueTypes>(state: FormControlState<TValue>) {\r\n  return formControlReducer(state, new UnfocusAction(state.id));\r\n}\r\n","import { AddArrayControlAction } from '../actions';\r\nimport { formArrayReducer } from '../array/reducer';\r\nimport { FormArrayState, isArrayState } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a value and optionally an index and returns a projection function\r\n * that adds a child control at the given index or at the end of a form array state.\r\n */\r\nexport function addArrayControl<TValue>(value: TValue, index?: number): (state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes an array form state, a value, and optionally an index and adds a\r\n * child control at the given index or at the end of the state.\r\n */\r\nexport function addArrayControl<TValue>(state: FormArrayState<TValue>, value: TValue, index?: number): FormArrayState<TValue>;\r\n\r\nexport function addArrayControl<TValue>(valueOrState: TValue | FormArrayState<TValue>, indexOrValue: number | TValue | undefined, index?: number) {\r\n  if (isArrayState(valueOrState)) {\r\n    return formArrayReducer(valueOrState, new AddArrayControlAction(valueOrState.id, indexOrValue as TValue, index));\r\n  }\r\n\r\n  return (s: FormArrayState<TValue>) => addArrayControl(ensureState(s), valueOrState as TValue, indexOrValue as number);\r\n}\r\n","import { AddGroupControlAction } from '../actions';\r\nimport { formGroupReducer } from '../group/reducer';\r\nimport { FormGroupState, isGroupState, KeyValue } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and a value and returns a projection function\r\n * that adds a child control with the given name and value to a form group state.\r\n */\r\nexport function addGroupControl<TValue extends KeyValue, TControlKey extends keyof TValue = keyof TValue>(\r\n  name: TControlKey,\r\n  value: TValue[TControlKey],\r\n): (state: FormGroupState<TValue>) => FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state, a name, and a value, and adds a child\r\n * control with the given name and value to the form group state.\r\n */\r\nexport function addGroupControl<TValue extends KeyValue, TControlKey extends keyof TValue = keyof TValue>(\r\n  state: FormGroupState<TValue>,\r\n  name: TControlKey,\r\n  value: TValue[TControlKey],\r\n): FormGroupState<TValue>;\r\n\r\nexport function addGroupControl<TValue extends KeyValue, TControlKey extends keyof TValue = keyof TValue>(\r\n  nameOrState: TControlKey | FormGroupState<TValue>,\r\n  valueOrName: TValue[TControlKey] | TControlKey,\r\n  value?: TValue[TControlKey],\r\n) {\r\n  if (isGroupState(nameOrState)) {\r\n    return formGroupReducer(nameOrState, new AddGroupControlAction<TValue, TControlKey>(nameOrState.id, valueOrName as TControlKey, value!));\r\n  }\r\n\r\n  return (s: FormGroupState<TValue>) => addGroupControl(ensureState(s), nameOrState as TControlKey, valueOrName as TValue[TControlKey]);\r\n}\r\n","import { RemoveArrayControlAction } from '../actions';\r\nimport { formArrayReducer } from '../array/reducer';\r\nimport { FormArrayState, isArrayState } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes an index and returns a projection function\r\n * that removes the child control at the given index from a form array state.\r\n */\r\nexport function removeArrayControl(index: number): <TValue>(state: FormArrayState<TValue>) => FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes an array form state and an index and removes the\r\n * child control at the given index from the state.\r\n */\r\nexport function removeArrayControl<TValue>(state: FormArrayState<TValue>, index: number): FormArrayState<TValue>;\r\n\r\nexport function removeArrayControl<TValue>(indexOrState: number | FormArrayState<TValue>, index?: number) {\r\n  if (isArrayState(indexOrState)) {\r\n    return formArrayReducer(indexOrState, new RemoveArrayControlAction(indexOrState.id, index!));\r\n  }\r\n\r\n  return (s: FormArrayState<TValue>) => removeArrayControl(ensureState(s), indexOrState as number);\r\n}\r\n","import { RemoveGroupControlAction } from '../actions';\r\nimport { formGroupReducer } from '../group/reducer';\r\nimport { FormGroupState, isGroupState, KeyValue } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and returns a projection function\r\n * that removes the child control with the given name from a form group state.\r\n */\r\nexport function removeGroupControl<TValue extends KeyValue>(name: keyof TValue): (state: FormGroupState<TValue>) => FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a group form state and a name and removes the\r\n * child control with the given name from the state.\r\n */\r\nexport function removeGroupControl<TValue extends KeyValue>(state: FormGroupState<TValue>, name: keyof TValue): FormGroupState<TValue>;\r\n\r\nexport function removeGroupControl<TValue extends KeyValue>(nameOrState: keyof TValue | FormGroupState<TValue>, name?: keyof TValue) {\r\n  if (isGroupState(nameOrState)) {\r\n    return formGroupReducer(nameOrState, new RemoveGroupControlAction<TValue>(nameOrState.id, name!));\r\n  }\r\n\r\n  return (s: FormGroupState<TValue>) => removeGroupControl(ensureState(s), nameOrState as keyof TValue);\r\n}\r\n","import { SetUserDefinedPropertyAction } from '../actions';\r\nimport { formStateReducer } from '../reducer';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and a value and returns a projection\r\n * function that sets a user-defined property on a form state.\r\n */\r\nexport function setUserDefinedProperty(name: string, value: any): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state, a name, and a value and sets\r\n * a user-defined property on the state.\r\n */\r\nexport function setUserDefinedProperty<TValue>(state: AbstractControlState<TValue>, name: string, value: any): FormState<TValue>;\r\n\r\nexport function setUserDefinedProperty<TValue>(nameOrState: string | FormState<TValue>, valueOrName: any | string, value?: any) {\r\n  if (isFormState<TValue>(nameOrState)) {\r\n    return formStateReducer(nameOrState, new SetUserDefinedPropertyAction(nameOrState.id, valueOrName, value));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => setUserDefinedProperty(ensureState(s), nameOrState, valueOrName);\r\n}\r\n","import { ResetAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState, FormState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as pristine,\r\n * untouched, and unsubmitted.\r\n */\r\nexport function reset<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its\r\n * children as pristine, untouched, and unsubmitted.\r\n */\r\nexport function reset<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its\r\n * children as pristine, untouched, and unsubmitted.\r\n */\r\nexport function reset<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as pristine, untouched, and\r\n * unsubmitted. For groups and arrays this also marks all children as pristine,\r\n * untouched, and unsubmitted.\r\n */\r\nexport function reset<TValue>(state: AbstractControlState<TValue>): FormState<TValue>;\r\n\r\nexport function reset<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new ResetAction(state.id));\r\n}\r\n","import { StartAsyncValidationAction } from '../actions';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and returns a projection function that\r\n * marks the async validation for the given name as pending.\r\n */\r\nexport function startAsyncValidation(name: string): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and a name and marks the async\r\n * validation for the given name as pending.\r\n */\r\nexport function startAsyncValidation<TValue>(state: AbstractControlState<TValue>, name: string): FormState<TValue>;\r\n\r\nexport function startAsyncValidation<TValue>(nameOrState: string | AbstractControlState<TValue>, name?: string) {\r\n  if (isFormState(nameOrState)) {\r\n    return abstractControlReducer(nameOrState, new StartAsyncValidationAction(nameOrState.id, name!));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => startAsyncValidation(ensureState(s), nameOrState);\r\n}\r\n","import { SetAsyncErrorAction } from '../actions';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and a value and returns a projection\r\n * function that sets the async error for the given name to the given value.\r\n * It also marks the validation for the name as not pending anymore if it\r\n * was pending.\r\n */\r\nexport function setAsyncError(name: string, value: any): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state, a name, and a value and sets the\r\n * async error for the given name to the given value. It also marks the\r\n * validation for the name as not pending anymore if it was pending.\r\n */\r\nexport function setAsyncError<TValue>(state: AbstractControlState<TValue>, name: string, value: any): FormState<TValue>;\r\n\r\nexport function setAsyncError<TValue>(nameOrState: string | AbstractControlState<TValue>, nameOrValue?: string | any, value?: any) {\r\n  if (isFormState(nameOrState)) {\r\n    return abstractControlReducer(nameOrState, new SetAsyncErrorAction(nameOrState.id, nameOrValue, value));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => setAsyncError(ensureState(s), nameOrState, nameOrValue);\r\n}\r\n","import { ClearAsyncErrorAction } from '../actions';\r\nimport { AbstractControlState, FormState, isFormState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and returns a projection function that\r\n * clears the async error with the given name.\r\n */\r\nexport function clearAsyncError(name: string): <TValue>(state: AbstractControlState<TValue>) => FormState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and a name, and clears the async\r\n * error with the given name.\r\n */\r\nexport function clearAsyncError<TValue>(state: AbstractControlState<TValue>, name: string): FormState<TValue>;\r\n\r\nexport function clearAsyncError<TValue>(nameOrState: string | AbstractControlState<TValue>, name?: string) {\r\n  if (isFormState(nameOrState)) {\r\n    return abstractControlReducer(nameOrState, new ClearAsyncErrorAction(nameOrState.id, name!));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => clearAsyncError(ensureState(s), nameOrState);\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface FormViewAdapter {\r\n  /**\r\n   * Sets a new value for the form element.\r\n   */\r\n  setViewValue(value: any): void;\r\n\r\n  /**\r\n   * Set the function to be called when the form element receives a change event.\r\n   */\r\n  setOnChangeCallback(fn: (value: any) => void): void;\r\n\r\n  /**\r\n   * Set the function to be called when the form element receives a touch event.\r\n   */\r\n  setOnTouchedCallback(fn: () => void): void;\r\n\r\n  /**\r\n   * Enable or disable the form element.\r\n   */\r\n  setIsDisabled?(isDisabled: boolean): void;\r\n}\r\n\r\n/**\r\n * Used to provide a {@link FormViewAdapter} for form elements.\r\n */\r\nexport const NGRX_FORM_VIEW_ADAPTER = new InjectionToken<FormViewAdapter>('NgrxFormViewAdapter');\r\n","import { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'input[type=checkbox][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxCheckboxViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxCheckboxViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChange: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'checked', value);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  handleInput({ target }: { target: HTMLInputElement }): void {\r\n    this.onChange(target.checked);\r\n  }\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Inject, Input, Optional, PLATFORM_ID, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\nexport interface Navigator {\r\n  userAgent: string;\r\n}\r\n\r\n/**\r\n * We must check whether the agent is Android because composition events\r\n * behave differently between iOS and Android.\r\n */\r\nfunction isAndroid(navigator: Navigator): boolean {\r\n  return /android (\\d+)/.test(navigator.userAgent.toLowerCase());\r\n}\r\n\r\n// tslint:disable:directive-class-suffix\r\n// tslint:disable:directive-selector\r\n\r\n// TODO: since this directive has a side-effect (setting the element's id attribute)\r\n// it should not blacklist other types of inputs but instead it should somehow figure\r\n// out whether it is the \"active\" view adapter and only perform its side effects if it\r\n// is active\r\n@Directive({\r\n  selector: 'input:not([type=checkbox]):not([type=number]):not([type=radio]):not([type=range])[ngrxFormControlState],textarea[ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxDefaultViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxDefaultViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChange: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  /** Whether the user is creating a composition string (IME events). */\r\n  private isComposing = false;\r\n  private isCompositionSupported: boolean;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    @Optional() @Inject(PLATFORM_ID) private platformId: string | null = null,\r\n    // we use a special injection string that should never exist at runtime to allow mocking this dependency for testing\r\n    @Optional() @Inject('ngrx-forms/never') navigator: Navigator | null = null,\r\n  ) {\r\n    this.isCompositionSupported = isPlatformBrowser(this.platformId || '') && !isAndroid(navigator || window.navigator);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    const normalizedValue = value == null ? '' : value;\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('input', ['$event'])\r\n  handleInput({ target }: { target: HTMLInputElement }): void {\r\n    if (this.isCompositionSupported && this.isComposing) {\r\n      return;\r\n    }\r\n\r\n    this.onChange(target.value);\r\n  }\r\n\r\n  @HostListener('compositionstart')\r\n  compositionStart(): void {\r\n    this.isComposing = true;\r\n  }\r\n\r\n  @HostListener('compositionend', ['$event'])\r\n  compositionEnd({ target }: { target: HTMLInputElement }): void {\r\n    this.isComposing = false;\r\n    if (this.isCompositionSupported) {\r\n      this.onChange(target.value);\r\n    }\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'input[type=number][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxNumberViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxNumberViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChange: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\r\n    const normalizedValue = value === null ? '' : value;\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  @HostListener('input', ['$event'])\r\n  handleInput({ target }: { target: HTMLInputElement }): void {\r\n    const value = target.value;\r\n    this.onChange(value === '' ? null : parseFloat(value));\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'select:not([multiple])[ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxSelectViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxSelectViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private optionMap: { [id: string]: any } = {};\r\n  private idCounter = 0;\r\n  private selectedId: string | null = null;\r\n  private value: any = undefined;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChangeFn: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any) {\r\n    this.value = value;\r\n    this.selectedId = this.getOptionId(value);\r\n    if (this.selectedId === null) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'selectedIndex', -1);\r\n    }\r\n\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', this.selectedId);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  onChange({ target }: { target: HTMLOptionElement }) {\r\n    this.selectedId = target.value;\r\n    const value = this.optionMap[this.selectedId];\r\n    this.value = value;\r\n    this.onChangeFn(value);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void) {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  createOptionId() {\r\n    const id = this.idCounter.toString();\r\n    this.idCounter += 1;\r\n    return id;\r\n  }\r\n\r\n  updateOptionValue(id: string, value: any) {\r\n    this.optionMap[id] = value;\r\n\r\n    if (this.selectedId === id) {\r\n      this.onChangeFn(value);\r\n    } else if (value === this.value) {\r\n      this.setViewValue(value);\r\n    }\r\n  }\r\n\r\n  deregisterOption(id: string) {\r\n    delete this.optionMap[id];\r\n  }\r\n\r\n  private getOptionId(value: any) {\r\n    for (const id of Array.from(Object.keys(this.optionMap))) {\r\n      if (this.optionMap[id] === value) {\r\n        return id;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst NULL_VIEW_ADAPTER: NgrxSelectViewAdapter = {\r\n  createOptionId: () => '',\r\n  deregisterOption: () => void 0,\r\n  updateOptionValue: () => void 0,\r\n} as any;\r\n\r\nconst NULL_RENDERER: Renderer2 = {\r\n  setProperty: () => void 0,\r\n} as any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'option',\r\n})\r\nexport class NgrxSelectOption implements OnDestroy {\r\n  private isInitialized = false;\r\n  id: string;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Host() @Optional() private viewAdapter: NgrxSelectViewAdapter,\r\n  ) {\r\n    this.renderer = viewAdapter ? renderer : NULL_RENDERER;\r\n    this.viewAdapter = viewAdapter || NULL_VIEW_ADAPTER;\r\n    this.id = this.viewAdapter.createOptionId();\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: any) {\r\n    // this cannot be done inside ngOnInit since the value property\r\n    // must be already set when the option value is updated in the view\r\n    // adapter and the initial binding of 'value' happens before\r\n    // ngOnInit runs\r\n    if (!this.isInitialized) {\r\n      this.isInitialized = true;\r\n      this.renderer.setProperty(this.element.nativeElement, 'value', this.id);\r\n    }\r\n\r\n    this.viewAdapter.updateOptionValue(this.id, value);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewAdapter.deregisterOption(this.id);\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'select[multiple][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxSelectMultipleViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxSelectMultipleViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private options: { [id: string]: NgrxSelectMultipleOption } = {};\r\n  private optionValues: { [id: string]: any } = {};\r\n  private idCounter = 0;\r\n  private selectedIds: string[] = [];\r\n  private nativeIdWasSet = false;\r\n\r\n  onChangeFn: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any) {\r\n    if (value === null) {\r\n      value = [];\r\n    }\r\n\r\n    if (!Array.isArray(value)) {\r\n      throw new Error(`the value provided to a NgrxSelectMultipleViewAdapter must be null or an array; got ${value} of type ${typeof value}`); // `\r\n    }\r\n\r\n    this.selectedIds = value.map(v => this.getOptionId(v)).filter(id => id !== null).map(id => id as string);\r\n    Object.keys(this.options).forEach(id => this.options[id].isSelected = this.selectedIds.indexOf(id) >= 0);\r\n  }\r\n\r\n  @HostListener('change')\r\n  onChange() {\r\n    this.selectedIds = Object.keys(this.options).filter(id => this.options[id].isSelected);\r\n    const value = this.selectedIds.map(id => this.optionValues[id]);\r\n    this.onChangeFn(value);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void) {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  registerOption(option: NgrxSelectMultipleOption) {\r\n    const id = this.idCounter.toString();\r\n    this.options[id] = option;\r\n    this.idCounter += 1;\r\n    return id;\r\n  }\r\n\r\n  updateOptionValue(id: string, value: any) {\r\n    this.optionValues[id] = value;\r\n\r\n    if (this.selectedIds.indexOf(id) >= 0) {\r\n      this.onChange();\r\n    }\r\n  }\r\n\r\n  deregisterOption(id: string) {\r\n    delete this.options[id];\r\n    delete this.optionValues[id];\r\n  }\r\n\r\n  private getOptionId(value: any) {\r\n    for (const id of Array.from(Object.keys(this.optionValues))) {\r\n      if (this.optionValues[id] === value) {\r\n        return id;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst NULL_VIEW_ADAPTER: NgrxSelectMultipleViewAdapter = {\r\n  registerOption: () => '',\r\n  deregisterOption: () => void 0,\r\n  updateOptionValue: () => void 0,\r\n} as any;\r\n\r\nconst NULL_RENDERER: Renderer2 = {\r\n  setProperty: () => void 0,\r\n} as any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'option',\r\n})\r\nexport class NgrxSelectMultipleOption implements OnInit, OnDestroy {\r\n  id: string;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Host() @Optional() private viewAdapter: NgrxSelectMultipleViewAdapter,\r\n  ) {\r\n    this.renderer = viewAdapter ? renderer : NULL_RENDERER;\r\n    this.viewAdapter = viewAdapter || NULL_VIEW_ADAPTER;\r\n    this.id = this.viewAdapter.registerOption(this);\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: any) {\r\n    this.viewAdapter.updateOptionValue(this.id, value);\r\n  }\r\n\r\n  set isSelected(selected: boolean) {\r\n    this.renderer.setProperty(this.element.nativeElement, 'selected', selected);\r\n  }\r\n\r\n  get isSelected() {\r\n    return (this.element.nativeElement as HTMLOptionElement).selected;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.renderer.setProperty(this.element.nativeElement, 'value', this.id);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewAdapter.deregisterOption(this.id);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\nimport { NgrxSelectViewAdapter } from './select';\r\nimport { NgrxSelectMultipleViewAdapter } from './select-multiple';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\nconst NULL_RENDERER: Renderer2 = {\r\n  setProperty: () => void 0,\r\n} as any;\r\n\r\n/**\r\n * This directive is necessary to restore the default behaviour of Angular\r\n * when an `option` is used without an **ngrx-forms** form state. Since it\r\n * is not possible to select an element with a selector that considers its\r\n * parent the `option` directives for `select` and `select[multiple]` will\r\n * always be applied and therefore overriding the `[value]` binding which\r\n * disabled Angular's normal behaviour. This directive restores this\r\n * behaviour if no `select` or `select[multiple]` view adapter is found.\r\n * This is not a perfect solution since it may interfere with other\r\n * directives that try to set the `[value]` but that is very unlikely.\r\n */\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'option',\r\n})\r\nexport class NgrxFallbackSelectOption {\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Host() @Optional() viewAdapter: NgrxSelectViewAdapter,\r\n    @Host() @Optional() multipleViewAdapter: NgrxSelectMultipleViewAdapter,\r\n  ) {\r\n    this.renderer = viewAdapter || multipleViewAdapter ? NULL_RENDERER : renderer;\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: any) {\r\n    this.renderer.setProperty(this.element.nativeElement, 'value', value);\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Input, OnInit, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'input[type=radio][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxRadioViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxRadioViewAdapter implements FormViewAdapter, OnInit, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeNameWasSet = false;\r\n\r\n  @Input() set value(val: any) {\r\n    if (val !== this.latestValue) {\r\n      this.latestValue = val;\r\n      if (this.isChecked) {\r\n        this.onChange();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeName = this.elementRef.nativeElement.name;\r\n    const shouldSetNativeName = value.id !== nativeName && this.nativeNameWasSet;\r\n    if (shouldSetNativeName) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'name', value.id);\r\n    }\r\n  }\r\n\r\n  private latestValue: any;\r\n  private isChecked: boolean;\r\n\r\n  @HostListener('change')\r\n  onChange: () => void = () => void 0\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.isChecked = (this.elementRef.nativeElement as HTMLInputElement).checked;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeName = this.elementRef.nativeElement.name;\r\n    const shouldSetNativeName = this.state.id !== nativeName && !nativeName;\r\n    if (shouldSetNativeName) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'name', this.state.id);\r\n      this.nativeNameWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    this.isChecked = value === this.latestValue;\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'checked', this.isChecked);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (_: any) => void): void {\r\n    this.onChange = () => fn(this.latestValue);\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'input[type=range][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxRangeViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxRangeViewAdapter implements FormViewAdapter, AfterViewInit {\r\n  private state: FormControlState<any>;\r\n  private nativeIdWasSet = false;\r\n\r\n  onChange: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    this.state = value;\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = value.id !== nativeId && this.nativeIdWasSet;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  ngAfterViewInit() {\r\n    const nativeId = this.elementRef.nativeElement.id;\r\n    const shouldSetNativeId = this.state.id !== nativeId && !nativeId;\r\n    if (shouldSetNativeId) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', this.state.id);\r\n      this.nativeIdWasSet = true;\r\n    }\r\n  }\r\n\r\n  setViewValue(value: any): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', parseFloat(value));\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  @HostListener('input', ['$event'])\r\n  handleInput({ target }: { target: HTMLInputElement }): void {\r\n    const value = target.value;\r\n    this.onChange(value === '' ? null : parseFloat(value));\r\n  }\r\n}\r\n","import { NgrxCheckboxViewAdapter } from './checkbox';\r\nimport { NgrxDefaultViewAdapter } from './default';\r\nimport { NgrxNumberViewAdapter } from './number';\r\nimport { NgrxRadioViewAdapter } from './radio';\r\nimport { NgrxRangeViewAdapter } from './range';\r\nimport { NgrxSelectViewAdapter } from './select';\r\nimport { NgrxSelectMultipleViewAdapter } from './select-multiple';\r\nimport { FormViewAdapter } from './view-adapter';\r\n\r\nconst BUILTIN_ADAPTERS = [\r\n  NgrxCheckboxViewAdapter,\r\n  NgrxRangeViewAdapter,\r\n  NgrxNumberViewAdapter,\r\n  NgrxSelectViewAdapter,\r\n  NgrxSelectMultipleViewAdapter,\r\n  NgrxRadioViewAdapter,\r\n];\r\n\r\nexport function isBuiltInViewAdapter(viewAdapter: FormViewAdapter): boolean {\r\n  return BUILTIN_ADAPTERS.some(a => viewAdapter.constructor === a);\r\n}\r\n\r\nexport function selectViewAdapter(viewAdapters: FormViewAdapter[]): FormViewAdapter {\r\n  if (!viewAdapters) {\r\n    throw new Error('No view adapter matches!');\r\n  }\r\n\r\n  let defaultAdapter: FormViewAdapter | undefined;\r\n  let builtinAdapter: FormViewAdapter | undefined;\r\n  let customAdapter: FormViewAdapter | undefined;\r\n  viewAdapters.forEach((v: FormViewAdapter) => {\r\n    if (v.constructor === NgrxDefaultViewAdapter) {\r\n      defaultAdapter = v;\r\n    } else if (isBuiltInViewAdapter(v)) {\r\n      if (builtinAdapter) {\r\n        throw new Error('More than one built-in view adapter matches!');\r\n      }\r\n\r\n      builtinAdapter = v;\r\n    } else {\r\n      if (customAdapter) {\r\n        throw new Error('More than one custom view adapter matches!');\r\n      }\r\n\r\n      customAdapter = v;\r\n    }\r\n  });\r\n\r\n  if (customAdapter) {\r\n    return customAdapter;\r\n  }\r\n\r\n  if (builtinAdapter) {\r\n    return builtinAdapter;\r\n  }\r\n\r\n  if (defaultAdapter) {\r\n    return defaultAdapter;\r\n  }\r\n\r\n  throw new Error('No valid view adapter!');\r\n}\r\n","import { box, Boxed, unbox } from '../boxing';\r\n\r\nexport interface NgrxValueConverter<TView, TState> {\r\n  convertViewToStateValue(value: TView): TState;\r\n  convertStateToViewValue(value: TState): TView;\r\n}\r\n\r\n// tslint:disable-next-line:variable-name\r\nexport const NgrxValueConverters = {\r\n  default<T>() {\r\n    return {\r\n      convertViewToStateValue: value => typeof value === 'object' && value !== null ? box(value) : value,\r\n      convertStateToViewValue: unbox,\r\n    } as NgrxValueConverter<T, Boxed<T> | T>;\r\n  },\r\n  dateToISOString: {\r\n    convertViewToStateValue: date => date === null ? null : date.toISOString(),\r\n    convertStateToViewValue: s => s === null ? null : new Date(Date.parse(s)),\r\n  } as NgrxValueConverter<Date | null, string | null>,\r\n  objectToJSON: {\r\n    convertViewToStateValue: value => value === null ? null : JSON.stringify(value),\r\n    convertStateToViewValue: s => s === null ? null : JSON.parse(s),\r\n  } as NgrxValueConverter<{} | null, string | null>,\r\n};\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  Self,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ActionsSubject } from '@ngrx/store';\r\n\r\nimport { Actions, FocusAction, MarkAsDirtyAction, MarkAsTouchedAction, SetValueAction, UnfocusAction } from '../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../state';\r\nimport { selectViewAdapter } from '../view-adapter/util';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from '../view-adapter/view-adapter';\r\nimport { NgrxValueConverter, NgrxValueConverters } from './value-converter';\r\n\r\nexport interface Document {\r\n  activeElement: any;\r\n}\r\n\r\nexport enum NGRX_UPDATE_ON_TYPE {\r\n  CHANGE = 'change',\r\n  BLUR = 'blur',\r\n  NEVER = 'never',\r\n}\r\n\r\nclass ControlValueAccessorAdapter implements FormViewAdapter {\r\n  constructor(private valueAccessor: ControlValueAccessor) { }\r\n\r\n  setViewValue(value: any): void {\r\n    this.valueAccessor.writeValue(value);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.valueAccessor.registerOnChange(fn);\r\n  }\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.valueAccessor.registerOnTouched(fn);\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean) {\r\n    if (this.valueAccessor.setDisabledState) {\r\n      this.valueAccessor.setDisabledState(isDisabled);\r\n    }\r\n  }\r\n}\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: ':not([ngrxFormsAction])[ngrxFormControlState]',\r\n})\r\nexport class NgrxFormControlDirective<TStateValue extends FormControlValueTypes, TViewValue = TStateValue> implements AfterViewInit, OnInit {\r\n  private isInitialized = false;\r\n  private focusTrackingIsEnabled = false;\r\n\r\n  @Input() set ngrxFormControlState(newState: FormControlState<TStateValue>) {\r\n    if (!newState) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    const oldState = this.state;\r\n    this.state = newState;\r\n\r\n    if (this.isInitialized) {\r\n      this.updateViewIfControlIdChanged(newState, oldState);\r\n      this.updateViewIfValueChanged(newState, oldState);\r\n      this.updateViewIfIsDisabledChanged(newState, oldState);\r\n      this.updateViewIfIsFocusedChanged(newState, oldState);\r\n    }\r\n  }\r\n\r\n  @Input() ngrxUpdateOn: NGRX_UPDATE_ON_TYPE = NGRX_UPDATE_ON_TYPE.CHANGE;\r\n  @Input() set ngrxEnableFocusTracking(value: boolean) {\r\n    if (value && !this.dom) {\r\n      throw new Error('focus tracking is only supported on the browser platform');\r\n    }\r\n\r\n    this.focusTrackingIsEnabled = value;\r\n  }\r\n\r\n  @Input() ngrxValueConverter: NgrxValueConverter<TViewValue, TStateValue> = NgrxValueConverters.default<any>();\r\n\r\n  // TODO: move this into a separate directive\r\n  // automatically apply the attribute that's used by the CDK to set initial focus\r\n  @HostBinding('attr.cdk-focus-region-start') get focusRegionStartAttr() {\r\n    return this.state && this.state.isFocused ? '' : null;\r\n  }\r\n\r\n  state: FormControlState<TStateValue>;\r\n\r\n  private viewAdapter: FormViewAdapter;\r\n\r\n  // we have to store the latest known state value since most input elements don't play nicely with\r\n  // setting the same value again (e.g. input elements move the cursor to the end of the input when\r\n  // a new value is set which means whenever the user types something the cursor is forced to the\r\n  // end of the input) which would for example happen every time a new value is pushed to the state\r\n  // since when the action to update the state is dispatched a new state will be received inside\r\n  // the directive, which in turn would trigger a view update; to prevent this behavior we compare\r\n  // the latest known state value with the value to be set and filter out those values that are equal\r\n  // to the latest known value\r\n  private viewValue: TViewValue;\r\n  private stateValue: TStateValue;\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    // for the dom parameter the `null` type must be last to ensure that in the compiled output\r\n    // there is no reference to the Document type to support non-browser platforms\r\n    @Optional() @Inject(DOCUMENT) private dom: Document | null,\r\n    @Optional() @Inject(ActionsSubject) private actionsSubject: ActionsSubject | null,\r\n    @Self() @Optional() @Inject(NGRX_FORM_VIEW_ADAPTER) viewAdapters: FormViewAdapter[],\r\n    @Self() @Optional() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\r\n  ) {\r\n    viewAdapters = viewAdapters || [];\r\n    valueAccessors = valueAccessors || [];\r\n\r\n    if (valueAccessors.length > 1) {\r\n      throw new Error('More than one custom control value accessor matches!');\r\n    }\r\n\r\n    this.viewAdapter = valueAccessors.length > 0\r\n      ? new ControlValueAccessorAdapter(valueAccessors[0])\r\n      : selectViewAdapter(viewAdapters);\r\n  }\r\n\r\n  updateViewIfControlIdChanged(newState: FormControlState<TStateValue>, oldState: FormControlState<TStateValue> | undefined) {\r\n    if (oldState && newState.id === oldState.id) {\r\n      return;\r\n    }\r\n\r\n    this.stateValue = newState.value;\r\n    this.viewValue = this.ngrxValueConverter.convertStateToViewValue(this.stateValue);\r\n    this.viewAdapter.setViewValue(this.viewValue);\r\n    if (this.viewAdapter.setIsDisabled) {\r\n      this.viewAdapter.setIsDisabled(newState.isDisabled);\r\n    }\r\n  }\r\n\r\n  updateViewIfValueChanged(newState: FormControlState<TStateValue>, _: FormControlState<TStateValue> | undefined) {\r\n    if (newState.value === this.stateValue) {\r\n      return;\r\n    }\r\n\r\n    this.stateValue = newState.value;\r\n    this.viewValue = this.ngrxValueConverter.convertStateToViewValue(newState.value);\r\n    this.viewAdapter.setViewValue(this.viewValue);\r\n  }\r\n\r\n  updateViewIfIsDisabledChanged(newState: FormControlState<TStateValue>, oldState: FormControlState<TStateValue> | undefined) {\r\n    if (!this.viewAdapter.setIsDisabled) {\r\n      return;\r\n    }\r\n\r\n    if (oldState && newState.isDisabled === oldState.isDisabled) {\r\n      return;\r\n    }\r\n\r\n    this.viewAdapter.setIsDisabled(newState.isDisabled);\r\n  }\r\n\r\n  updateViewIfIsFocusedChanged(newState: FormControlState<TStateValue>, oldState: FormControlState<TStateValue> | undefined) {\r\n    if (!this.focusTrackingIsEnabled) {\r\n      return;\r\n    }\r\n\r\n    if (oldState && newState.isFocused === oldState.isFocused) {\r\n      return;\r\n    }\r\n\r\n    if (newState.isFocused) {\r\n      this.el.nativeElement.focus();\r\n    } else {\r\n      this.el.nativeElement.blur();\r\n    }\r\n  }\r\n\r\n  protected dispatchAction(action: Actions<TStateValue>) {\r\n    if (this.actionsSubject !== null) {\r\n      this.actionsSubject.next(action);\r\n    } else {\r\n      throw new Error('ActionsSubject must be present in order to dispatch actions!');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.state) {\r\n      throw new Error('The form state must not be undefined!');\r\n    }\r\n\r\n    this.isInitialized = true;\r\n\r\n    this.updateViewIfControlIdChanged(this.state, undefined);\r\n    this.updateViewIfValueChanged(this.state, undefined);\r\n    this.updateViewIfIsDisabledChanged(this.state, undefined);\r\n    this.updateViewIfIsFocusedChanged(this.state, undefined);\r\n\r\n    const dispatchMarkAsDirtyAction = () => {\r\n      if (this.state.isPristine) {\r\n        this.dispatchAction(new MarkAsDirtyAction(this.state.id));\r\n      }\r\n    };\r\n\r\n    const dispatchSetValueAction = () => {\r\n      this.stateValue = this.ngrxValueConverter.convertViewToStateValue(this.viewValue);\r\n      if (this.stateValue !== this.state.value) {\r\n        this.dispatchAction(new SetValueAction(this.state.id, this.stateValue));\r\n\r\n        dispatchMarkAsDirtyAction();\r\n      }\r\n    };\r\n\r\n    this.viewAdapter.setOnChangeCallback((viewValue: TViewValue) => {\r\n      this.viewValue = viewValue;\r\n\r\n      if (this.ngrxUpdateOn === NGRX_UPDATE_ON_TYPE.CHANGE) {\r\n        dispatchSetValueAction();\r\n      }\r\n    });\r\n\r\n    this.viewAdapter.setOnTouchedCallback(() => {\r\n      if (!this.state.isTouched && this.ngrxUpdateOn !== NGRX_UPDATE_ON_TYPE.NEVER) {\r\n        this.dispatchAction(new MarkAsTouchedAction(this.state.id));\r\n      }\r\n\r\n      if (this.ngrxUpdateOn === NGRX_UPDATE_ON_TYPE.BLUR) {\r\n        dispatchSetValueAction();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // we need to update the view again after it was initialized since some\r\n    // controls depend on child elements for setting the value (e.g. selects)\r\n    this.viewAdapter.setViewValue(this.viewValue);\r\n    if (this.viewAdapter.setIsDisabled) {\r\n      this.viewAdapter.setIsDisabled(this.state.isDisabled);\r\n    }\r\n  }\r\n\r\n  @HostListener('focusin')\r\n  @HostListener('focusout')\r\n  onFocusChange() {\r\n    if (!this.focusTrackingIsEnabled) {\r\n      return;\r\n    }\r\n\r\n    const isControlFocused = this.el.nativeElement === this.dom!.activeElement;\r\n    if (isControlFocused !== this.state.isFocused) {\r\n      this.dispatchAction(isControlFocused ? new FocusAction(this.state.id) : new UnfocusAction(this.state.id));\r\n    }\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { Actions } from '../actions';\r\nimport { FormControlValueTypes } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from '../view-adapter/view-adapter';\r\nimport { Document, NgrxFormControlDirective } from './directive';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[ngrxFormControlState][ngrxFormsAction]',\r\n})\r\nexport class NgrxLocalFormControlDirective<TStateValue extends FormControlValueTypes, TViewValue = TStateValue>\r\n  extends NgrxFormControlDirective<TStateValue, TViewValue> {\r\n\r\n  @Output() ngrxFormsAction = new EventEmitter<Actions<TStateValue>>();\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    @Optional() @Inject(DOCUMENT) dom: Document | null,\r\n    @Self() @Optional() @Inject(NGRX_FORM_VIEW_ADAPTER) viewAdapters: FormViewAdapter[],\r\n    @Self() @Optional() @Inject(NG_VALUE_ACCESSOR) valueAccessors: ControlValueAccessor[],\r\n  ) {\r\n    super(el, dom, null, viewAdapters, valueAccessors);\r\n  }\r\n\r\n  protected dispatchAction(action: Actions<TStateValue>) {\r\n    this.ngrxFormsAction.emit(action);\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject, Input, OnInit, Optional } from '@angular/core';\r\nimport { ActionsSubject } from '@ngrx/store';\r\n\r\nimport { Actions, MarkAsSubmittedAction } from '../actions';\r\nimport { FormGroupState } from '../state';\r\n\r\n// this interface just exists to prevent a direct reference to\r\n// `Event` in our code, which otherwise causes issues in NativeScript\r\n// applications\r\ninterface CustomEvent extends Event { }\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'form:not([ngrxFormsAction])[ngrxFormState]',\r\n})\r\nexport class NgrxFormDirective<TValue extends { [key: string]: any }> implements OnInit {\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('ngrxFormState') state: FormGroupState<TValue>;\r\n\r\n  constructor(\r\n    @Optional() @Inject(ActionsSubject) private actionsSubject: ActionsSubject | null\r\n  ) {\r\n    this.actionsSubject = actionsSubject;\r\n  }\r\n\r\n  protected dispatchAction(action: Actions<TValue>) {\r\n    if (this.actionsSubject !== null) {\r\n      this.actionsSubject.next(action);\r\n    } else {\r\n      throw new Error('ActionsSubject must be present in order to dispatch actions!');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.state) {\r\n      throw new Error('The form state must not be undefined!');\r\n    }\r\n  }\r\n\r\n  @HostListener('submit', ['$event'])\r\n  onSubmit(event: CustomEvent) {\r\n    event.preventDefault();\r\n    if (this.state.isUnsubmitted) {\r\n      this.dispatchAction(new MarkAsSubmittedAction(this.state.id));\r\n    }\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Output } from '@angular/core';\r\n\r\nimport { Actions } from '../actions';\r\nimport { NgrxFormDirective } from './directive';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'form[ngrxFormState][ngrxFormsAction]',\r\n})\r\nexport class NgrxLocalFormDirective<TValue extends { [key: string]: any }>\r\n  extends NgrxFormDirective<TValue> {\r\n\r\n  @Output() ngrxFormsAction = new EventEmitter<Actions<TValue>>();\r\n\r\n  constructor() {\r\n    super(null);\r\n  }\r\n\r\n  protected dispatchAction(action: Actions<TValue>) {\r\n    this.ngrxFormsAction.emit(action);\r\n  }\r\n}\r\n","import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { AbstractControlState } from './state';\r\n\r\n/**\r\n * Lists the available status class names based on the property\r\n * they are depending on.\r\n */\r\nexport const NGRX_STATUS_CLASS_NAMES = {\r\n  isValid: 'ngrx-forms-valid',\r\n  isInvalid: 'ngrx-forms-invalid',\r\n  isDirty: 'ngrx-forms-dirty',\r\n  isPristine: 'ngrx-forms-pristine',\r\n  isTouched: 'ngrx-forms-touched',\r\n  isUntouched: 'ngrx-forms-untouched',\r\n  isSubmitted: 'ngrx-forms-submitted',\r\n  isUnsubmitted: 'ngrx-forms-unsubmitted',\r\n  isValidationPending: 'ngrx-forms-validation-pending',\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'form[ngrxFormState],[ngrxFormControlState]',\r\n})\r\nexport class NgrxStatusCssClassesDirective {\r\n  private state: AbstractControlState<any>;\r\n\r\n  @Input()\r\n  set ngrxFormControlState(state: AbstractControlState<any>) {\r\n    this.state = state;\r\n  }\r\n\r\n  @Input()\r\n  set ngrxFormState(state: AbstractControlState<any>) {\r\n    this.state = state;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isValid}`)\r\n  get isValid() {\r\n    return this.state.isValid;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isInvalid}`)\r\n  get isInvalid() {\r\n    return this.state.isInvalid;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isDirty}`)\r\n  get isDirty() {\r\n    return this.state.isDirty;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isPristine}`)\r\n  get isPristine() {\r\n    return this.state.isPristine;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isTouched}`)\r\n  get isTouched() {\r\n    return this.state.isTouched;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isUntouched}`)\r\n  get isUntouched() {\r\n    return this.state.isUntouched;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isSubmitted}`)\r\n  get isSubmitted() {\r\n    return this.state.isSubmitted;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isUnsubmitted}`)\r\n  get isUnsubmitted() {\r\n    return this.state.isUnsubmitted;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isValidationPending}`)\r\n  get isValidationPending() {\r\n    return this.state.isValidationPending;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { NgrxFormControlDirective } from './control/directive';\r\nimport { NgrxLocalFormControlDirective } from './control/local-state-directive';\r\nimport { NgrxFormDirective } from './group/directive';\r\nimport { NgrxLocalFormDirective } from './group/local-state-directive';\r\nimport { NgrxStatusCssClassesDirective } from './status-css-classes.directive';\r\nimport { NgrxCheckboxViewAdapter } from './view-adapter/checkbox';\r\nimport { NgrxDefaultViewAdapter } from './view-adapter/default';\r\nimport { NgrxNumberViewAdapter } from './view-adapter/number';\r\nimport { NgrxFallbackSelectOption } from './view-adapter/option';\r\nimport { NgrxRadioViewAdapter } from './view-adapter/radio';\r\nimport { NgrxRangeViewAdapter } from './view-adapter/range';\r\nimport { NgrxSelectOption, NgrxSelectViewAdapter } from './view-adapter/select';\r\nimport { NgrxSelectMultipleOption, NgrxSelectMultipleViewAdapter } from './view-adapter/select-multiple';\r\n\r\nconst exportsAndDeclarations = [\r\n  NgrxFormControlDirective,\r\n  NgrxLocalFormControlDirective,\r\n  NgrxFormDirective,\r\n  NgrxLocalFormDirective,\r\n  NgrxCheckboxViewAdapter,\r\n  NgrxDefaultViewAdapter,\r\n  NgrxNumberViewAdapter,\r\n  NgrxRadioViewAdapter,\r\n  NgrxRangeViewAdapter,\r\n  NgrxSelectMultipleOption,\r\n  NgrxSelectMultipleViewAdapter,\r\n  NgrxSelectOption,\r\n  NgrxSelectViewAdapter,\r\n  NgrxFallbackSelectOption,\r\n  NgrxStatusCssClassesDirective,\r\n];\r\n\r\n@NgModule({\r\n  declarations: exportsAndDeclarations,\r\n  exports: exportsAndDeclarations,\r\n})\r\nexport class NgrxFormsModule { }\r\n"],"names":["clearAsyncErrorReducer","disableReducer","enableReducer","markAsDirtyReducer","markAsPristineReducer","markAsSubmittedReducer","markAsTouchedReducer","markAsUnsubmittedReducer","markAsUntouchedReducer","resetReducer","setAsyncErrorReducer","setErrorsReducer","setUserDefinedPropertyReducer","setValueReducer","startAsyncValidationReducer","dispatchActionPerChild","callChildReducers","childReducer","addControlReducer","removeControlReducer","InjectionToken","tslib_1.__decorate","HostListener","Input","Directive","forwardRef","Renderer2","ElementRef","isPlatformBrowser","tslib_1.__param","Optional","Inject","PLATFORM_ID","tslib_1.__values","Host","NULL_VIEW_ADAPTER","NULL_RENDERER","HostBinding","DOCUMENT","ActionsSubject","Self","NG_VALUE_ACCESSOR","tslib_1.__extends","EventEmitter","Output","NgModule"],"mappings":"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"}