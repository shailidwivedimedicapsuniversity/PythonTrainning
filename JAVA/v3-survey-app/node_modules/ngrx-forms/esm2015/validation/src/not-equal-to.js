import { unbox } from 'ngrx-forms';
/**
 * A validation function that requires the value to be strictly not equal (i.e. `!==`)
 * to another value.
 *
 * The validation error returned by this validation function has the following shape:
 *
```typescript
{
  notEqualTo: {
    comparand: T;
    actual: T;
  };
}
```
 *
 * Usually you would use this validation function in conjunction with the `validate`
 * update function to perform synchronous validation in your reducer:
 *
```typescript
updateGroup<MyFormValue>({
  name: validate(notEqualTo('John Doe')),
})
```
 */
export function notEqualTo(comparand) {
    return (value) => {
        value = unbox(value);
        if (value !== comparand) {
            return {};
        }
        return {
            notEqualTo: {
                comparand,
                actual: value,
            },
        };
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90LWVxdWFsLXRvLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmdyeC1mb3Jtcy92YWxpZGF0aW9uLyIsInNvdXJjZXMiOlsic3JjL25vdC1lcXVhbC10by50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQVMsS0FBSyxFQUFvQixNQUFNLFlBQVksQ0FBQztBQWM1RDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1Qkc7QUFDSCxNQUFNLFVBQVUsVUFBVSxDQUFJLFNBQVk7SUFDeEMsT0FBTyxDQUE4QixLQUFTLEVBQW9CLEVBQUU7UUFDbEUsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQVksQ0FBQztRQUVoQyxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7WUFDdkIsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUVELE9BQU87WUFDTCxVQUFVLEVBQUU7Z0JBQ1YsU0FBUztnQkFDVCxNQUFNLEVBQUUsS0FBSzthQUNkO1NBQ0YsQ0FBQztJQUNKLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb3hlZCwgdW5ib3gsIFZhbGlkYXRpb25FcnJvcnMgfSBmcm9tICduZ3J4LWZvcm1zJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTm90RXF1YWxUb1ZhbGlkYXRpb25FcnJvcjxUPiB7XHJcbiAgY29tcGFyYW5kOiBUO1xyXG4gIGFjdHVhbDogVDtcclxufVxyXG5cclxuLy8gQHRzLWlnbm9yZVxyXG5kZWNsYXJlIG1vZHVsZSAnbmdyeC1mb3Jtcy9zcmMvc3RhdGUnIHtcclxuICBleHBvcnQgaW50ZXJmYWNlIFZhbGlkYXRpb25FcnJvcnMge1xyXG4gICAgbm90RXF1YWxUbz86IE5vdEVxdWFsVG9WYWxpZGF0aW9uRXJyb3I8YW55PjtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBIHZhbGlkYXRpb24gZnVuY3Rpb24gdGhhdCByZXF1aXJlcyB0aGUgdmFsdWUgdG8gYmUgc3RyaWN0bHkgbm90IGVxdWFsIChpLmUuIGAhPT1gKVxyXG4gKiB0byBhbm90aGVyIHZhbHVlLlxyXG4gKlxyXG4gKiBUaGUgdmFsaWRhdGlvbiBlcnJvciByZXR1cm5lZCBieSB0aGlzIHZhbGlkYXRpb24gZnVuY3Rpb24gaGFzIHRoZSBmb2xsb3dpbmcgc2hhcGU6XHJcbiAqXHJcbmBgYHR5cGVzY3JpcHRcclxue1xyXG4gIG5vdEVxdWFsVG86IHtcclxuICAgIGNvbXBhcmFuZDogVDtcclxuICAgIGFjdHVhbDogVDtcclxuICB9O1xyXG59XHJcbmBgYFxyXG4gKlxyXG4gKiBVc3VhbGx5IHlvdSB3b3VsZCB1c2UgdGhpcyB2YWxpZGF0aW9uIGZ1bmN0aW9uIGluIGNvbmp1bmN0aW9uIHdpdGggdGhlIGB2YWxpZGF0ZWBcclxuICogdXBkYXRlIGZ1bmN0aW9uIHRvIHBlcmZvcm0gc3luY2hyb25vdXMgdmFsaWRhdGlvbiBpbiB5b3VyIHJlZHVjZXI6XHJcbiAqXHJcbmBgYHR5cGVzY3JpcHRcclxudXBkYXRlR3JvdXA8TXlGb3JtVmFsdWU+KHtcclxuICBuYW1lOiB2YWxpZGF0ZShub3RFcXVhbFRvKCdKb2huIERvZScpKSxcclxufSlcclxuYGBgXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gbm90RXF1YWxUbzxUPihjb21wYXJhbmQ6IFQpIHtcclxuICByZXR1cm4gPFRWIGV4dGVuZHMgVCB8IEJveGVkPFQ+ID0gVD4odmFsdWU6IFRWKTogVmFsaWRhdGlvbkVycm9ycyA9PiB7XHJcbiAgICB2YWx1ZSA9IHVuYm94KHZhbHVlKSBhcyBUIGFzIFRWO1xyXG5cclxuICAgIGlmICh2YWx1ZSAhPT0gY29tcGFyYW5kKSB7XHJcbiAgICAgIHJldHVybiB7fTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBub3RFcXVhbFRvOiB7XHJcbiAgICAgICAgY29tcGFyYW5kLFxyXG4gICAgICAgIGFjdHVhbDogdmFsdWUsXHJcbiAgICAgIH0sXHJcbiAgICB9O1xyXG4gIH07XHJcbn1cclxuIl19