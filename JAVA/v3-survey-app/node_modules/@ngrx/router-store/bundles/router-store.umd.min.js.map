{"version":3,"sources":["modules/router-store/router-store.umd.js"],"names":["global","factory","exports","module","require","define","amd","ngrx","routerStore","ng","core","router","rxjs","this","store","RouterStateSerializer","DefaultRouterStateSerializer","prototype","serialize","routerState","root","serializeRoute","url","route","_this","children","map","c","params","paramMap","data","outlet","routeConfig","component","undefined","queryParams","queryParamMap","fragment","parent","firstChild","pathFromRoot","__assign","Object","assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","ROUTER_NAVIGATION","ROUTER_CANCEL","ROUTER_ERROR","_ROUTER_CONFIG","InjectionToken","ROUTER_CONFIG","DEFAULT_ROUTER_FEATURENAME","_createDefaultRouterConfig","config","_config","stateKey","ɵ0","StoreRouterConnectingModule","store$$1","router$$1","serializer","dispatchTriggeredByRouter","navigationTriggeredByDispatch","setUpBeforePreactivationHook","setUpStoreStateListener","setUpStateRollbackEvents","forRoot","ngModule","providers","provide","useValue","useFactory","deps","hooks","beforePreactivation","shouldDispatchRouterNavigation","dispatchRouterNavigation","of","subscribe","storeState","pipe","select","navigateIfNeeded","state","navigateByUrl","events","e","RoutesRecognized","lastRoutesRecognized","NavigationCancel","dispatchRouterCancel","NavigationError","dispatchRouterError","NavigationEnd","dispatchRouterAction","event","id","urlAfterRedirects","type","payload","dispatch","decorators","NgModule","args","useClass","ctorParameters","Store","Router","Inject","ɵngrx_modules_router_store_router_store_a","ɵngrx_modules_router_store_router_store_b","routerReducer","action","navigationId","defineProperty","value"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 6.0.1\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/router'), require('@ngrx/store'), require('rxjs')) :\n\ttypeof define === 'function' && define.amd ? define('@ngrx/router-store', ['exports', '@angular/core', '@angular/router', '@ngrx/store', 'rxjs'], factory) :\n\t(factory((global.ngrx = global.ngrx || {}, global.ngrx.routerStore = {}),global.ng.core,global.ng.router,global['@ngrx/store'],global.rxjs));\n}(this, (function (exports,core,router,store,rxjs) { 'use strict';\n\nvar RouterStateSerializer = /** @class */ (function () {\n    function RouterStateSerializer() {\n    }\n    return RouterStateSerializer;\n}());\nvar DefaultRouterStateSerializer = /** @class */ (function () {\n    function DefaultRouterStateSerializer() {\n    }\n    DefaultRouterStateSerializer.prototype.serialize = function (routerState) {\n        return {\n            root: this.serializeRoute(routerState.root),\n            url: routerState.url,\n        };\n    };\n    DefaultRouterStateSerializer.prototype.serializeRoute = function (route) {\n        var _this = this;\n        var children = route.children.map(function (c) { return _this.serializeRoute(c); });\n        return {\n            params: route.params,\n            paramMap: route.paramMap,\n            data: route.data,\n            url: route.url,\n            outlet: route.outlet,\n            routeConfig: {\n                component: route.routeConfig ? route.routeConfig.component : undefined,\n            },\n            queryParams: route.queryParams,\n            queryParamMap: route.queryParamMap,\n            fragment: route.fragment,\n            component: (route.routeConfig\n                ? route.routeConfig.component\n                : undefined),\n            root: undefined,\n            parent: undefined,\n            firstChild: children[0],\n            pathFromRoot: undefined,\n            children: children,\n        };\n    };\n    return DefaultRouterStateSerializer;\n}());\n\nvar __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n/**\n * An action dispatched when the router navigates.\n */\nvar ROUTER_NAVIGATION = 'ROUTER_NAVIGATION';\n/**\n * An action dispatched when the router cancels navigation.\n */\nvar ROUTER_CANCEL = 'ROUTER_CANCEL';\n/**\n * An action dispatched when the router errors.\n */\nvar ROUTER_ERROR = 'ROUTE_ERROR';\nfunction routerReducer(state, action) {\n    switch (action.type) {\n        case ROUTER_NAVIGATION:\n        case ROUTER_ERROR:\n        case ROUTER_CANCEL:\n            return {\n                state: action.payload.routerState,\n                navigationId: action.payload.event.id,\n            };\n        default:\n            return state;\n    }\n}\nvar _ROUTER_CONFIG = new core.InjectionToken('@ngrx/router-store Internal Configuration');\nvar ROUTER_CONFIG = new core.InjectionToken('@ngrx/router-store Configuration');\nvar DEFAULT_ROUTER_FEATURENAME = 'routerReducer';\nfunction _createDefaultRouterConfig(config) {\n    var _config;\n    if (typeof config === 'function') {\n        _config = config();\n    }\n    else {\n        _config = config || {};\n    }\n    return __assign({ stateKey: DEFAULT_ROUTER_FEATURENAME }, _config);\n}\nvar ɵ0 = { stateKey: DEFAULT_ROUTER_FEATURENAME };\n/**\n * Connects RouterModule with StoreModule.\n *\n * During the navigation, before any guards or resolvers run, the router will dispatch\n * a ROUTER_NAVIGATION action, which has the following signature:\n *\n * ```\n * export type RouterNavigationPayload = {\n *   routerState: SerializedRouterStateSnapshot,\n *   event: RoutesRecognized\n * }\n * ```\n *\n * Either a reducer or an effect can be invoked in response to this action.\n * If the invoked reducer throws, the navigation will be canceled.\n *\n * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n *\n * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n * which can be used to restore the consistency of the store.\n *\n * Usage:\n *\n * ```typescript\n * @NgModule({\n *   declarations: [AppCmp, SimpleCmp],\n *   imports: [\n *     BrowserModule,\n *     StoreModule.forRoot(mapOfReducers),\n *     RouterModule.forRoot([\n *       { path: '', component: SimpleCmp },\n *       { path: 'next', component: SimpleCmp }\n *     ]),\n *     StoreRouterConnectingModule\n *   ],\n *   bootstrap: [AppCmp]\n * })\n * export class AppModule {\n * }\n * ```\n */\nvar StoreRouterConnectingModule = /** @class */ (function () {\n    function StoreRouterConnectingModule(store$$1, router$$1, serializer, config) {\n        this.store = store$$1;\n        this.router = router$$1;\n        this.serializer = serializer;\n        this.config = config;\n        this.dispatchTriggeredByRouter = false;\n        this.navigationTriggeredByDispatch = false;\n        this.stateKey = this.config.stateKey;\n        this.setUpBeforePreactivationHook();\n        this.setUpStoreStateListener();\n        this.setUpStateRollbackEvents();\n    }\n    StoreRouterConnectingModule.forRoot = function (config) {\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: StoreRouterConnectingModule,\n            providers: [\n                { provide: _ROUTER_CONFIG, useValue: config },\n                {\n                    provide: ROUTER_CONFIG,\n                    useFactory: _createDefaultRouterConfig,\n                    deps: [_ROUTER_CONFIG],\n                },\n            ],\n        };\n    };\n    StoreRouterConnectingModule.prototype.setUpBeforePreactivationHook = function () {\n        var _this = this;\n        this.router.hooks.beforePreactivation = function (routerState) {\n            _this.routerState = _this.serializer.serialize(routerState);\n            if (_this.shouldDispatchRouterNavigation()) {\n                _this.dispatchRouterNavigation();\n            }\n            return rxjs.of(true);\n        };\n    };\n    StoreRouterConnectingModule.prototype.setUpStoreStateListener = function () {\n        var _this = this;\n        this.store.subscribe(function (s) {\n            _this.storeState = s;\n        });\n        this.store.pipe(store.select(this.stateKey)).subscribe(function () {\n            _this.navigateIfNeeded();\n        });\n    };\n    StoreRouterConnectingModule.prototype.shouldDispatchRouterNavigation = function () {\n        if (!this.storeState[this.stateKey])\n            return true;\n        return !this.navigationTriggeredByDispatch;\n    };\n    StoreRouterConnectingModule.prototype.navigateIfNeeded = function () {\n        if (!this.storeState[this.stateKey] ||\n            !this.storeState[this.stateKey].state) {\n            return;\n        }\n        if (this.dispatchTriggeredByRouter)\n            return;\n        if (this.router.url !== this.storeState[this.stateKey].state.url) {\n            this.navigationTriggeredByDispatch = true;\n            this.router.navigateByUrl(this.storeState[this.stateKey].state.url);\n        }\n    };\n    StoreRouterConnectingModule.prototype.setUpStateRollbackEvents = function () {\n        var _this = this;\n        this.router.events.subscribe(function (e) {\n            if (e instanceof router.RoutesRecognized) {\n                _this.lastRoutesRecognized = e;\n            }\n            else if (e instanceof router.NavigationCancel) {\n                _this.dispatchRouterCancel(e);\n            }\n            else if (e instanceof router.NavigationError) {\n                _this.dispatchRouterError(e);\n            }\n            else if (e instanceof router.NavigationEnd) {\n                _this.dispatchTriggeredByRouter = false;\n                _this.navigationTriggeredByDispatch = false;\n            }\n        });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterNavigation = function () {\n        this.dispatchRouterAction(ROUTER_NAVIGATION, {\n            routerState: this.routerState,\n            event: new router.RoutesRecognized(this.lastRoutesRecognized.id, this.lastRoutesRecognized.url, this.lastRoutesRecognized.urlAfterRedirects, this.routerState),\n        });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterCancel = function (event) {\n        this.dispatchRouterAction(ROUTER_CANCEL, {\n            routerState: this.routerState,\n            storeState: this.storeState,\n            event: event,\n        });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterError = function (event) {\n        this.dispatchRouterAction(ROUTER_ERROR, {\n            routerState: this.routerState,\n            storeState: this.storeState,\n            event: new router.NavigationError(event.id, event.url, \"\" + event),\n        });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterAction = function (type, payload) {\n        this.dispatchTriggeredByRouter = true;\n        try {\n            this.store.dispatch({ type: type, payload: payload });\n        }\n        finally {\n            this.dispatchTriggeredByRouter = false;\n            this.navigationTriggeredByDispatch = false;\n        }\n    };\n    StoreRouterConnectingModule.decorators = [\n        { type: core.NgModule, args: [{\n                    providers: [\n                        { provide: RouterStateSerializer, useClass: DefaultRouterStateSerializer },\n                        {\n                            provide: _ROUTER_CONFIG,\n                            useValue: ɵ0,\n                        },\n                        {\n                            provide: ROUTER_CONFIG,\n                            useFactory: _createDefaultRouterConfig,\n                            deps: [_ROUTER_CONFIG],\n                        },\n                    ],\n                },] }\n    ];\n    /** @nocollapse */\n    StoreRouterConnectingModule.ctorParameters = function () { return [\n        { type: store.Store, },\n        { type: router.Router, },\n        { type: RouterStateSerializer, },\n        { type: undefined, decorators: [{ type: core.Inject, args: [ROUTER_CONFIG,] },] },\n    ]; };\n    return StoreRouterConnectingModule;\n}());\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵngrx_modules_router_store_router_store_a = _ROUTER_CONFIG;\nexports.ɵngrx_modules_router_store_router_store_b = _createDefaultRouterConfig;\nexports.ROUTER_ERROR = ROUTER_ERROR;\nexports.ROUTER_CANCEL = ROUTER_CANCEL;\nexports.ROUTER_NAVIGATION = ROUTER_NAVIGATION;\nexports.routerReducer = routerReducer;\nexports.StoreRouterConnectingModule = StoreRouterConnectingModule;\nexports.ROUTER_CONFIG = ROUTER_CONFIG;\nexports.DEFAULT_ROUTER_FEATURENAME = DEFAULT_ROUTER_FEATURENAME;\nexports.RouterStateSerializer = RouterStateSerializer;\nexports.DefaultRouterStateSerializer = DefaultRouterStateSerializer;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router-store.umd.js.map\n"]}